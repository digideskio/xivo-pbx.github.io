<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>XiVO Blog</title><link href="http://blog.xivo.io/" rel="alternate"></link><link href="http://blog.xivo.io/feeds/all.atom.xml" rel="self"></link><id>http://blog.xivo.io/</id><updated>2016-04-04T00:00:00-04:00</updated><entry><title>Sprint Review 16.04</title><link href="http://blog.xivo.io/sprint-review-1604.html" rel="alternate"></link><updated>2016-04-04T00:00:00-04:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2016-04-04:sprint-review-1604.html</id><summary type="html">&lt;p&gt;Greetings fellow XiVO fans, it is my pleasure to announce the release of XiVO 16.04.&lt;/p&gt;
&lt;h2&gt;New features in this sprint&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Fax&lt;/strong&gt;: The Fax system in XiVO has been improved, thanks to the XiVO community (thank you Julien Revert). Fax files can be
converted to PDF on reception. Files can also be deposited on a FTP server. Further details on how to configure these
features can be found
&lt;a href="http://documentation.xivo.io/en/latest/administration/fax/fax.html#using-the-ftp-backend"&gt;in the documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Forwards&lt;/strong&gt;: The behaviour of the call forwards BLFs is completely consistent across the unconditional, busy and no-answer
forwards. A BLF (Busy Lamp Field) is a small light found next to the function key on a phone. The light helps indicate
to the user if any call forwards are currently active.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XiVO Client&lt;/strong&gt;: The Xlet People has received small mouse improvements: it is now possible to copy contact informations
  to the clipboard, such as the phone number or email via a right click.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;REST API&lt;/strong&gt;: New APIs for managing forwards and services have been integrated to the user resource. All call forwards
can now be fully controlled through the REST API. This new API represents an additional step towards our long-term goal
of offering a PBX system that is more flexible, customizable and useful for third party developers.&lt;/p&gt;
&lt;h2&gt;Technical Features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;SCCP&lt;/strong&gt;: SCCP phones can be configured to use the G.722 codec.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Digium&lt;/strong&gt;: The firmware for Digium cards has been updated to the latest version which supports TE133 and TE435
cards.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Yealink&lt;/strong&gt;: The firmware for V80 has been updated to the latest version. Official support for the Yealink T40P and
  community support for the T27P, T29G and T49G has also been added.&lt;/p&gt;
&lt;h2&gt;Ongoing features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;REST API&lt;/strong&gt;: We are working on new APIs for managing call transfers and call permissions. Call permissions enable
administrators to control which phone numbers are allowed to be called by users. This will offer third parties more
flexibility when developing applications that control the call flows.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web applications&lt;/strong&gt;: Work on tools for connecting web applications to XiVO is ongoing. A good example of a Web
  application is a switchboard application, where the operator may answer, hold and transfer calls from his browser,
  effectively controlling his physical phone. This may also be coupled with a WebRTC softphone, in order to have a full
  Web switchboard environment.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;My fellow xivoists, as the &lt;strong&gt;Lord of XiVO&lt;/strong&gt; allow me to bid you a happy and invigorating farewell. I wish you shall
remain in high spirits until our next fateful encounter, 3 weeks from now. May the freedom of XiVO bless your
communications across the vast VoIP expanse.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/en/latest/upgrade/upgrade.html#id2"&gt;XiVO 16.04 Upgrade notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.xivo.io/versions/240"&gt;XiVO 16.04 Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/en/latest/api_sdk/rest_api/confd/changelog.html"&gt;REST API Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="XiVO"></category><category term="development"></category></entry><entry><title>Sprint Review 16.03</title><link href="http://blog.xivo.io/sprint-review-1603.html" rel="alternate"></link><updated>2016-03-14T00:00:00-04:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2016-03-14:sprint-review-1603.html</id><summary type="html">&lt;p&gt;Greetings fellow XiVO fans, it is my pleasure to announce the release of XiVO 16.03.&lt;/p&gt;
&lt;h2&gt;New features in this sprint&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;REST API:&lt;/strong&gt; A new API for associating a device with a line has been added. Devices can now be fully provisioned and
controlled via the REST API. This new API represents an additional step towards our long-term goal of offering a PBX
system that is more flexible, customizable and useful for third party developers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Switchboard Statistics&lt;/strong&gt;: Calls that go through a switchboard will now generate statistics. Statistics provide
valuable information to managers of an organization when analyzing the amount of calls they receive. These statistics
can be consulted by downloading a CSV file.&lt;/p&gt;
&lt;h2&gt;Technical Features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Websocketd&lt;/strong&gt;: Connections made to websocketd can now use backends such as "xivo_user" or "ldap_user" to authenticate
themselves. These connections will only receive events that they are authorized to see.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Service discovery&lt;/strong&gt;: xivo-dird and xivo-agentd now register their services via consul.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LDAP authentication&lt;/strong&gt;: After discussions with members of the community, the LDAP plugin has been rewritten in order to
adapt more easily to the needs of our users. We have also added these new features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The plugin can optionally be configured to find a user via an LDAP search&lt;/li&gt;
&lt;li&gt;The attributes used for matching a user's username and email are configurable&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Security Advisory&lt;/h2&gt;
&lt;p&gt;A security bug has been fixed in this sprint. Security advisories for vulnerable versions of XiVO
can be consulted on the &lt;a href="http://mirror.xivo.io/security"&gt;security advisory page&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Ongoing features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;REST API&lt;/strong&gt;: We are working on new APIs for managing a users's call services and call forwards. This will offer third
parties more flexibility when developing applications that manage a user's services.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web applications&lt;/strong&gt;: Work on tools for connecting web applications to XiVO is ongoing. A good example of a Web application is a switchboard application, where the operator may answer, hold and transfer calls from his browser, effectively controlling his physical phone. This may also be coupled with a WebRTC softphone, in order to have a full Web switchboard environment.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;See you at the next sprint review.&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/en/stable/upgrade/upgrade.html#id2"&gt;XiVO 16.03 Upgrade notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.xivo.io/versions/239"&gt;XiVO 16.03 Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/en/stable/api_sdk/rest_api/confd/changelog.html"&gt;REST API Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.xivo.io/boards/8/topics/5048"&gt;Discussion on LDAP (fr)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="XiVO"></category><category term="development"></category></entry><entry><title>Sprint Review 16.02</title><link href="http://blog.xivo.io/sprint-review-1602.html" rel="alternate"></link><updated>2016-02-19T00:00:00-05:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2016-02-19:sprint-review-1602.html</id><summary type="html">&lt;p&gt;Hello,&lt;/p&gt;
&lt;h2&gt;New features in this sprint&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Users import&lt;/strong&gt;: The CSV import of users now supports setting the call permissions for each user. Call permissions define which restriction are put on users regarding which numbers they can dial.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XiVO Client&lt;/strong&gt;: All communications between the CTI server and the XiVO Clients will now be encrypted by default.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LDAP authentication&lt;/strong&gt;: The LDAP authentication mechanisms now uses the new user field for email address, and is not considered experimental anymore. However, it only supports simple LDAP hierarchies, and we are going to improve it to be more flexible.&lt;/p&gt;
&lt;h2&gt;Technical Features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Asterisk upgrade&lt;/strong&gt;: Asterisk has been upgraded from version 13.7.0 to 13.7.2&lt;/p&gt;
&lt;h2&gt;Ongoing features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt;: We are extending the permission system to all REST APIs. This will allow a finer grained access to the REST APIs and reduce the chances of accidentally breaking the rest of the system. For example, users will be able to modify their function keys, without having access to the function keys of other users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;REST API&lt;/strong&gt;: We are working on a new REST API for associating devices with SIP or SCCP accounts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web applications&lt;/strong&gt;: We are working towards making Web applications connected to XiVO possible. The two things it needs is REST APIs, which are growing more useful, and events, which will be provided via Websockets, introduced in this sprint. A good example of a Web application is a switchboard application, where the operator may answer, hold and transfer calls from his browser, effectively controlling his physical phone. This may also be coupled with a WebRTC softphone, in order to have a full Web switchboard environment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Switchboard&lt;/strong&gt;: We are changing the internals of the Switchboard feature so that we can control more precisely how calls are answered, transferred, etc.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;See you at the next sprint review.&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/en/stable/upgrade/upgrade.html#id2"&gt;XiVO 16.02 Upgrade notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.xivo.io/versions/238"&gt;XiVO 16.02 Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/en/stable/api_sdk/rest_api/confd/changelog.html"&gt;REST API Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="XiVO"></category><category term="development"></category></entry><entry><title>Sprint Review 16.01</title><link href="http://blog.xivo.io/sprint-review-1601.html" rel="alternate"></link><updated>2016-02-01T00:00:00-05:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2016-02-01:sprint-review-1601.html</id><summary type="html">&lt;p&gt;Greetings fellow XiVO fans, I am pleased to announce the release of XiVO 16.01.&lt;/p&gt;
&lt;h2&gt;New features in this sprint&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;XiVO Client Authentication&lt;/strong&gt;: The XiVO client can use LDAP authentication for connecting to the XiVO server. This
makes it easier for administrators to reuse services that manage their user accounts, such as Active Directory. LDAP
authentication is managed by a new authentication backend configurable via the CTI. This backend requires manual
configuration on the server. Further details can be obtained in the upgrade notes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XiVO Client Connections&lt;/strong&gt;: The XiVO client will issue a warning when it is unable to connect to the server using an
encrypted connection. Users will have the option of reconnecting to the server using an unencrypted connection.
Encrypted connections can be reactivated by clicking on the lock in the client's configuration window.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SIP:&lt;/strong&gt; A new tab has been added to the page for configuring advanced options in SIP accounts. Advanced options can be
added via the "advanced" tab on the lines page. These parameters will be included along side the rest of the SIP
configuration in Asterisk. The advanced tab offers more flexibility to advanced users of Asterisk, while still keeping
the rest of the UI simple enough for regular users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web Interface:&lt;/strong&gt; A few minor improvements have been added to the web interface's UI:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A search bar has been added to the context page&lt;/li&gt;
&lt;li&gt;The user's extension will now be displayed next to his name in multiselect boxes&lt;/li&gt;
&lt;li&gt;The line associated to a device can be edited by clicking on its number in the device list&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;REST API:&lt;/strong&gt; A new API for managing "custom" endpoints has been added. Custom endpoints enable the use of communication
protocols that are supported by Asterisk but not fully managed by XiVO, such as DAHDI cards. This new API represents an
additional step towards our long-term goal of offering a PBX system that is more flexible, customizable and useful for
third party developers.&lt;/p&gt;
&lt;h2&gt;Technical Features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Snom phones:&lt;/strong&gt; The plugin for Snom phones has been upgraded to version 8.7.5.35 of the firmware.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DAHDI upgrade:&lt;/strong&gt; DAHDI has been upgraded to version 2.11&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consul upgrade:&lt;/strong&gt; Consul has been upgraded to version 0.6.3&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Asterisk upgrade:&lt;/strong&gt; Asterisk has been upgraded to version 13.7.0&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web account ACLs&lt;/strong&gt;: The permission system used for web service accounts has been replaced by Access Control Lists
(ACL). ACLs are a part of our ongoing work on our new permission system. This system improves security in XiVO for
various subsystems, such as communication between services. In the long term, ACLs will also permit users to access
parts of in a restricted mode, giving them the possibility of customizing different features without impacting other
parts of the system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTI protocol version&lt;/strong&gt;: The CTI protocol has been upgraded to 2.0. XiVO Clients will issue a warning when connecting
to a server that uses a version of the protocol that is incompatible with the current version of the client.&lt;/p&gt;
&lt;h2&gt;Ongoing features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;REST API:&lt;/strong&gt; We will be working on a new API for associating devices with SIP or SCCP accounts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Switchboard:&lt;/strong&gt; We are changing the internals of the Switchboard feature so that we can control more precisely how
calls are answered, transferred, etc.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;My fellow xivoists, as the &lt;strong&gt;Lord of XiVO&lt;/strong&gt; allow me to bid you a happy and invigorating farewell. I wish you shall
remain in high spirits until our next fateful encounter, 3 weeks from now. May the freedom of XiVO bless your
communications across the vast VoIP expanse.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/en/stable/upgrade/upgrade.html#id2"&gt;XiVO 16.01 Upgrade notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.xivo.io/versions/237"&gt;XiVO 16.01 Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/en/stable/api_sdk/rest_api/confd/changelog.html"&gt;REST API Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/en/stable/contributors/cti_server/cti_protocol.html#id2"&gt;CTI Protocol Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="XiVO"></category><category term="development"></category></entry><entry><title>Sprint Review 15.20</title><link href="http://blog.xivo.io/sprint-review-1520.html" rel="alternate"></link><updated>2016-01-08T12:00:00-05:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2016-01-08:sprint-review-1520.html</id><summary type="html">&lt;p&gt;Greetings fellow XiVO fans, allow me to wish you all a happy new year ! I am pleased to announce that the first version
of XiVO in 2016, version 15.20, has been released. Since we have started a new year, the next version of XiVO will be
numbered 16.01.&lt;/p&gt;
&lt;h2&gt;New features in this sprint&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;REST API&lt;/strong&gt;: New APIs for managing users via CSV files have been added. CSV files can now be used for updating users
and their associated resources such as lines, extensions, CTI profiles, incalls and voicemails. Users can also be
exported to a CSV file. The goal of this API is to make the management of a XiVO more efficient when administrators need
to modify a great number of users at the same time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XiVO Client&lt;/strong&gt;: Contact searches using context separation can now be activated through the web interface. Context
separation allows groups of users to be isolated from one another by grouping them into "contexts". This feature becomes
useful when you want to separate users from different organizations, but still keep them all on the same server. For
example: schools, business offices, etc. In version 15.19, this feature needed manual configuration on the server. This
configuration is no longer necessary.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XiVO Client&lt;/strong&gt;: Users can now chat with people on other servers. Before, people using a XiVO Client could only chat
with users that were on the same server. With version 15.20, people will be able to chat with users on other servers
when these servers have been &lt;a href="http://documentation.xivo.fr/en/stable/scalability_and_distributed_systems/contact_and_presence_sharing.html"&gt;configured to communicate together&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Technical Features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;OS Upgrade&lt;/strong&gt;: 15.20 will be the first version of XiVO running under the latest version of Debian GNU/Linux, also known
as "Jessie". Many libraries and programs that run on a XiVO server have also been upgraded. This upgrade helps to
improve the overall stability and security of XiVO and allows to use the latest technologies available in order to
develop new and exciting features.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XiVO Client connections&lt;/strong&gt;: Both standard and encrypted connections now use port 5003. In previous versions, encrypted
connections had to be reconfigured client-side in order to use a different port. Changing the port is no longer
necessary. Encrypted connections can now be activated by simply clicking on the lock in the client's configuration
window.&lt;/p&gt;
&lt;h2&gt;Ongoing features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Lines:&lt;/strong&gt; We are revamping the web interface in a similar fashion to what was done for voicemails. The goal is to make
configuration of advanced parameters easier while still keeping the interface simple.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Switchboard:&lt;/strong&gt; We are changing the internals of the Switchboard feature so that we can control more precisely how
calls are answered, transferred, etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LDAP authentication&lt;/strong&gt;: We are working on new authentication mechanisms. We are adding LDAP authentication to the XiVO
Client. This allows administrators to reuse their existing infrastructure in order to manage and authenticate users
from different systems, such as an Active Directory server.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;My fellow xivoists, as the &lt;strong&gt;Lord of XiVO&lt;/strong&gt; allow me to bid you a happy and invigorating farewell. I
wish you shall remain in high spirits until our next fateful encounter, 3 weeks from now. May the
freedom of XiVO bless your communications across the vast VoIP expanse.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/en/stable/upgrade/upgrade.html#id2"&gt;XiVO 15.20 Upgrade notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.xivo.io/versions/236"&gt;XiVO 15.20 Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/en/stable/api_sdk/rest_api/confd/changelog.html"&gt;REST API Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="XiVO"></category><category term="development"></category></entry><entry><title>Sprint Review 15.19</title><link href="http://blog.xivo.io/sprint-review-1519.html" rel="alternate"></link><updated>2015-12-04T12:00:00-05:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2015-12-04:sprint-review-1519.html</id><summary type="html">&lt;p&gt;Greetings fellow XiVO fans ! I am pleased to announce that version 15.19 of XiVO has been released.
This will be our last version released in 2015. The next version, 15.20, will be released during
the month of January in 2016.&lt;/p&gt;
&lt;h2&gt;New features in this sprint&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Call Forwards&lt;/strong&gt;: Unconditional forwards on a phone can be updated through a single operation. When you wish
to update the phone number on a forward, simply dial &lt;code&gt;*21&amp;lt;new_number&amp;gt;&lt;/code&gt; and the forward will be
automatically updated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;REST API:&lt;/strong&gt; A new API for importing users en masse has been added. A CSV file can be used for
importing users, lines, extensions, cti profiles, incalls, and voicemails in a single operation. The
goal of this API is to accelerate the installation and configuration of a server when deploying one
or more XiVOs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;REST API:&lt;/strong&gt; The search system on confd APIs has been improved. You can now filter results using
exact matches on any field for a given resource. For example : If you have two users named "John
Smith" and "Jane Smith", you can search for users who only have "Jane" as a firstname. These
improvements allow API users to search and filter results more precisely.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;REST API:&lt;/strong&gt; A new API for remotely initiating calls has been added. This feature can be used
for implementing custom services related to calling services, such as automatically dialing
a client's phone number, or call reminders at a specific time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XiVO Client&lt;/strong&gt;: The new People xlet now has buttons for transfering calls to voicemails, sending
emails, and chatting with other users. This means that it is now feature complete and can be used as
a replacement for the old Contacts xlet. The XiVO dev team is very proud to have completed this major
milestone ! The old Contacts xlet has now been removed from the client.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Caller ID:&lt;/strong&gt; The caller ID lookup service has been improved. Lookups now include searches in your
personal contacts. This means that when one of your personal contacts calls you, instead of seeing
only her number, you will see her name along with her number.&lt;/p&gt;
&lt;h2&gt;Security Advisory&lt;/h2&gt;
&lt;p&gt;2 security bugs have been fixed in this sprint. Security advisories for vunerable versions of xivo
have been released and can be consulted on the &lt;a href="http://mirror.xivo.io/security"&gt;security advisory page&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Ongoing features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;OS Upgrade:&lt;/strong&gt; We will be upgrading the version of Debian GNU/Linux, on which XiVO is based, from
Wheezy to Jessie. This will upgrade many libraires and programs running on
a server to newer versions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;User import:&lt;/strong&gt; We will be adding more features to the user import API in order
to update information that has already been imported.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lines:&lt;/strong&gt; We are revamping the web interface in a similar fashion to what was done for
voicemails. The goal is to make configuration of advanced parameters easier while
still keeping the interface simple.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Switchboard:&lt;/strong&gt; We are changing the internals of the Switchboard feature so that
we can control more precisely how calls are answered, transferred, etc.&lt;/p&gt;
&lt;h2&gt;Technical features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;We have started working on a permission system in order to better secure communications between
 services on a XiVO server. In the long term, this work will also enable users to access
 various xivo subsystems in a restricted mode, allowing them the possibility of customizing
 different features without impacting other parts of the system.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;My fellow xivoists, as the &lt;strong&gt;Lord of XiVO&lt;/strong&gt; allow me to wish you all a merry christmas and a
happy new year ! May your spirits remain joyous until the end of the year and throughout 2016.
May the freedom of XiVO bless your communications across the vast VoIP expanse.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="XiVO Christmas Tree" src="http://blog.xivo.io/public/xivo_xmas_tree_2015.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://projects.xivo.io/versions/235" title=" XiVO 15.19 Roadmap"&gt;XiVO 15.19 Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.fr/en/latest/api_sdk/rest_api/confd/changelog.html"&gt;xivo-confd Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="XiVO"></category><category term="development"></category></entry><entry><title>Sprint Review 15.18</title><link href="http://blog.xivo.io/sprint-review-1518.html" rel="alternate"></link><updated>2015-11-13T12:00:00-05:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2015-11-13:sprint-review-1518.html</id><summary type="html">&lt;p&gt;Hi everyone, this release was delayed by a week because we moved our development
office in another spot in Quebec City. It's smaller, but more adapted to our
team size (there are 6 of us now, and the previous office was designed for more
than 10 people). And we managed to keep &lt;a href="http://blog.xivo.io/we-are-6-and-yes-we-have-more-than-150-phones.html"&gt;all our
phones&lt;/a&gt;.
Also, we've been told it was hard to know when the next release was due, so
we've added the planned release dates in the
&lt;a href="http://projects.xivo.io/projects/xivo/roadmap"&gt;Roadmap&lt;/a&gt;. Here are the news for
the version 15.18 of XiVO.&lt;/p&gt;
&lt;h2&gt;New features in this sprint&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;REST API:&lt;/strong&gt; A new API for managing SCCP accounts has been added. The API can
be used for creating SCCP accounts and associating them with users on a XiVO
server. This API also offers third parties, such as developers or
administrators, the flexibility of configuring all of the advanced SCCP
parameters offered by asterisk. This new API helps us expand on our goal of
offering a more customizable and flexible system ideal for use in a wide range
of environments, such as cloud infrastructures.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fax:&lt;/strong&gt; The fax feature in the XiVO Client may now be used with encryption and
NAT. We are fixing these issues so that we can make the XiVO Client encryption
usable by default, to allow the new authentication system to be used (which will
allow LDAP authentication).&lt;/p&gt;
&lt;h2&gt;Ongoing features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;HTTPS:&lt;/strong&gt; We continue to extend the use of encryption for communication between
XiVO components. From this version, consul and xivo-agent may only communicate
over HTTPS. The goal is to allow XiVO components to be installed on different
machines without sending important information in clear text, so that the load
may be easily balanced in order to increase the maximum number of calls that
XiVO can sustain.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lines:&lt;/strong&gt; We are revamping the web interface in a similar fashion to what was done for
voicemails. The goal is to make configuration of advanced parameters easier while
still keeping the interface simple.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CTI:&lt;/strong&gt; We are also working on making XiVO Client statuses to be visible across
multiple XiVO servers. This means that we can see whether a user is on the phone
or available, even if he is registered on another XiVO server.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Caller ID:&lt;/strong&gt; Finally, we are changing the system of incoming caller ID lookup,
so that it includes your personal contacts. This means that, when one of your
personal contacts calls you, instead of seeing only her number, you will see her
name (that you entered) along with her number.&lt;/p&gt;
&lt;h2&gt;Technical features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Polycom phones:&lt;/strong&gt; the new firmwares VVX 5.3.1 and SoundStation 4.0.9 are available.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Snom phones:&lt;/strong&gt; the new firmware 8.7.5.28 is available.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;See you at the next sprint review.&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://projects.xivo.io/versions/234" title=" XiVO 15.18 Roadmap"&gt;XiVO 15.18 Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.fr/en/latest/api_sdk/rest_api/confd/changelog.html"&gt;xivo-confd Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="XiVO"></category><category term="development"></category></entry><entry><title>Automatically Disconnect an Agent if his SIP Account is Inactive</title><link href="http://blog.xivo.io/automatically-disconnect-an-agent-if-inactive.html" rel="alternate"></link><updated>2015-10-29T09:00:00-04:00</updated><author><name>Nicolas Vdb</name></author><id>tag:blog.xivo.io,2015-10-29:automatically-disconnect-an-agent-if-inactive.html</id><summary type="html">&lt;p&gt;Hello, my name is Nicolas (h4wk3r on irc #xivo). I am a currently alternating between my studies for
a Master in Computer Engineering and my work in a call center. I could not find any information in
the XiVO CTI when a phone was disconnected, so I worked on a solution for generating this
information. This allows agents to know their phone's status.&lt;/p&gt;
&lt;p&gt;Let us imagine the following scenario: An agent in a call center is connected with is softphone 'N.
SIP XXX'. He logs in via his XiVO Client in order to receive calls from his assigned queues. One of
the following 3 events occurs :&lt;/p&gt;
&lt;p&gt;A – The softphone is disconnected from asterisk .
B – The agent finishes his day, turns off his softphone but forgets to disconnect his XiVO Client
C – The agent is at home, the VPN tunnel stops&lt;/p&gt;
&lt;p&gt;In these 3 examples, the agent cannot know if he can still recieve calls because he does not recieve
any alerts from his XiVO client or from the phone.&lt;/p&gt;
&lt;h1&gt;I. Standard operation&lt;/h1&gt;
&lt;h2&gt;Agent's point of view&lt;/h2&gt;
&lt;p&gt;&lt;img alt="photo 1" src="http://blog.xivo.io/public/agent_disconnect/photo1.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Point of view on the XiVO Server&lt;/h2&gt;
&lt;p&gt;&lt;img alt="photo 2" src="http://blog.xivo.io/public/agent_disconnect/photo2.png" /&gt;&lt;/p&gt;
&lt;h1&gt;II. Anomaly&lt;/h1&gt;
&lt;h2&gt;Agent's point of view&lt;/h2&gt;
&lt;p&gt;Let us simulate the anomaly. For this simulation, the softphone has been forcefully disconnected.&lt;/p&gt;
&lt;p&gt;&lt;img alt="photo 3" src="http://blog.xivo.io/public/agent_disconnect/photo3.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We can see that our agent is still logged in and no other information about the disconnection is
displayed&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Point of view on the XiVO Server&lt;/h2&gt;
&lt;p&gt;&lt;img alt="photo 4" src="http://blog.xivo.io/public/agent_disconnect/photo4.png" /&gt;&lt;/p&gt;
&lt;p&gt;We can see that the state of extension 741 is &lt;code&gt;UNKNOWN&lt;/code&gt;, but agent 6002 (extension 728) is still
connected.&lt;/p&gt;
&lt;h1&gt;III. Execution of the script&lt;/h1&gt;
&lt;p&gt;The script will find out that the SIP account is disconnected and will automatically log out the
agent associated to the extension.&lt;/p&gt;
&lt;p&gt;&lt;img alt="photo 5" src="http://blog.xivo.io/public/agent_disconnect/photo5.png" /&gt;&lt;/p&gt;
&lt;p&gt;Accordingly, the agent now knows that he is logged out:&lt;/p&gt;
&lt;p&gt;&lt;img alt="photo 6" src="http://blog.xivo.io/public/agent_disconnect/photo6.png" /&gt;&lt;/p&gt;
&lt;p&gt;This script has been deployed in production and has been working successfully since Oct 1st 2015.
You can download this script on &lt;a href="https://github.com/h4wk3r/XIVO-Agentoff_if_sipoff"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For further information, you can contact me directly be email (vdbnicolas [at] gmail [dot] com) or
on IRC on irc.freenode.net channel #xivo.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Article by h4wk3r. Licensed under cc.by.sa 4.0. Revised by Valérie Dagrain. Translated by Gregory Eric Sanderson&lt;/em&gt;&lt;/p&gt;</summary><category term="call center"></category></entry><entry><title>Sprint Review 15.17</title><link href="http://blog.xivo.io/sprint-review-1517.html" rel="alternate"></link><updated>2015-10-16T12:00:00-04:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2015-10-16:sprint-review-1517.html</id><summary type="html">&lt;p&gt;Greetings fellow XiVOists ! I am pleased to announce that version 15.17 of XiVO has been released.&lt;/p&gt;
&lt;h2&gt;New features in this sprint&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;REST API:&lt;/strong&gt; A new API for managing SIP accounts has been added. The API can be used for creating
SIP accounts and associating them with users on a XiVO server. This API also offers third parties,
such as developers or administrators, the flexibility of configuring all of the advanced SIP
parameters offered by asterisk. This new API helps us expand on our goal of offering a more
customizable and flexible system ideal for use in a wide range of environments, such as cloud
infrastructures.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Directories:&lt;/strong&gt; The contacts system used by the phones has been improved. Contact sources have been
unified. This means that phones will now search through the same places as searches in the XiVO
Client. Phones will also be able to search through personal contacts. Up until now, personal
contacts could only be used from the XiVO Client. But with this release, any contact added through
the client can be used on the phone.&lt;/p&gt;
&lt;h2&gt;Ongoing features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;SCCP:&lt;/strong&gt; In a similar fashion to the SIP API, we will be adding a new API for managing
 SCCP accounts. This will make configuration of advanced SCCP parameters more flexible for
 administrators and other tech specialists.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lines:&lt;/strong&gt; We are revamping the web interface in a similar fashion to what was done for
 voicemails. The goal is to make configuration of advanced parameters easier while
 still keeping the interface simple.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LDAP:&lt;/strong&gt; We are working on a new authentication mecanism for allowing users access
 to XiVO based on LDAP credentials. This will allow administrators to integrate
 XiVO with their existing infrastructure and give them finer grained access
 to xivo's services.&lt;/p&gt;
&lt;h2&gt;Technical features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Asterisk:&lt;/strong&gt; Minor Asterisk upgrade from 13.5.0 to 13.6.0. This upgrade fixes the latest bugs and
improves overall stability.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;My fellow xivoists, as the &lt;strong&gt;Lord of XiVO&lt;/strong&gt; allow me to bid you a happy and invigorating farewell. I
wish you shall remain in high spirits until our next fateful encounter, 3 weeks from now. May the
freedom of XiVO bless your communications across the vast VoIP expanse.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Source: &lt;a href="http://projects.xivo.io/versions/233" title="XiVO 15.17 Roadmap"&gt;XiVO 15.17 Roadmap&lt;/a&gt;&lt;/p&gt;</summary><category term="XiVO"></category><category term="development"></category></entry><entry><title>XiVO + Bluemind Integration</title><link href="http://blog.xivo.io/xivo-bluemind-integration.html" rel="alternate"></link><updated>2015-09-30T15:57:00-04:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2015-09-30:xivo-bluemind-integration.html</id><summary type="html">&lt;p&gt;Telephone systems are nice, but it gets even better when they meld into
the computer interfaces that we use to communicate daily. After all, a
big part of our daily lives revolves around email, contacts and agendas.
That is why we are excited to introduce you to Bluemind. BlueMind is a
free-software messaging application that can take care of your emails,
webmail, agendas, contacts, instant messaging, etc.&lt;/p&gt;
&lt;p&gt;We are very happy to announce that BlueMind and XiVO can be
interconnected, so that your phone gets easier to use. What happens when
BlueMind is talking to XiVO? You get more features! You may:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;receive your voicemail messages in your mailbox&lt;/li&gt;
&lt;li&gt;display your availability and your current phone status&lt;/li&gt;
&lt;li&gt;see the availability and phone status of your co-workers&lt;/li&gt;
&lt;li&gt;enable call forwarding by changing your availability status&lt;/li&gt;
&lt;li&gt;have your availability change automatically, according to your
    agenda&lt;/li&gt;
&lt;li&gt;make calls from the BlueMind web interface&lt;/li&gt;
&lt;li&gt;have a unified contacts list&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can read more about these features in the &lt;a href="https://forge.blue-mind.net/confluence/display/LATEST/La+telephonie"&gt;BlueMind
documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to configure your instance of BlueMind, &lt;a href="https://forge.blue-mind.net/confluence/display/LATEST/Configuration+du+plugin+Xivo+Avencall"&gt;click this
link&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint Review 15.16</title><link href="http://blog.xivo.io/sprint-review-1516.html" rel="alternate"></link><updated>2015-09-28T14:03:00-04:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2015-09-28:sprint-review-1516.html</id><summary type="html">&lt;p&gt;Hello,&lt;/p&gt;
&lt;h3&gt;New features in this sprint:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;High Availablity&lt;/strong&gt;: Phones can be rebooted and will still be
functional when using a fallback server. The next step will be to
replicate the phone's configuration on to the fallback server, so that
an administrator may still be able to modify the phone's options.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XiVO Client&lt;/strong&gt;: Blind transfers and attended transfers have been added
to the people xlet. The transfer destination may be either a contact's
main phone, or his mobile phone. This feature is one more step towards
replacing the contacts xlet and finishing the unificiation of contacts
in the xivo client&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Voicemails&lt;/strong&gt;: We have removed some limitations about the management of
voicemails that were introduced in the last version. The voicemail
system is now fully integrated with the REST API.&lt;/p&gt;
&lt;h3&gt;Ongoing features:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Directories&lt;/strong&gt;: we continue working on a new service that will
integrate the new directory infrastructure with phones. The goal is to
make contacts exposed via XiVO's directory attainable via a user's
phone. This means that a user's personal contacts will also be avaible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt;: we have started working on an permission system for our
REST APIs. This will allow a finer grained access to the REST APIs and
reduce the chances of accidentally breaking the rest of the system. For
example, users will be able to modify their function keys, without
having access to the function keys of other users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SIP Lines&lt;/strong&gt;: We are revamping the extra parameters for sip accounts in
the same way as what has been done for voicemails. This will make it
easier for users to configure advanced features in asterisk.&lt;/p&gt;
&lt;p&gt;See you for the next sprint review.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href="http://projects.xivo.io/versions/232" title="XiVO 15.16 Roadmap"&gt;XiVO 15.16
Roadmap&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary><category term="XiVO"></category><category term="development"></category></entry><entry><title>We are 6 and yes we have more than 150 phones :)</title><link href="http://blog.xivo.io/we-are-6-and-yes-we-have-more-than-150-phones.html" rel="alternate"></link><updated>2015-09-09T16:57:00-04:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2015-09-09:we-are-6-and-yes-we-have-more-than-150-phones.html</id><summary type="html">&lt;p&gt;Hey XiVO community,&lt;/p&gt;
&lt;p&gt;Yes we work on telecomunications/telecoms, we would like to share with
you some photos from our office at Quebec city ! Thanks to Etienne to
have counted the phones.&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20150909_124822.jpg" src="/public/office/IMG_20150909_124822.jpg" title="IMG_20150909_124822.jpg, sept. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20150909_124838.jpg" src="/public/office/IMG_20150909_124838.jpg" title="IMG_20150909_124838.jpg, sept. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20150909_124855.jpg" src="/public/office/IMG_20150909_124855.jpg" title="IMG_20150909_124855.jpg, sept. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20150909_124914.jpg" src="/public/office/IMG_20150909_124914.jpg" title="IMG_20150909_124914.jpg, sept. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20150909_124919.jpg" src="/public/office/IMG_20150909_124919.jpg" title="IMG_20150909_124919.jpg, sept. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20150909_124927.jpg" src="/public/office/IMG_20150909_124927.jpg" title="IMG_20150909_124927.jpg, sept. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20150909_124936.jpg" src="/public/office/IMG_20150909_124936.jpg" title="IMG_20150909_124936.jpg, sept. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20150909_124943.jpg" src="/public/office/IMG_20150909_124943.jpg" title="IMG_20150909_124943.jpg, sept. 2015" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint review 15.15</title><link href="http://blog.xivo.io/sprint-review-1515.html" rel="alternate"></link><updated>2015-09-09T14:40:00-04:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2015-09-09:sprint-review-1515.html</id><summary type="html">&lt;p&gt;Fellow Xivoists, the time has come for the release of 15.15. During
thissprint we have fixed many bugs and continued working on
featuressurrounding directories and contacts.&lt;/p&gt;
&lt;h3&gt;New features in this sprint&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Voicemail:&lt;/strong&gt; The voicemail configuration page has been revamped.
Youcan now configure as many extra parameters as you want in
the"advanced" tab. These parameters will be included along side therest
of the voicemail configuration in asterisk. This new free-formversion of
the voicemail page offers more flexibility to advanced usersof asterisk,
while still keeping it simple enough for regular users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;People Xlet:&lt;/strong&gt; The new People Xlet is now fully integrated into
xivo.We have talked about this xlet in previous sprints, however it
could notbe used without some manual configuration on the server. With
thisrelease, the xlet will work out-of-the-box once it has been added to
aprofile. The People Xlet replaces the old remote directory, which
hasbeen removed.&lt;/p&gt;
&lt;h3&gt;Ongoing features&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Directories:&lt;/strong&gt; we have started working on a new service that
willintegrate the new directory infrastructure with phones. The goal is
tomake contacts exposed via xivo's directory usable from a user's
phone.This means that bookmarked contacts and a user's personal contacts
willalso be available.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SIP Lines:&lt;/strong&gt; We will be revamping extra parameters for
sipconfiguration in the same way as what has been done for voicemails.
Thiswill make it easier for users to configure advanced features
inasterisk.&lt;/p&gt;
&lt;h3&gt;Technical features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Provd:&lt;/strong&gt; new plugin for the 6800 series of Mitel phones
    (formerly Aastra)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Directories:&lt;/strong&gt; The configuration system for directories
    has changed. More details available in the &lt;a href="http://documentation.xivo.io/en/stable/upgrade/upgrade.html#upgrade-notes" title="upgrade notes"&gt;upgrade
    notes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XiVO Client:&lt;/strong&gt; The XiVO Client has been upgraded to Qt 5.5&lt;/li&gt;
&lt;li&gt;Certain restrictions regarding voicemails for a user have
    been loosened. More details available in the &lt;a href="http://documentation.xivo.io/en/stable/upgrade/upgrade.html#upgrade-notes" title="upgrade notes"&gt;upgrade
    notes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My fellow xivoists, as the &lt;strong&gt;Lord of XiVO&lt;/strong&gt; allow me to bid you a
happyand invigorating farewell. I wish you shall remain in high spirits
untilour next fateful encounter, 3 weeks from now. May the freedom of
XiVObless your communications across the vast VoIP expanse.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href="http://projects.xivo.io/versions/231" title="XiVO 15.15 Roadmap"&gt;XiVO 15.15
Roadmap&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint review 15.14</title><link href="http://blog.xivo.io/sprint-review-1514.html" rel="alternate"></link><updated>2015-08-14T17:18:00-04:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2015-08-14:sprint-review-1514.html</id><summary type="html">&lt;p&gt;Hello everyone,&lt;/p&gt;
&lt;p&gt;With the end of this sprint, most of the work on our new personal
contacts system has been completed. We have also continued working on
features already in progress in order to improve and solidify XiVO as a
whole.&lt;/p&gt;
&lt;h3&gt;New features in this sprint&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;XiVO Client: Work on personal contacts has continued, brining us
    closer to our goal of merging contact-related features into one
    simple and feature-complete Xlet. New features this sprint include
    editing, importing and exporting personal contacts. They can be
    easily imported/exported with CSV files. Contacts stored in the old
    Personal Directoy Xlet will be automatically migrated to the new
    People Xlet after the upgrade. You can also mass delete all your
    contacts in case of a problem during an importation.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Yealink: The firmware for Yealink phones has been upgraded to v80.
    Upgrading the firmware allows us to support the latest models, fix
    bugs and offer new features. These upgrades also add small
    improvements, such as a better display for long names and support
    for searching the XiVO directoy on T4X models.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Codecs: Opus and text codecs are now supported in XiVO. Adding
    codecs enhances the interoperability of VoIP technologies, increases
    the quality of audio, and helps in using less bandwidth. You can
    configure the use of these codecs through the web interface.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ongoing features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Directories: In the last sprint review, we mentioned our ongoing
    work on unifiying directories. We now want to work on making the new
    contact infrastructure usable by phones. This means that contacts
    coming from different sources, such as an LDAP server, your personal
    contacts, or other people on the same XiVO server, can be
    transparently accessed and used from a phone.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Technical features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Asterisk: Minor upgrade from Asterisk 13.4 to 13.5. This upgrade
    fixes the latest bugs and improves overall stability.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;The default password on polycom phones has been changed to 9486,
    which represents 'XIVO' in numeric form. Users are strongly
    encouraged to change this after an installation in order to prevent
    security exploits.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;My fellow xivoists, as the Lord of XiVO allow me to bid you a happy and
invigorating reading. I wish you shall remain in high spirits until our
next fateful encounter, 3 weeks from now. May the freedom of xivo bless
your communications, where ever they may be.&lt;/em&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>All you wanted to know about XiVO</title><link href="http://blog.xivo.io/all-you-wanted-to-know-about-xivo.html" rel="alternate"></link><updated>2015-07-29T18:50:00-04:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-07-29:all-you-wanted-to-know-about-xivo.html</id><summary type="html">&lt;p&gt;&lt;em&gt;XiVO in &lt;a href="https://fr.wikipedia.org/wiki/XiVO"&gt;french&lt;/a&gt; and in
&lt;a href="https://es.wikipedia.org/wiki/XiVO"&gt;spanish&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DEFINITION: XIVO, A FREE IPBX&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XiVO is an unified communications software system licensed under the
    GPLv3,&lt;a href="https://en.wikipedia.org/wiki/GNU_General_Public_License%20v3"&gt;GNU General Public
    License&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The graphical user interface (GUI) provides an interface for
    configuring, controlling, and managing the &lt;a href="https://en.wikipedia.org/wiki/IP_PBX"&gt;IP
    PBX&lt;/a&gt; software. The XiVO Distro
    includes packages that offer these features:&lt;a href="https://en.wikipedia.org/wiki/Voice_over_IP"&gt;Voice over
    IP&lt;/a&gt;, PBX, Fax, voice
    mail and unified messaging. XiVO is based on the free software
    &lt;a href="https://fr.wikipedia.org/wiki/Asterisk_%28logiciel%29"&gt;Asterisk&lt;/a&gt;
    and the XiVO Linux distribution is based on &lt;a href="https://www.debian.org/releases/wheezy/index.fr.html"&gt;Debian
    Wheezy&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="XiVO-G_.png" src="/public/XiVO-G_.png" title="XiVO-G_.png, juil. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HISTORY ABOUT XIVO AND AVENCALL&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XiVO was created in 2005 as an open-source, collaborative project
    from
    &lt;a href="http://www.quebecentreprises.com/proformatique-inc-u2py"&gt;Proformatique&lt;/a&gt;,
    a company in France.&lt;/li&gt;
&lt;li&gt;In 2010, &lt;a href="http://www.avencall.com/en/"&gt;Avencall&lt;/a&gt;, a French leader in
    the publishing and integration of open unified communications
    solutions, merged with Proformatique (XiVO). Avencall wanted to
    pursue a vision that would reinforce XiVO's strong points :
    technical development, commercial features, IT solutions. Avencall
    became the first provider of free VoIP solutions in France, with
    thousands of users deployed and 350 customers such as LDC, Groupama,
    la Poste, l'Olympique Lyonnais.&lt;/li&gt;
&lt;li&gt;Avencall is also specialized in contact center solutions with its
    XiVO-CC open source software suite.&lt;/li&gt;
&lt;li&gt;Avencall, based in France, has offices in Lyon (HQ), Paris,
    Toulouse, Rennes, Aix-en-Provence and Strasbourg. Most of its
    research and development is in Quebec-city, Canada.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;INSTALL AND TRY XIVO&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The XiVO ISO and XiVO client can be downloaded from this main page
    &lt;a href="community%20website"&gt;http://xivo.io&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="XIVO-DOWNLOAD.png" src="/public/XIVO-DOWNLOAD.png" title="XIVO-DOWNLOAD.png, juil. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TUTORIALS FROM THE COMMUNITY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Updated tutorials from the community are available on the &lt;a href="http://xivo.readthedocs.org/en/latest/community/community.html"&gt;community
    documentation
    page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=leMZi6cU8iM"&gt;Video&lt;/a&gt; on the history
    of XiVO, the community and how to try XiVO
    &lt;a href="https://www.youtube.com/watch?v=leMZi6cU8iM"&gt;here&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="XIVO-VIDEO-ENG-2015.png" src="/public/XIVO-VIDEO-ENG-2015.png" title="XIVO-VIDEO-ENG-2015.png, juil. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FEATURES&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XiVO provides online repositories that contain software packages.
    The latest release is documented and updated every 3 weeks. Access
    to the &lt;a href="http://xivo.readthedocs.org/en/stable"&gt;documentation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Notable changes in the last release include : bookmarks for
    contacts, synchronisation between servers, management of function
    keys via REST API, new authentification and encryption framework,
    upgrade to &lt;a href="/index.php?post/2015/07/20/XiVO-and-Asterisk-13"&gt;Asterisk
    13&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="XiVO_accueil.png" src="/public/XiVO_accueil.png" title="XiVO_accueil.png, juil. 2015" /&gt;&lt;img alt="bluemind.avencall.com03.jpeg" src="/public/bluemind.avencall.com03.jpeg" title="bluemind.avencall.com03.jpeg, juil. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EVENTS AND AWARDS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open Source events:&lt;ul&gt;
&lt;li&gt;2010, 2012, 2013 and 2014 &lt;a href="https://fr.wikipedia.org/wiki/Solutions_Linux"&gt;Solutions
    Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2009 and 2011 &lt;a href="https://en.wikipedia.org/wiki/Libre_Software_Meeting"&gt;Libre Software
    Meeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2011 &lt;a href="https://en.wikipedia.org/wiki/FOSDEM"&gt;FOSDEM&lt;/a&gt;, Free and
    Open Source Software Developers' European Meeting, 2011 &lt;a href="http://2014.oshwa.org"&gt;Open
    Hardware Summit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2012 &lt;a href="http://congres.adullact.org"&gt;Adullact&lt;/a&gt;, &lt;a href="http://www.linuxtag.org"&gt;Linux
    Tag&lt;/a&gt;, &lt;a href="http://openworldforum2012.sched.org/"&gt;Open World
    Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2012 and 2014
    &lt;a href="https://wiki.asterisk.org/wiki/display/AST/AstriCon+2012+Presentations"&gt;Astricon&lt;/a&gt;,
    2012 and 2014 &lt;a href="http://www.hackfest.ca/en"&gt;Hackfest Quebec&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;2013 &lt;a href="http://www.rrll.fr"&gt;RRLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2015 &lt;a href="https://en.wikipedia.org/wiki/BarCamp"&gt;Barcamp&lt;/a&gt; about
    &lt;a href="http://barcamp.org/w/page/97007235/BarCampMumble-VoIP-OpenSource"&gt;VoIP open
    source&lt;/a&gt;
    and
    &lt;a href="https://en.wikipedia.org/wiki/Mumble_%28software%29"&gt;Mumble&lt;/a&gt;,
    &lt;a href="http://www.opensourcesummit.paris"&gt;POSS&lt;/a&gt; Paris Open Source
    Summit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Awards and publication:&lt;ul&gt;
&lt;li&gt;2010 &lt;a href="http://blog.xivo.io/index.php?post/2010/10/04/XiVO-IPBX-OpenHardware-selected-for-the-innovation-trophy"&gt;Innovation
    Trophy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2011 &lt;a href="http://www.agence-c3m.com/communique/avencall-et-sa-solution-xivo-primes-aux-trophees-de-la-convergence"&gt;IP convergence
    Trophy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2015, &lt;a href="http://www.distributique.com/actualites/lire-trophees-de-la-distribution-2015-decouvrez-les-noms-des-gagnants-22825-page-9.html"&gt;Distribution
    Trophy&lt;/a&gt;,
    "&lt;a href="http://www.agence-c3m.com/communique/un-trophee-pour-avencall-au-printemps-des-entrepreneurs"&gt;Printemps des
    entrepreneurs&lt;/a&gt;"
    Trophy,
    "&lt;a href="http://www.grandlyon.com/fileadmin/user_upload/media/pdf/espace-presse/cp/20150630_cp_dispositif-pepites-3-entreprises-labellisees.pdf"&gt;Pepites&lt;/a&gt;"
    award and label, annoucemement in the special july-august &lt;a href="http://boutique.ed-diamond.com/home/872-linux-pratique-90.htm"&gt;Linux
    Pratique
    magazine&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>1st video about XiVO</title><link href="http://blog.xivo.io/1st-video-about-xivo.html" rel="alternate"></link><updated>2015-07-28T20:08:00-04:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-07-28:1st-video-about-xivo.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;We are glad to share this FIRST video about XIVO:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Watch the video
    &lt;a href="http://www.blog-des-telecoms.com/xivo-video-de-presentation-de-lipbx-libre"&gt;http://www.blog-des-telecoms.com/xivo-video-de-presentation-de-lipbx-libre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;It is a 4mn video to present all about XiVO. 3 topics in the video:
    to introduce about Asterisk and XiVO, to know better and to thank
    all the contributors, how to try XiVO!&lt;/li&gt;
&lt;li&gt;This video is in english and under creative commons licence (cc by
    sa 4.0). We used Kdenlive, a free software.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="XIVO-VIDEO-ENG-2015.png" src="/public/XIVO-VIDEO-ENG-2015.png" title="XIVO-VIDEO-ENG-2015.png, juil. 2015" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The video from the "Blog des Telecoms" website&lt;/strong&gt; here:
    &lt;a href="http://www.blog-des-telecoms.com/xivo-video-de-presentation-de-lipbx-libre"&gt;http://www.blog-des-telecoms.com/xivo-video-de-presentation-de-lipbx-libre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source&lt;/strong&gt; : &lt;a href="https://www.youtube.com/watch?v=leMZi6cU8iM"&gt;https://www.youtube.com/watch?v=leMZi6cU8iM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Our video playlist&lt;/strong&gt; to know us better:
    &lt;a href="https://www.youtube.com/playlist?list=PLRYrJgPhLiqTjmzjW23vqk5psnfzs-Ay0"&gt;https://www.youtube.com/playlist?list=PLRYrJgPhLiqTjmzjW23vqk5psnfzs-Ay0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Enjoy!
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary></entry><entry><title>Sprint review 15.13</title><link href="http://blog.xivo.io/sprint-review-1513.html" rel="alternate"></link><updated>2015-07-24T14:19:00-04:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2015-07-24:sprint-review-1513.html</id><summary type="html">&lt;p&gt;Hello everyone,&lt;/p&gt;
&lt;p&gt;During this sprint most of the work was done on pushing Asterisk 13 into
XiVO. We added an extra testing day during the sprint in order to help
detect differences between Asterisk 11 and 13.&lt;/p&gt;
&lt;h3&gt;New in this sprint&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Asterisk&lt;/strong&gt;: Upgrade from Asterisk 11 to &lt;a href="https://wiki.asterisk.org/wiki/display/AST/New+in+13" title="Asterisk 13"&gt;Asterisk
    13&lt;/a&gt;.
    In the long run, this will allow us to work on small and
    not-so-small improvements to XiVO, such as: benefit from nice
    performance improvements; add more control over queues and
    switchboards (allowing us to correct undesirable behavior); generate
    more meaningful call logs; make the system more easily
    scalable, (i.e. multiple Asterisks could share the load of
    phone calls). The
    &lt;a href="https://wiki.asterisk.org/wiki/pages/viewpage.action?pageId=29395573" title="ARI"&gt;ARI&lt;/a&gt;
    is a very interesting feature of Asterisk 13 which gives us a lot of
    flexibility and allows us to make new features easily. See also our
    blog entry about &lt;a href="/index.php?post/2015/07/20/XiVO-and-Asterisk-13" title="Asterisk 13"&gt;Asterisk
    13&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;XiVO Client&lt;/strong&gt;: We have started integrating personal contacts into
    the People Xlet. For now, you can list, create and delete
    personal contacts. What remains to do is to edit contacts, integrate
    them into search results, import and export contacts. The goal is to
    delete the Personal Directory Xlet, and ultimately merge all other
    contact-related xlets into the People Xlet. Note that these personal
    contacts are accessible from any client, not just the one where they
    were created, like before. They are also manageable via a REST API
    in xivo-dird.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;REST API&lt;/strong&gt;: We have continued to improve the management of
    function keys via a REST API, adding more management features and
    making it easier to use.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ongoing features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Directories&lt;/strong&gt;: We are working on unifying directories so that all
    contacts will be available from anywhere, be it your phone or your
    CTI client. Also, we want XiVO to be able to get contacts from a
    variety of third-party products, so we're setting up a plugin
    mechanism allowing the retrieval of contacts from various sources.
    For example, you can make XiVO list contacts &lt;a href="https://github.com/alexis-via/xivo-dird-plugin-backend-odoo" title="from your Odoo system"&gt;from your Odoo
    system&lt;/a&gt;.
    Finally, we're working on integrating this plugin mechanism with the
    current web interface.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Want to play with XiVO?&lt;/h3&gt;
&lt;p&gt;There's a new community-driven project called &lt;strong&gt;Raspivo&lt;/strong&gt;, to support
XiVO on Raspberry Pi 2. Take a look at the documentation &lt;a href="http://raspivo.io/installation-depuis-nos-depots-en.html" title="on their website"&gt;on their
website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href="http://projects.xivo.io/versions/229" title="Roadmap 15.13"&gt;Roadmap
15.13&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Asterisk 13:
    &lt;a href="https://wiki.asterisk.org/wiki/display/AST/New+in+13" title="https://wiki.asterisk.org/wiki/display/AST/New+in+13"&gt;https://wiki.asterisk.org/wiki/disp...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ARI:
    &lt;a href="https://wiki.asterisk.org/wiki/pages/viewpage.action?pageId=29395573" title="https://wiki.asterisk.org/wiki/pages/viewpage.action?pageId=29395573"&gt;https://wiki.asterisk.org/wiki/page...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Asterisk 13 in XiVO:
    &lt;a href="http://blog.xivo.io/index.php?post/2015/07/20/XiVO-and-Asterisk-13" title="http://blog.xivo.io/index.php?post/2015/07/20/XiVO-and-Asterisk-13"&gt;http://blog.xivo.io/index.php?post/...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Odoo in XiVO:
    &lt;a href="https://github.com/alexis-via/xivo-dird-plugin-backend-odoo" title="https://github.com/alexis-via/xivo-dird-plugin-backend-odoo"&gt;https://github.com/alexis-via/xivo-...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Raspivo:
    &lt;a href="http://raspivo.io/installation-depuis-nos-depots-en.html" title="http://raspivo.io/installation-depuis-nos-depots-en.html"&gt;http://raspivo.io/installation-depu...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="XIVO-RELEASE-15.13-July-August2015.png" src="/public/XIVO-RELEASE-15.13-July-August2015.png" title="XIVO-RELEASE-15.13-July-August2015.png, juil. 2015" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO and Asterisk 13</title><link href="http://blog.xivo.io/xivo-and-asterisk-13.html" rel="alternate"></link><updated>2015-07-20T13:49:00-04:00</updated><author><name>hexanol</name></author><id>tag:blog.xivo.io,2015-07-20:xivo-and-asterisk-13.html</id><summary type="html">&lt;p&gt;As some of you may already know, XiVO will soon be powered by &lt;a href="https://wiki.asterisk.org/wiki/display/AST/Asterisk+13+Documentation"&gt;Asterisk
13&lt;/a&gt;
instead of Asterisk 11. In fact, the development version of XiVO already
comes with Asterisk 13, so it's just a matter of time before Asterisk 13
makes its way in the official/production version of XiVO.&lt;/p&gt;
&lt;p&gt;Why switching from Asterisk 11 to Asterisk 13? Well first of all, this
has to be done sooner or later, since Asterisk 11 will enter a "security
fix only" period starting in October 2016 and Asterisk 13 is the new LTS
(Long Term Support) version. But most importantly, Asterisk 13 comes
with quite a few new features, improvements and bug fixes, and there's
some plan (both short term and long term) on using these new Asterisk
feature to build new features or enhance existing ones in XiVO.&lt;/p&gt;
&lt;p&gt;What will the switch to Asterisk 13 brings to XiVO? The first version of
XiVO powered by Asterisk 13 won't bring a lot of changes for the users
and administrators; this should be seen mostly as a technical change.
For the first version of XiVO including Asterisk 13, the goal is to make
sure everything that worked previously is still working well. Once this
is done, the following XiVO versions will begin exploiting the new
features offered by Asterisk 13. For example, Asterisk 13 brings a new
SIP channel driver named
&lt;a href="https://wiki.asterisk.org/wiki/display/AST/Configuring+res_pjsip"&gt;chan_pjsip&lt;/a&gt;,
but XiVO will continue using the chan_sip SIP channel driver in the
short term. Another example is
&lt;a href="https://wiki.asterisk.org/wiki/pages/viewpage.action?pageId=29395573"&gt;ARI&lt;/a&gt;,
which XiVO will not use at first, but will use in future versions, for
example to bring improvements to the call center feature or remove a few
limitations with the current switchboard implementation.&lt;/p&gt;
&lt;p&gt;That said, there's a lot of technical changes between Asterisk 11 and
Asterisk 13, and the passage to Asterisk 13 in XiVO will affect some
users, especially users which have developed custom applications around
XiVO or Asterisk. You'll want to review the &lt;a href="http://documentation.xivo.io/en/latest/upgrade/15.13/asterisk_13.html"&gt;XiVO upgrade
notes&lt;/a&gt;
to see if you are impacted or not.&lt;/p&gt;
&lt;p&gt;If you are eager to try out XiVO with Asterisk 13, you can install the
development version of XiVO on a test machine using the &lt;a href="http://documentation.xivo.io/en/stable/installation/installsystem.html#installing-from-a-minimal-debian-installation"&gt;installation
script
method&lt;/a&gt;
and executing the script as "bash xivo_install_current.sh -d".&lt;/p&gt;
&lt;p&gt;&lt;img alt="Asterisk13.png" src="/public/Asterisk13.png" title="Asterisk13.png, juil. 2015" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint Review 15.12</title><link href="http://blog.xivo.io/sprint-review-1512.html" rel="alternate"></link><updated>2015-07-03T14:04:00-04:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2015-07-03:sprint-review-1512.html</id><summary type="html">&lt;h3&gt;New in this sprint&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;XiVO Client&lt;/strong&gt;: The people xlet allows you to bookmark your
    contacts and list them. This also opens the way for personal
    contacts to be available from anywhere.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;High Availability&lt;/strong&gt;: The High Availability system now synchronizes
    important files between servers. For example, IVR, custom sound
    files and favorite contacts are preserved. During a failure,
    telephony will be less affected while the main server is
    being repaired.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Function keys&lt;/strong&gt;: Function keys are manageable via a &lt;a href="http://documentation.xivo.io/en/latest/api_sdk/rest_api/confd/func_keys.html" title="REST API"&gt;REST
    API&lt;/a&gt;.
    This allows administrators to manage function keys more easily by
    applying templates of function keys to a set of users. In the
    future, this will also allow users to manage their own
    function keys.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;REST API&lt;/strong&gt;: We currently have REST APIs for 5 components of XiVO,
    and now 2 of them (xivo-auth and xivo-dird) are protected with
    encryption and authentication. They can be used directly without
    requiring configuration. The other 3 are not exposed to the
    outside world.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;XiVO Client&lt;/strong&gt;: We also made small improvements to the XiVO Client:&lt;ul&gt;
&lt;li&gt;The systray icon changed from the four letters (XiVO) to a
    single X&lt;/li&gt;
&lt;li&gt;The list in the People xlet can be sorted by agent status&lt;/li&gt;
&lt;li&gt;New language available: Spanish (Chile)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Work done in this sprint, but not yet ready&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Asterisk upgrade&lt;/strong&gt;: Upgrade from Asterisk 11 to &lt;a href="https://wiki.asterisk.org/wiki/display/AST/New+in+13" title="Asterisk 13"&gt;Asterisk
    13&lt;/a&gt;.
    In the long run, this will allow us to benefit from new features and
    other improvements, e.g. better performance, more control over
    queues and switchboards, correct undesirable behavior, create more
    meaningful call logs, make Asterisk more scalable (multiple Asterisk
    servers sharing the load of phone calls). The
    &lt;a href="https://wiki.asterisk.org/wiki/pages/viewpage.action?pageId=29395573" title="ARI"&gt;ARI&lt;/a&gt;
    is a very interesting feature of Asterisk 13 which gives us a lot
    more flexibility and allows us to add new features easily.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CTI authentication&lt;/strong&gt;: We mentioned in the previous sprint review
    users being able to log in their XiVO Clients using
    LDAP authentication. We are not there yet, but the bookmarked
    contacts feature validated our authentication mechanism and it is a
    step in the right direction.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;64-bit&lt;/strong&gt;: XiVO is currently only supported on 32-bit architectures
    (AKA i386 or x86), but we are working on supporting 64-bit
    architectures (AKA amd64 or x86_64). An ISO for 64-bit in beta
    version is &lt;a href="http://mirror.xivo.io/iso/xivo-latest-beta-amd64.iso" title="available for testing"&gt;available for
    testing&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See you for the next sprint review.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href="http://projects.xivo.io/versions/228" title="15.12 Roadmap"&gt;15.12
Roadmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Function keys REST API:
    &lt;a href="http://documentation.xivo.io/en/latest/api_sdk/rest_api/confd/func_keys.html" title="http://documentation.xivo.io/en/latest/api_sdk/rest_api/confd/func_keys.html"&gt;http://documentation.xivo.io/en/lat...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Asterisk 13 changelog:
    &lt;a href="https://wiki.asterisk.org/wiki/display/AST/New+in+13" title="https://wiki.asterisk.org/wiki/display/AST/New+in+13"&gt;https://wiki.asterisk.org/wiki/disp...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ARI:
    &lt;a href="https://wiki.asterisk.org/wiki/pages/viewpage.action?pageId=29395573" title="https://wiki.asterisk.org/wiki/pages/viewpage.action?pageId=29395573"&gt;https://wiki.asterisk.org/wiki/page...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;64-bit ISO download:
    &lt;a href="http://mirror.xivo.io/iso/xivo-latest-beta-amd64.iso" title="http://mirror.xivo.io/iso/xivo-latest-beta-amd64.iso"&gt;http://mirror.xivo.io/iso/xivo-late...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="2015-07-XIVO-15-12-RELEASED-SHARE-IT.png" src="/public/2015-07-XIVO-15-12-RELEASED-SHARE-IT.png" title="2015-07-XIVO-15-12-RELEASED-SHARE-IT.png, juil. 2015" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>June 2015, XiVO 15.11 release</title><link href="http://blog.xivo.io/june-2015-xivo-1511-release.html" rel="alternate"></link><updated>2015-06-25T15:54:00-04:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-06-25:june-2015-xivo-1511-release.html</id><summary type="html">&lt;p&gt;June 2015: sprint review 15.11&lt;/p&gt;
&lt;p&gt;This sprint we have worked on various subjects regarding REST APIs. REST
APIs enable a more customizable and flexible management of XiVO server.
They also enable the development of third-party features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In this article: New in this sprint, more technical information
    (Asterisk and DAHDI) and work done in this sprint, but not
    yet ready.&lt;/li&gt;
&lt;li&gt;Read the full article here.
    &lt;a href="/index.php?post/2015/06/12/Sprint-review-15.11"&gt;http://blog.xivo.io/index.php?post/2015/06/12/Sprint-review-15.11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="JUNE2015-XIVO-RELEASED.png" src="/public/JUNE2015-XIVO-RELEASED.png" title="JUNE2015-XIVO-RELEASED.png, juin 2015" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Summary about the VoIP meeting with Mumble, about telephony system and Free Software</title><link href="http://blog.xivo.io/summary-about-the-voip-meeting-with-mumble-about-telephony-system-and-free-software.html" rel="alternate"></link><updated>2015-06-18T15:50:00-04:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-06-18:summary-about-the-voip-meeting-with-mumble-about-telephony-system-and-free-software.html</id><summary type="html">&lt;p&gt;&lt;img alt="June-2015-BarCamp-Mumble-voIP-Libre-Invert.png" src="/public/June-2015-BarCamp-Mumble-voIP-Libre-Invert.png" title="June-2015-BarCamp-Mumble-voIP-Libre-Invert.png, juin 2015" /&gt;&lt;/p&gt;
&lt;p&gt;The BarCamp summary about VoIP meeting, organised with Mumble, is &lt;a href="http://barcamp.org/w/page/97007235/BarCampMumble-VoIP-OpenSource"&gt;on
line&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="http://barcamp.org/w/page/97007235/BarCampMumble-VoIP-OpenSource"&gt;web site, logos and
    schedule&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Download &lt;a href="/public/BarCampIRC-3-Meeting-VoIP-Mumble-Libre-2015-CRv01.pdf"&gt;the
    summary&lt;/a&gt;
    We shared news, tips and our favorite documentations &lt;em&gt;(in french)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;The audio meeting in .ogg (soon)&lt;/li&gt;
&lt;li&gt;To organise your own meeting, you can read our feedback during the
    last events and in
    &lt;a href="/public/BarCampIRC-3-Meeting-VoIP-Mumble-Libre-2015-CRv01.pdf"&gt;here&lt;/a&gt;
    &lt;em&gt;(in french)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Last events - BarCamp #1 et #2
    &lt;a href="http://barcamp.org/w/page/94666184/BarCampIRC-Qu%C3%A9bec"&gt;websites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;News about BarCamp #3 on
    &lt;a href="/index.php?post/2015/06/04/A-BarCamp-about-VoIP%2C-with-Mumble"&gt;blog.xivo.fr&lt;/a&gt;
    and on
    &lt;a href="https://twitter.com/v_dagrain/status/607894402632171520"&gt;twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you to &lt;a href="http://revenudebase.info/"&gt;MFRB&lt;/a&gt; and
&lt;a href="https://www.april.org/"&gt;April&lt;/a&gt;, &lt;a href="http://www.asterisk-france.org/"&gt;Asterisk
France&lt;/a&gt; and the other communities in
Free software.&lt;/p&gt;
&lt;/p&gt;</summary><category term="barcamp"></category><category term="free software"></category><category term="mumble"></category><category term="voip"></category></entry><entry><title>Raspivo, having fun with Raspberry Pi 2 and XiVO, an open source telephone system</title><link href="http://blog.xivo.io/raspivo-having-fun-with-raspberry-pi-2-and-xivo-an-open-source-telephone-system.html" rel="alternate"></link><updated>2015-06-12T18:40:00-04:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-06-12:raspivo-having-fun-with-raspberry-pi-2-and-xivo-an-open-source-telephone-system.html</id><summary type="html">&lt;p&gt;(L'article au complet en français, juste après)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Raspivo, having fun with Raspberry Pi 2 and XiVO, an open source
telephone system&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In 2012 a first attempt was made at integrating a raspberry-pi and
    XiVO, a telephone system based on Asterisk and licensed under GPLv3.
    More info at
    &lt;a href="http://www.raspberry-xivo.org/"&gt;http://www.raspberry-xivo.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Furthermore, the arrival of the raspberry pi version 2 has opened up
    new technical avenues. That's why in may 2015, Jof launched the
    project Raspivo, Raspberry Ri 2 + XiVO = Raspivo. Blog and more info
    at &lt;a href="http://raspivo.io"&gt;http://raspivo.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;The beggining of the adventure with raspberry pi 2, XiVO and
Raspbian&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Iris-Network (http://www.iris-network.fr), a telecommunications
    company based in France, decided to launch a new project combining
    XiVO and Raspberry-pi 2, a low-cost embedded platform.&lt;/li&gt;
&lt;li&gt;This article summarizes the installation of Raspbian, the
    recompilation of XiVO packages for the ARM platform, and testing
    that was done on incoming and outgoing calls in order to validate
    the quality and the stability of the architecture.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;During the tests, 12 simultaneous calls were successfully handled in
    optimal conditions.&lt;/li&gt;
&lt;li&gt;In order to test the project in real world conditions, the team at
    Iris-Network replaced their internal telephone system, along with
    the hotline platform, with a RPi2 server. So far, everything remains
    stable and running ! Currently, testing is progressing with the help
    of beta-testing customers. In the spirit of sharing and respect for
    the open source philosophy, work on the project has been made
    available to the public by publishing debian packages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Installation using the debian repository and raspbian IMG&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 main steps to installing raspivo (RPi2 + XiVO): 1. Install
    Raspbian (Debian for Raspberry Pi); 2. Install any other packages
    you typically need for administering a server; 3. Add the raspivo
    respository; 4. Install raspivo. More information available here (in
    french): &lt;a href="http:%20//www.raspivo.io/installation-depuis-nos-depots.html"&gt;http:
    //www.raspivo.io/installation-depuis-nos-depots.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;From a disk image (IMG): To make installation easier, a complete
    disk image can be downloaded, taking less than 5 minutes to install.
    In the same way as you would install Raspbian, you can also install
    Raspivo thanks to 'dd': dd if=Raspivo-15.10.img of=/dev/sdX
    (replacing sdX with the partition of your sdcard).&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;The changelog for XiVO is available here
    http://projects.xivo.io/versions/223 and you can find more news on
    raspivo here http://www.raspivo.io/version-1510.html.&lt;/li&gt;
&lt;li&gt;The project would be grateful to hear from anyone who would be
    interested in testing or any other feedback.&lt;/li&gt;
&lt;li&gt;"These tutorials will help me during my presentation on raspberry pi
    2 with XiVO for workshops for a local fablab in Quebec" wanda,
    member of http://espace-lab.org; "&lt;a href="Raspivo" title="Raspivo"&gt;Raspivo&lt;/a&gt; is a
    new initiative from the community ! Have fun ! I'm very happy with
    xivo on raspberry pi. " quintana, &lt;a href="http://www.raspberry-xivo.org/"&gt;http://www.raspberry-xivo.org/&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Feel free to share and have fun with this open source project and
    the logo &lt;a href="raspivo.io"&gt;raspivo.io&lt;/a&gt; ! :)&lt;/li&gt;
&lt;li&gt;Jof and wanda. Licence CC by sa 4.0&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Raspivo, s'amuser avec raspberry pi 2 et XiVO système en téléphonie
open source&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;En 2012, des ateliers ont commencé sur raspberry-pi et XiVO (système
    de téléphonie, basé sur Asterisk et sous licence GPLv3).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Toutes les étapes ici:
&lt;a href="http://www.raspberry-xivo.org"&gt;www.raspberry-xivo.org&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avec l'arrivée de la version 2 de raspebrry pi, de nouvelles
    possibilités sont maintenant offertes : en mai 2015 Jof lance
    "raspberry pi 2 + XiVO = raspivo"&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Retrouvez les tests et tutoriaux sur mon/notre blog &lt;a href="http://raspivo.io"&gt;http://raspivo.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Le début de l'aventure raspberry pi 2, XiVO et Raspbian&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Iris-Network (http://www.iris-network.fr), entreprise experte en
    télécommunications, a lancé l'expérience XiVO sur Raspberry-pi 2,
    plate-forme compacte à moindre frais.&lt;/li&gt;
&lt;li&gt;Cet article présente l'installation de Raspbian, la compilation des
    paquets XiVO compatible pour plateformes ARM, des tests sur les
    appels entrants et sortants pour valider la qualité et la stabilité
    de cette architecture.&lt;/li&gt;
&lt;li&gt;Lors des tests, 12 appels simultanés ont été effectués dans des
    conditions optimales. Pour passer en conditions réelles, l'équipe
    d'Iris-Network à basculé son système de téléphonie interne ainsi que
    sa plateforme de hotline sur ce RPi2. Tout est fonctionnel et fiable
    ! Actuellement, ces tests continuent avec l'aide de
    clients beta-testeurs.&lt;/li&gt;
&lt;li&gt;Dans un soucis de partage et de respect de la philosophie
    OpenSource, ce travail est mis à la disposition de la communauté,
    sous forme de paquets Debian.&lt;/li&gt;
&lt;li&gt;En savoir plus: http://www.raspivo.io/raspivo.html&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;ins&gt;
    Installation depuis les dépôts et depuis une image disque
    &lt;/ins&gt;
    (IMG)&lt;/li&gt;
&lt;li&gt;Depuis les dépôts, l'installation de raspivo (RPi2 + XiVO) se
    déroule en 4 étapes: 1. Installation de raspbian (Debian pour
    Raspberry Pi) ; 2. Installation de logiciels typiques pour
    l'administration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3. Ajout du dépot raspivo ; 4. Installation de raspivo.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;En savoir plus:
    &lt;a href="http:%20//www.raspivo.io/installation-depuis-nos-depots.html"&gt;www.raspivo.io/installation-depuis-nos-depots.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;ins&gt;
    Depuis une image disque (IMG):
    &lt;/ins&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;dl&gt;
&lt;dt&gt;Pour faciliter le déploiement, une image complete est mise à disposition&lt;/dt&gt;
&lt;dd&gt;l'installation prend moins de 5 minutes.De même que pour une
installation de Raspbian classique, vous pouvez également installer
Raspivo grace à 'dd' :dd if=Raspivo-15.10.img of=/dev/sdX et en adaptant
bien sur sdX par votre SdCard.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;strong&gt;La version 15.10 de XiVO packagée pour votre Raspberry 2&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Voici le changelog http://projects.xivo.io/versions/223 et les
    nouveautés http://www.raspivo.io/version-1510.html&lt;/li&gt;
&lt;li&gt;Merci de nous envoyer vos témoignages ou vos tests. "Ces tutoriaux
    vont m'aider a présenter raspberry pi 2 avec XiVO, pour des ateliers
    dans un fablab local à Québec" wanda, membre de l'Espace Lab et
    community manager XiVO ; au sujet de Raspivo, "c'est une nouvelle
    initiative de la communauté ! Amusez-vous bien, avec XiVO et le
    raspberry pi. " quintana,
    &lt;a href="http://www.raspberry-xivo.org/"&gt;www.raspberry-xivo.org&lt;/a&gt;. Merci de
    partager la doc. de ce projet open source et le logo
    &lt;a href="raspivo.io"&gt;raspivo.io&lt;/a&gt; ! :)&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Jof et wanda. Article en CC by sa 4.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint review 15.11</title><link href="http://blog.xivo.io/sprint-review-1511.html" rel="alternate"></link><updated>2015-06-12T14:25:00-04:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2015-06-12:sprint-review-1511.html</id><summary type="html">&lt;p&gt;This sprint we have worked on various subjects regarding REST APIs. REST
APIs enable a more customizable and flexible management of XiVO server.
They also enable the development of third-party features. For example,
you could create a new management interface that would replace the
current web interface; or you could prepare a mass-update of all the
users on the server.&lt;/p&gt;
&lt;h3&gt;New in this sprint:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The fax xlet indicates whether the fax has been successfully sent
    or not. This means that when sending a fax, you see a waiting
    indicator, and after a few seconds, the fax xlet shows a
    confirmation or an error message.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;The switchboard newly supports Polycom VVX400 and VVX410. The
    switchboard is now compatible with &lt;a href="http://documentation.xivo.io/en/latest/administration/switchboard/switchboard.html#supported-devices" title="8 phone models"&gt;8 phone
    models&lt;/a&gt;
    from Aastra, Polycom, Snom and Yealink.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Old call records and statistics will be automatically removed
    (default: older than 1 year). Depending on your country, legislation
    may restrict the period of personal data storage. Also, accumulating
    call records and statistics is often useless and
    degrades performances. You have the possibility of developing
    scripts to archive call records and statistics before XiVO
    deletes them.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Documentation for REST APIs are available at &lt;a href="http://api.xivo.io"&gt;http://api.xivo.io&lt;/a&gt;.
    The documentation was built with
    &lt;a href="http://petstore.swagger.io/" title="Swagger"&gt;Swagger&lt;/a&gt;. Swagger is a web
    framework specifically aimed at documenting REST APIs. It also
    allows direct interaction with the APIs via the website.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Also in this sprint, but more technical:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Asterisk updated from 11.17.0 to 11.17.1&lt;/li&gt;
&lt;li&gt;DAHDI updated from 2.10.0 to 2.10.1&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Work done in this sprint, but not yet ready:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Function keys will be manageable via a REST API. This will allow
    administrators to manage function keys more easily (creation and
    update), by applying templates of function keys to a set of users.
    In a more distant future, this will also allow users to manage their
    own function keys.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Contacts can be bookmarked and users will be able to list their
    bookmarked contacts. This also opens the way for personal contacts
    to be accessible for each user from anywhere.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Users will be able log in their XiVO Clients using
    LDAP authentication. This will remove the constraint for users to
    remember one more password. It will also reduce the amount of
    configuration needed for each user by the administrator.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;REST APIs will be usable from anywhere, but only by
    authorized people/services. Currently most REST APIs are only usable
    from the XiVO server and exposing them to the outside is a bad idea.
    So we are adding an authentication system to these APIs to protect
    them, so that they can be exposed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See you for the next sprint review.&lt;/p&gt;
&lt;p&gt;Source:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://projects.xivo.io/versions/227" title="15.11 Roadmap"&gt;15.11 Roadmap&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary><category term="XiVO"></category><category term="authentification"></category><category term="consul"></category><category term="development"></category><category term="software"></category><category term="téléphonie"></category><category term="web-interface"></category><category term="xivo"></category></entry><entry><title>Authentication in XiVO</title><link href="http://blog.xivo.io/authentication-in-xivo.html" rel="alternate"></link><updated>2015-05-25T15:34:00-04:00</updated><author><name>pcadotte</name></author><id>tag:blog.xivo.io,2015-05-25:authentication-in-xivo.html</id><summary type="html">&lt;p&gt;In recent months we have been working on the new XiVO client which
included amajor rework of the directory services in XiVO. A new daemon
is born from thiswork, xivo-dird. One of the challenge of the new
directory service is to allowusers to have access to their favorites and
personal contacts from any device- the current implementation of
personal contacts are stored locally and arelost in a context where
users change seats.&lt;/p&gt;
&lt;p&gt;Bringing the personal information to xivo-dird means that some form
ofauthentication is now required. The first step is to be able to use
user'sCTI login and password and to evolve from there to add more
flexibility.&lt;/p&gt;
&lt;h3&gt;Meet xivo-auth&lt;/h3&gt;
&lt;p&gt;xivo-auth is a new service that is going to be used as the single entry
pointfor authentication in XiVO. The first step being the authentication
in xivo-dird.Some of the requirements for xivo-auth is to be able to
implement other forms ofauthentication. The plugin architecture used,
similar to xivo-dird, will makethe development of new authentication
source fast and easy. This mean that LDAPserver, CSV file, Facebook or
Twitter authentication should and will be possibleto implement without
having to modify xivo-auth.&lt;/p&gt;
&lt;h3&gt;The internals of xivo-auth&lt;/h3&gt;
&lt;p&gt;xivo-auth is a simple HTTP server that checks a username and
passwordcombination (though other forms of authentication might appear)
and delivers a tokenthat can be forwarded to other services that require
authentication. Otherservices can validate that token and also forward
it to other services on behalfof the user. Tokens and ACLs are generated
and managed by &lt;a href="https://consul.io" title="Consul"&gt;consul&lt;/a&gt; which is alsoused
for personal data storage.&lt;/p&gt;
&lt;p&gt;The following sequence diagram show the interaction when a user
connectsto its XiVO client.&lt;/p&gt;
&lt;p&gt;&lt;img alt="login.png" src="/public/architecture/login_cti_via_xivo_auth.png" title="login.png, mai 2015" /&gt;&lt;/p&gt;
&lt;p&gt;After this step, xivo-ctid has a token with a limited lifetime for this
user.&lt;/p&gt;
&lt;p&gt;When a logged-in user performs a lookup in its XiVO client, the user's
token isforwarded to xivo-dird which can return the appropriate results
for this user.&lt;/p&gt;
&lt;p&gt;&lt;img alt="lookup.png" src="/public/architecture/lookup_cti_via_dird_xivo_auth.png" title="lookup.png, mai 2015" /&gt;&lt;/p&gt;
&lt;p&gt;Stay tuned for more information as we implement xivo-auth and the
firstauthentication plugins.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;* Images created with
&lt;a href="https://github.com/violetumleditor/violetumleditor" title="Violet"&gt;Violet&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/p&gt;</summary><category term="XiVO"></category><category term="authentification"></category><category term="HTTP"></category><category term="consul"></category><category term="directory"></category></entry><entry><title>2nd BarCamp about VoIP and open source telephony system</title><link href="http://blog.xivo.io/2nd-barcamp-about-voip-and-open-source-telephony-system.html" rel="alternate"></link><updated>2015-04-20T20:37:00-04:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-04-20:2nd-barcamp-about-voip-and-open-source-telephony-system.html</id><summary type="html">&lt;p&gt;To better know each other skills and projects, we organised a &lt;a href="/index.php?post/2015/04/07/Les-contributeurs-de-la-communaut%C3%A9-XiVO"&gt;survey
about XiVO
contributors&lt;/a&gt;
(in french) and a meeting with the &lt;a href="/index.php?post/2015/04/16/1st-BarCampIRC-about-Asterisk-and-open-source-telephony-system"&gt;1st BarCampIRC about VoIP open
source&lt;/a&gt;
on the BarCamp wiki website,
&lt;a href="http://barcamp.org/w/page/94666184/BarCampIRC-Québec"&gt;here&lt;/a&gt;. During
this meetings, some contributors send their opinions about "&lt;a href="/index.php?post/2015/04/13/Pourquoi-j-ai-choisi-XiVO"&gt;Why they
chose XiVO&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;&lt;img alt="VoIP-OpenSource-Session2-Open4All.png" src="/public/VoIP-OpenSource-Session2-Open4All.png" title="VoIP-OpenSource-Session2-Open4All.png, avr. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;The news: a &lt;a href="http://barcamp.org/w/page/95337185/BarCampIRC-VoIP-opensource"&gt;2nd BarCampIRC about VoIP and open source telephony
system&lt;/a&gt;
with some Linux User Group.An other event will welcome ideas from
students in Télécommunication schools, in automn.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;The questions and topics&lt;/strong&gt;News about webRTC ; What's the XiVO business
model (how does it ranks compared to a conventional PABX?) ; The use of
VoIP in the podcasting / radio broadcast ; How to manage payments and
voip ? Pay per minute , paypal, bitcoins , etc. ; What's the news about
Voice Recognition? ; What about a good VoIP instead of H323 and Skype? ;
Which solutions to speak with lot of people, as in Mumble? ; What about
Atlassian, like Jira, Confluence and HipChat? and BlueJimp (Jitsi) Your
advices about a cartoon with XiVO 1,2,3... go!&lt;/p&gt;
&lt;p&gt;Reading &lt;a href="/public/BarCampIRC-2ndMeeting-VoIP-OpenSource-2015-CRv01.pdf"&gt;the report about the 2nd
BarCampIRC&lt;/a&gt;
about VoIP and open source telephony system.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>1st BarCampIRC about Asterisk and open source telephony system</title><link href="http://blog.xivo.io/1st-barcampirc-about-asterisk-and-open-source-telephony-system.html" rel="alternate"></link><updated>2015-04-16T20:01:00-04:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-04-16:1st-barcampirc-about-asterisk-and-open-source-telephony-system.html</id><summary type="html">&lt;p&gt;&lt;img alt="BarCampVoIP.png" src="/public/BarCampVoIP.png" title="BarCampVoIP.png, avr. 2015" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DOWNLOAD THE REPORT about this #1 meeting:&lt;/li&gt;
&lt;li&gt;&lt;a href="/public/BarCampIRC-1ereRencontreSurVoIP-CRv01.pdf"&gt;BarCampIRC-1ereRencontreSurVoIP-CRv01.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;About&lt;/strong&gt;: A BarCamp is an ad-hoc unconference born from the desire for
people to share and learn in an open environment. It is an intense event
with discussions, demos and interaction from attendees. All your
questions and topics here:
&lt;a href="http://barcamp.org/w/page/94666184/BarCampIRC-Qu%C3%A9bec" title="http://barcamp.org/w/page/94666184/BarCampIRC-Qu%C3%A9bec"&gt;http://barcamp.org/w/page/94666184/...&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;When&lt;/strong&gt; Wednesday, April 15 2015: 15.04.2015 10:00 Quebec and 16:00
France - 1H to 2H&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Localisation&lt;/strong&gt;: This meeting will be on IRC, channel #xivo. This
channel is open everyday.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Who&lt;/strong&gt;: This meeting welcomes open source contributors about VoIP open
source. The topic is about Asterisk and open source telephony system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Development&lt;/strong&gt;: A Barcamp is a "network of user-generated conferences
primarily focused around technology and the web. They are open,
participatory workshop-events, the content of which is provided by
participants. The first BarCamps focused on early-stage web
applications, and were related to open source technologies, social
software, and open data formats. The format has also been used for a
variety of other topics" as PythonCamp, DrupalCamp or this one about
VoIP. You can register and edit the page yourself to add your ideas.This
meeting will be on IRC chat to welcoming some open source communities
and different skills.The stake is to speak about the differents topics
coming from participants, to present your skills or your needs, to share
documents or news.&lt;/p&gt;
&lt;p&gt;&lt;img alt="2015-Flyer-BarCampIRC-Telephony-OpenSource.png" src="/public/2015-Flyer-BarCampIRC-Telephony-OpenSource.png" title="2015-Flyer-BarCampIRC-Telephony-OpenSource.png, avr. 2015" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary><category term="Asterisk"></category><category term="open source"></category><category term="telephony"></category></entry><entry><title>XiVO contributors: Why I chose XiVO?</title><link href="http://blog.xivo.io/xivo-contributors-why-i-chose-xivo.html" rel="alternate"></link><updated>2015-04-13T20:36:00-04:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-04-13:xivo-contributors-why-i-chose-xivo.html</id><summary type="html">&lt;p&gt;--- &lt;em&gt;Summary in english&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To better know each other skills and projects, we organised a survey
    about XiVO contributors (&lt;a href="/index.php?post/2015/04/07/Les-contributeurs-de-la-communaut%C3%A9-XiVO"&gt;in
    french&lt;/a&gt;)
    and a meeting with the &lt;a href="barcamp.org/w/page/94666184/BarCampIRC-Québec"&gt;1st BarCampIRC about VoIP open
    source&lt;/a&gt; with a
    &lt;a href="/public/BarCampIRC-1ereRencontreSurVoIP-CRv01.pdf"&gt;report&lt;/a&gt;. During
    this meetings, some contributors send their opinions about "Why I
    chose XiVO". This is the debriefing from d_raven, a
    XiVO contributor. This is the summary. The full document following
    is in french.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;1. The company's activities&lt;/li&gt;
&lt;li&gt;2. The specification and the idea of ​​setting up&lt;/li&gt;
&lt;li&gt;3. The costs were astronomical&lt;/li&gt;
&lt;li&gt;4. I looked at free and paid solutions&lt;/li&gt;
&lt;li&gt;5. After some research, I found XiVO&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;--- &lt;em&gt;The full article in french&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Pour mieux connaître les compétences et projets de chacun, nous avons
organisé &lt;a href="/index.php?post/2015/04/07/Les-contributeurs-de-la-communaut%C3%A9-XiVO"&gt;un sondage sur les contributeurs
XiVO&lt;/a&gt;
et &lt;a href="barcamp.org/w/page/94666184/BarCampIRC-Québec"&gt;une 1ère rencontre avec un BarCampIRC sur la VoIP open
source&lt;/a&gt; dont voici le
&lt;a href="/public/BarCampIRC-1ereRencontreSurVoIP-CRv01.pdf"&gt;compte-rendu&lt;/a&gt;.
Durant ces rencontres, les contributeurs ont échangé leurs avis, dont
"Pourquoi j'ai choisi XiVO". Ceci est le témoignage de d-raven, un
contributeur.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Les activités de l'entreprise&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"Nous gérons environs 20 points de ventes grand public et points de
    ventes en France. Orange gère la formation et l'accès à ses propres
    outils mais notre entreprise est libre pour la mise en place de
    l'infrastructure informatique, réseau et télécom.&lt;/li&gt;
&lt;li&gt;Nos points de ventes sont reliés à notre système d'information par
    des VPNs que nous gérons nous même. Chaque point de vente possède un
    certain nombre de ligne mais qui sont de simple lignes analogiques
    (avec un accès ADSL par ligne). Aussi, afin de faire évoluer
    l'ensemble et permettre une meilleure collaboration de nos équipes
    de ventes, et surtout d'avoir une meilleure ergonomie dans la
    gestion des appels téléphonique à nos vendeurs, nous avons décidé de
    nous équiper d'un IPBX.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Novembre 2013&lt;/em&gt;: Nous avons donc contacté les équipes de ventes de
    la section entreprise de l'opérateur (OBS), c'est à dire Orange.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. Le cahier des charges était simple&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Le Système permettant de relier plusieurs sites entre eux
    (environ 25) ; téléphone sur IP uniquement ; possibilité de
    réutiliser (dans certains cas) les postes DECT installés sur place
    (en particulier les points de ventes) ; créer des conférences ;
    créer des groupements de postes ; d’enregistrer à la volée les
    appels ; avoir des stats détaillées des communications ; connaître
    l'état d'un poste (en communication ou pas) ; avoir une fonction ACD
    (si on en a besoin) ; avoir un client sur le poste de l'utilisateur
    permettant d'afficher les appels reçus ; nombre de poste : 80 de
    type DECT et 20 type FIXE ; pas de choix défini pour la marque de
    l'IPBX; possibilité d'avoir un IPBX virtualisable ; mutualiser les
    appels et faire baisser très nettement les coûts de communication.&lt;/li&gt;
&lt;li&gt;L'idée de mise en place est simple : Pour chaque ordinateur installé
    dans les points de ventes , 1 DECT devait être installé. On avait
    demandé un lien avec Lync (de Microsoft), on pensait pouvoir changer
    l'état du poste (comme étant occupé sur Lync) si quelqu'un appelait
    sur le poste DECT.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3. Les coûts étaient astronomiques&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Mai 2013&lt;/em&gt;: Après environ 4 mois d'attente, nous avons eu quelques
    réponses vagues. Après 6 mois, nous avons eu 2 devis.&lt;/li&gt;
&lt;li&gt;115 000 euros pour l'un et 111 000 euros pour l'autre.&lt;/li&gt;
&lt;li&gt;A cela, il fallait en plus: prévoir les postes DECT et fixes (aucun
    n'est inclus dans les propositions); prévoir les liens
    d'interconnexion pour acheminer les appels voix (donc le trunk
    vers l'opérateur) ; le coût des communications, tout était facturé à
    l'utilisation (temps réel , pas de forfait) ; le prix des serveurs
    pour une des deux propositions était virtualisé mais auquel je
    devais fournir le matériel.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Je leur ai demandé pourquoi ils n'avaient pas inclus la possibilité
    d'enregistrer des appels à la volé. Réponse : « on peut le faire,
    mais c'est une option, il faut rajouter un boîtier sur votre réseau
    et çà vous coûtera environ 40 000 euros !!! »&lt;/li&gt;
&lt;li&gt;Après encore plusieurs mois de patience, ils sont revenus pour
    savoir si on signait. Je leur ai indiqué que çà ne serait pas le cas
    avec un tel coût. Je leur ai indiqué que je souhaitais vraiment
    l'option d'enregistrement à la volée, mais pas à ce prix. Réponse :
    « Monsieur , le plus simple est d'utiliser un enregistreur de type
    "dictaphone" et de le connecter à votre téléphone s'il possède une
    prise casque jack 3.5 ! » On a mis de côté leurs offres.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Mai 2014&lt;/em&gt;: Ils sont revenus une nouvelle fois pour relancer
    le projet. Ils m'ont demandé de revoir mon cahier des charges ... à
    la baisses certains fonctions étant impossibles à obtenir
    (l'enregistrement pas exemple) sans y mettre les
    moyens (financiers). Je n'ai pas donné suite ... et j'ai décidé de
    chercher une solution plus souple , moins propriétaire et avec
    laquelle on pourrait faire ce que l'on veut.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. Du côté des solutions gratuites et payantes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solution Asterisk:
    &lt;ins&gt;
    Elastix, FreePBX, SwitchVox
    &lt;/ins&gt;
    .&lt;/li&gt;
&lt;li&gt;Solution autre:
    &lt;ins&gt;
    FreeSwitch
    &lt;/ins&gt;
    (avec interface graphique :
    &lt;ins&gt;
    FusionPBX / Bluevox
    &lt;/ins&gt;
    ),
    &lt;ins&gt;
    3CX
    &lt;/ins&gt;
    .&lt;/li&gt;
&lt;li&gt;Bref, c'était sympa, mais Switchvox n'étant pas disponible
    directement en France, il fallait passer par un revendeur étranger
    et nous étions toujours limité pour certains trucs, car le système
    Asterisk est fermé. 3CX était pas mal, mais bon avoir un IPBX qui
    tourne sous Windows ... c'est pas génial.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5. Après quelques recherches, j'ai découvert XiVO&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;J'ai testé le produit, commencé à l'adapter (car j'ai des besoins
    spécifiques et j'aime bien toucher un peu à tout et mâitriser le
    produit que j'utilise).&lt;/li&gt;
&lt;li&gt;Nous avons alors fait le choix suivant : XiVO comme infrastructure
    principale et 3 liens Trunks (OVH et OPENIP).&lt;/li&gt;
&lt;li&gt;Nous allons voir pour y ajouter :
    &lt;ins&gt;
    FreeSwitch
    &lt;/ins&gt;
    pour le système des réunions (nous souhaitons avoir le double
    système de code pin : organisateur/utilisateur, car ce dernier est
    utilisé pour les conférences sur le système de conférence d'Orange)
    ;
    &lt;ins&gt;
    ICTFax
    &lt;/ins&gt;
    pour la partie émission / réception fax (qui ne peut se lier qu'à un
    système FreeSwitch) &amp;lt;- nous souhaitons utiliser la fonction
    email-to-fax (avec accusé de réception) ;
    &lt;ins&gt;
    Kamailio ou repo
    &lt;/ins&gt;
    comme serveur proxy , le but étant de permettre à certains
    utilisateurs de se connecter à notre serveur XiVO depuis Internet ,
    sans que ce dernier soit directement relié à Internet (en gros avoir
    un "reverse-proxy" pour la partie SIP de XiVO)&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Si nous arrivons à tout intégrer à XiVO (double pin pour les
    conférences et email-to-fax), nous supprimerons les ajouts
    (FreeSwitch et ICTFax).&lt;/li&gt;
&lt;li&gt;Nous avons déjà commencé à déployer XiVO, pour l'instant, il est en
    local, il n'y a pas encore de poste installé sur les points de vente
    (je viens juste de finir la QOS sur les routeurs). Les postes
    installés sur place (pour essai et mise en production dans certains
    cas): Cisco SPA525G2, Yealink T46G et T48G, Aastra 6867i, Cisco
    SPA112, Gigaset C530IP, Polycom IP 5000.&lt;/li&gt;
&lt;li&gt;Je vais aussi tester et connecter un Cisco 9971 et un Cisco 7941, et
    deux autres modèles, un Cisco SPA3102 et un DECT Aastra histoire de
    voir ce que çà donne.&lt;/li&gt;
&lt;li&gt;Tous les postes sont ou seront connectés à XiVO uniquement , aucun
    poste ne sera utilisé sur FreeSwitch (sauf pour tester). Voilà où
    j'en suis en &lt;em&gt;avril 2015&lt;/em&gt;."&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;d-raven&lt;/p&gt;
&lt;p&gt;&lt;em&gt;d-raven&amp;gt; je pense que la meilleur façon de convaincre, c'est de
montrer que çà fonctionne !!&lt;/em&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint Review 15.07</title><link href="http://blog.xivo.io/sprint-review-1507.html" rel="alternate"></link><updated>2015-04-10T13:52:00-04:00</updated><author><name>jpgelinas</name></author><id>tag:blog.xivo.io,2015-04-10:sprint-review-1507.html</id><summary type="html">&lt;p&gt;Here are a few links explaining what we are going to ship in XiVO 15.07:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.xivo.io/versions/224" title="https://projects.xivo.io/versions/224"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;XiVO 15.07 brings new visual and functional features and fixes a few
bugs among which:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The xlet services and fax has been redesigned&lt;/li&gt;
&lt;li&gt;The xlet people shows the mobile phone number&lt;/li&gt;
&lt;li&gt;Agent status in xlet people is always displayed&lt;/li&gt;
&lt;li&gt;(bug) background input in fax xlet on mac has been adjusted&lt;/li&gt;
&lt;li&gt;(bug) removed an error displayed in XiVO Client
    (QPixmap::scaleHeight: Pixmap is a null pixmap)&lt;/li&gt;
&lt;li&gt;(bug) new fonts were not displayed if not installed locally on
    client's system&lt;/li&gt;
&lt;li&gt;Old XiVO styles were removed&lt;/li&gt;
&lt;li&gt;Xlet conference code was refactored (in preparation of
    upcoming redesign)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This version also fixes 9 other bugs :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 bugs related to associating and de-associating lines (or
    multiple lines) to a device&lt;/li&gt;
&lt;li&gt;2 bugs related to provisioning, setting admin/user password on
    Polycom phones and resetting a device to autoprov when already in
    autoprov&lt;/li&gt;
&lt;li&gt;2 bugs related to xivo-upgrade, queue periodic-announce is not lost
    anymore when upgrading and an upgrade error when upgrading from
    13.25&lt;/li&gt;
&lt;li&gt;it is now possible to dial a conference room begining with 0 from
    the xivo client&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also included a new Asterisk version 11.17.0 and added a new tutorial
to the contributions section.&lt;/p&gt;
&lt;p&gt;Enjoy! ;)&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Les contributeurs de la communauté XiVO</title><link href="http://blog.xivo.io/les-contributeurs-de-la-communaute-xivo.html" rel="alternate"></link><updated>2015-04-07T17:23:00-04:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-04-07:les-contributeurs-de-la-communaute-xivo.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;RÉSULTAT DU SONDAGE: les réponses des contributeurs de XiVO&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Le statut, le genre et l'âge des répondants, contributeurs sur XiVO&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parmi les 20 répondants&lt;/strong&gt;, 19 sont des hommes et 60% des répondants
ont entre 31 et 40 ans. 25% se définissent passionnés de
télécommunications et 10% sont membres d'un groupe utilisateur Linux ou
open source.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L'activité des répondants est :&lt;/strong&gt;1 dirigeant d'une société en
informatique et télécommunications, 3 directeurs informatique, 1
administrateur réseau/téléphonie, 2 employés dans un centre d’appel, 2
développeurs informatique, 4 employés en informatique ou télécom, 2
administrateur système, 2 Technico-commercial, 2 techniciens en
informatique et réseau, 1 responsable informatique. Parmi eux 25% sont
des clients.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L'objectif de cette section est :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;d'avoir un portrait des répondants qui se sont mobilisés par ce
    sondage;&lt;/li&gt;
&lt;li&gt;de situer les profils professionnels et la diversité métiers
    des répondants. En identifiant les profils absents pour accueillir
    d'autres contributeurs on évite de renforcer la communication
    seulement sur les profils identifiés.&lt;/li&gt;
&lt;li&gt;d'identifier les ressources dont les contributeurs auront besoin
    selon leurs métiers et les prochaines réponses.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Q.1 Avant de connaître XiVO, quelles solutions avez-vous envisagé ?
Qu'est ce qui vous a fait garder XiVO ?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Les 20 répondants citent les solutions qu'ils ont testé avant de
connaître le système XiVO et le support d'Avencall. Ils partagent plus
de 23 argumentations pour avoir gardé XiVO. Des arguments :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;la possibilité de nouvelles fonctionnalités et l'absence de
    contraintes évolutives;&lt;/li&gt;
&lt;li&gt;de s'affranchir des licences propriétaires;&lt;/li&gt;
&lt;li&gt;de connaître la communauté Asterisk et des solutions Libres;&lt;/li&gt;
&lt;li&gt;soit le système XiVO était déjà en place dans l'entreprise et vous
    avez découvert XiVO durant votre prise de poste soit à l'occasion
    d'un remplacement des postes, votre entreprise a installé des
    systèmes XiVO;&lt;/li&gt;
&lt;li&gt;l'importance de la relation de proximité, le support et la qualité
    des livrables;&lt;/li&gt;
&lt;li&gt;l'accès à la documentation et votre auto-formation pour tester;&lt;/li&gt;
&lt;li&gt;qu'il s'agit d'un produit complet et souple.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Q.2 Comment avez-vous connu XiVO ?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Les 20 répondants ont présenté 4 sources où ils ont découvert XiVO:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;par l'entreprise ou des collègues, donc dans un contexte
    professionnel;&lt;/li&gt;
&lt;li&gt;par des activités de veille technologique et des recherches
    professionnelles;&lt;/li&gt;
&lt;li&gt;par le réseau de connaissance, de confiance et de proximité;&lt;/li&gt;
&lt;li&gt;par l'accès à des ressources documentaires.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Comment_Avez_vous_connu_XiVO-Mars2015.png" src="/public/Comment_Avez_vous_connu_XiVO-Mars2015.png" title="Comment_Avez_vous_connu_XiVO-Mars2015.png, avr. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q.3 Pourquoi avez-vous installé XiVO et quand l'avez-vous testé pour
la première fois ? Quels téléphones utilisez-vous ?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Les 20 répondants citent 30 exemples qui révèlent ces raisons pour
installer XiVO:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pour tester et renouveler le parc téléphonique;&lt;/li&gt;
&lt;li&gt;comme une alternative, un choix et une adaptation.&lt;/li&gt;
&lt;li&gt;2 témoignages d'usages professionnels et sur le potentiel de XiVO.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Les 20 répondants citent 14 produits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Les plus citées sont Aastra et Gigaset puis Snom, Cisco et Polycom
    suivis de Yealink et Jitsi pour finir par Thomson, Grandstream,
    Autocom Xorcom, Mitel, Siemens, Spectra Link et Tiptel.&lt;/li&gt;
&lt;li&gt;Les répondants témoignent utiliser depuis peu ou déployer
    prochainement des produits comme : Yealink, Spectra Link, Jitsi
    et Mitel.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Q.4 Quels sont les supports ou tutoriels que vous utilisez le plus ?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Les 20 répondants présentent 48 sources de supports d'informations. Ces
réponses révèlent 4 groupes :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ceux qui se dirigent sur les ressources documentaires, tutoriels,
    IRC, forums, code source et fiches produits de XiVO (51%);&lt;/li&gt;
&lt;li&gt;ceux qui vont sur l'IRC, code source et forum d'Asterisk (25%);&lt;/li&gt;
&lt;li&gt;ceux qui vont chercher ou échanger sur les forums communautaires
    (14%);&lt;/li&gt;
&lt;li&gt;ceux qui développent des solutions eux-même : autodidacte ou en
    interne de leur entreprise et qui proposent de les mettre à
    disposition (10%).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Les_supports_les_plus_utilisees_XiVO-Mars2015.png" src="/public/Les_supports_les_plus_utilisees_XiVO-Mars2015.png" title="Les_supports_les_plus_utilisees_XiVO-Mars2015.png, avr. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q.5 Quels bénéfices vous a apporté XiVO ? Vous recommanderiez XiVO à
qui et pourquoi ?&lt;/strong&gt;Les 20 répondants présentent :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;34 argumentations sur les bénéfices de XiVO tels que :&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;la simplicité d'installation, de prise en main, de déploiement, de mise
à jour et un support efficace; des avantages sur les coûts; la
possibilité de modifier, la flexibilité de choix de modèles de
terminaux, des solutions adaptées; un produit open source;
l'indépendance face à des solutions propriétaires; une stabilité et
fiabilité; des évolutions régulières; adapté aux entreprises; s'appuyant
sur Asterisk; XiVO apporte de la communication unifiée; la présence
d'une communauté francophone.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 argumentations sur les manques de XiVO tels que :&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;l'absence de support sur tous les modèles; la demande d'une
documentation complète en français.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;12 avis pour recommander XiVO et Avencall :&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;car c'est un produit phare; pour réduire les coûts et s'affranchir de
solutions propriétaires; cela convient aux collectivités territoriales,
aux services publics (ex : les commissions scolaires), TPE et PME; à des
amis en télécommunications; Avencall pour l'installation et la
maintenance; pour ceux qui connaissent Linux et Debian; à tous le monde.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q.6 Vous avez un projet d'étude&lt;/strong&gt;60% des répondants ont témoigné avoir
des projets personnels qu'ils cherchent à développer. Parmi ces
répondants :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 témoignages portent sur leurs activités actuelles;&lt;/li&gt;
&lt;li&gt;11 témoignages sur ce que les répondants aimeraient voir de
    développé avec XiVO;&lt;/li&gt;
&lt;li&gt;5 expriment des attentes sur les évolutions pour « demain ».&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comme: « le Web RTC », « l'intégration d’Open VPN », « l'intégration de
XiVO avec Outlook 2013 », « la fin des REST API à développer », « la
création d’un softphone XiVO».&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q.7 Ce que vous aimeriez faire avec la communauté XiVO&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Les répondants ont témoigné avoir des compétences qu'ils souhaitent
partager sur des projets communs : tutoriels, développement internes
puis mise à disposition (GNU GPL), traduction, se tenir informer ou
donner des avis sur des fonctionnalités.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 témoignages sur les activités actuelles des contributeurs :
    publications de tutoriels, échanger sur le forum Asterisk.&lt;/li&gt;
&lt;li&gt;7 témoignages sur vos actions à venir qui vous motivent :
    publications, mise en licence GNU GPL, modifier des configurations,
    rester informer sur l'évolution de XiVO.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Les remerciements envoyés par les contributeurs de XiVO&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C.L témoigne  « Je pense avoir effectué une bonne partie des
    premières installation XiVO depuis ses débuts, avec M. Boily ;-) »&lt;/li&gt;
&lt;li&gt;Y.G témoigne : « Je tiens à remercier tous les gens qui nous ont
    aidés sur le chat.  »&lt;/li&gt;
&lt;li&gt;T.G témoigne  « Merci aux développeurs pour leur travail, merci à
    leur maison mère de distribuer gratuitement et librement XiVO et
    nous permettre d'en profiter même lorsque nous ne pouvons pas nous
    payer de solution de téléphonie hors de prix, merci à Valérie pour
    tout ce qu'elle a fait pour NyXD. Et merci à tous pour cette
    sympathie, cette ambiance, cette proximité (bien que virtuelle,
    distance oblige), ce logiciel bien sûr, cette ouverture d'esprit,
    l'aide que vous nous apportez au fil des jours, les connaissances et
    compétences que vous nous aidez à acquérir, et le plaisir que vous
    nous offrez en nous permettant d'opérer notre propre serveur de
    téléphonie. »&lt;/li&gt;
&lt;li&gt;M.F témoigne  « Nous avons eu d'excellents contacts avec l'agence
    Avencall de Rennes nous sommes heureux d'avoir fait ce choix ...
    merci ! »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;« Les utilisateurs ont une réaction très positive par rapport au client
CTI »&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Y.C témoigne  « À la question si je conseillerai XiVO, je vous
    répondrai que je serai même prêt à le distribuer ! il correspond à
    tous mes besoins. »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;« Je suis tombé récemment sur le blog XiVO pour les nul que j'ai trouver
très intéressant, j'aurai aimé l'avoir à mes débuts, le blogueur a
l'aire sympas et motivé. »« Longue vie à XiVO et à sa communauté !  »&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;G.R témoigne  « Déploiement plus rapide des postes. Recommandé sans
    soucis, simple, efficace. »&lt;/li&gt;
&lt;li&gt;A. témoigne : « Ce logiciel est parfait =) .»&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Avec les remerciements de Valérie, C.M de XIVO :)&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint Review 15.06</title><link href="http://blog.xivo.io/sprint-review-1506.html" rel="alternate"></link><updated>2015-03-27T14:19:00-04:00</updated><author><name>jpgelinas</name></author><id>tag:blog.xivo.io,2015-03-27:sprint-review-1506.html</id><summary type="html">&lt;p&gt;Here are a few links explaining what we are going to ship in XiVO 15.06:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.xivo.io/versions/222" title="https://projects.xivo.io/versions/222"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;XiVO 15.06 brings changes into the XiVO Client, visual and functional
changes among which:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the identity xlet's transformation continued&lt;/li&gt;
&lt;li&gt;the fax xlet has been revamped&lt;/li&gt;
&lt;li&gt;the tabber has been revamped&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This version also fixes 8 bugs.&lt;/p&gt;
&lt;p&gt;Technical matters :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xivo-provd was splitted into multiple git repositories :
    xivo-provisioning, xivo-provd-client and xivo-provd-cli. The later
    replaces the deprecated xivo-provd-pycli, the command line
    interpreter for provd.&lt;/li&gt;
&lt;li&gt;xivo-agent was renamed to xivo-agentd to be coherent with the
    general naming convention.&lt;/li&gt;
&lt;li&gt;xivo-agent-ctl was renamed to xivo-agentd-cli to be coherent with
    the general naming convention.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can consult &lt;a href="http://documentation.xivo.io/en/latest/upgrade/upgrade.html#id1" title="Upgrade Notes"&gt;upgrade
notes&lt;/a&gt;
for this version.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Indonesian and French meeting in Paris about XiVO</title><link href="http://blog.xivo.io/indonesian-and-french-meeting-in-paris-about-xivo.html" rel="alternate"></link><updated>2015-03-16T19:09:00-04:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-03-16:indonesian-and-french-meeting-in-paris-about-xivo.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Can you present us your company and in what industry you work
    within Indonesia ?&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;"KMP is an independent company located in Indonesia offering IT and
Telecommunication based services and solutions.. We specialize in
customized business solutions. KMP helps clients plan, build and support
their IT and Telecomunication infrastructures. KMP combines expertise
from IT and Telco networking, operating environments, and data storage
protection technologies.- With our advanced skills in consulting,
integration and managed services, we offer our customers a unique
combination of solutions and business strength. We have experience in
the following sectors: government, office buildings, telecom operators,
factory and mining industries".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;How did you learn about XiVO and open source telephony systems?&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;"We discovered &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; when we visited an
exhibition in Hong-Kong and
&lt;a href="http://www.avencall.com/en/avencall-at-the-communicasia-show-2013-in-singapore"&gt;Singapore&lt;/a&gt;.
After gathering information about what products XiVO offered, we held
discussions back in Indonesia that helped analyze the strengths and
weaknesses of XiVO and the future of open source technologies. After
contacting their management, we finally got a chance to work with XiVO.
Today XiVO has a good user base in Indonesia. We have installed XiVO in
our biggest telecomunication company, in government mining offices, in
government banking offices and other kinds of office buildings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It was a great experience for us to visit the IT exhibition in Paris,
we met with &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; personnel. Some XiVO partners
over there showed us some interesting features such as an integration
between XiVO and Bluemind. Juned, Wolter and I are tasked with selling
XiVO solutions and making sure the usage of XiVO grows within Indonesia
year by year. Wolter and I have are responsible for sales and marketing.
Juned is more concerned with technical support".&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="IndonesianInParis-XiVO-March2015-RS.jpg" src="/public/IndonesianInParis-XiVO-March2015-RS.jpg" title="IndonesianInParis-XiVO-March2015-RS.jpg, march. 2015" /&gt;Picture:
meeting in Paris - 02.2015&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;How did you become interested in telephony solutions and XiVO?&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;"&lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; is an Open Source product with a very
good support. They have an R&amp;amp;D team used to further develop features and
meet customer requirements. They also have success stories in Europe
with many customers and a good user base.- XiVO provides an
&lt;a href="http://xivo.readthedocs.org/en/stable/"&gt;up-to-date&lt;/a&gt; system by releasing
new versions which helps develop more and more features. This is good
for meeting customer requirements and keeping client satisfaction".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;According to you, what trends will we see during 2015 in the world
    of Unified Communication and Open Source?&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;"The need for unified communications will increase year by year
because it will always be necessary to fulfilling other professional
needs. BYOD (Bring your own device) will become a trend among
professionals and U.C can fill this trend.- Open Source technologies is
one of the best alternatives available to fullfill needs in U.C thanks
to its flexibility and growing feature set available at a lower cost.-
We usually visit the asian communication exhibition in Singapore every
year (usually during June or July) and the &lt;a href="http://www.ictindo.com"&gt;Indonesia call ICT
exhibition&lt;/a&gt;. It occurs every 2 years and the
next will be held in Jakarta during 2016.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Currently, we are very interested by the possibilities around instant
messaging and web collaboration that can be delivered using open source
solutions, especially with a XiVO server".&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creative Commons Share-Alike (CC-SA) v3.0 - 03.2015&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint Review 15.05</title><link href="http://blog.xivo.io/sprint-review-1505.html" rel="alternate"></link><updated>2015-03-13T13:55:00-04:00</updated><author><name>jpgelinas</name></author><id>tag:blog.xivo.io,2015-03-13:sprint-review-1505.html</id><summary type="html">&lt;p&gt;Here are a few links explaining what we are going to ship in XiVO 15.05:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.xivo.io/versions/221" title="https://projects.xivo.io/versions/221"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;XiVO 15.05 brings changes into the XiVO Client: visual and functional
changes. Here are some screenshots of the login screen, Xlet people (the
future of all contact lists and searches in the application) and a view
of a "folded" client :&lt;/p&gt;
&lt;p&gt;&lt;img alt="demo-login.png" src="/public/xivo-client/demo-login.png" title="demo-login.png, mar. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="demo-people.png" src="/public/xivo-client/demo-people.png" title="demo-people.png, mar. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="demo-folded.png" src="/public/xivo-client/demo-folded.png" title="demo-folded.png, mar. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;We also added an HTTP REST API interface to xivo-agentd which means you
can now control agent status (login/logout/pause/unpause) from within
your own application.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Launch and relaunch docker containers manually with ease</title><link href="http://blog.xivo.io/launch-and-relaunch-docker-containers-manually-with-ease.html" rel="alternate"></link><updated>2015-02-26T09:35:00-05:00</updated><author><name>jhlavacek</name></author><id>tag:blog.xivo.io,2015-02-26:launch-and-relaunch-docker-containers-manually-with-ease.html</id><summary type="html">&lt;p&gt;First you create a file, let's say
&lt;code&gt;/etc/YOUR_APPLICATION/docker-run.conf&lt;/code&gt;, with one parameter by line. it
can look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# cat /etc/YOUR_APPLICATION/docker-run.conf
-t
-d
--restart=always
--name=YOUR_CONTAINER_NAME
-p 9000:9000
-v /etc/YOUR_APPLICATION/conf:/conf/
YOUR/REPOSITORY
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice the &lt;code&gt;--restart=always&lt;/code&gt; - it's an interesting option that
automatically restarts the container when it stops.&lt;/p&gt;
&lt;p&gt;You can then start your container by running the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# docker run $(cat /etc/YOUR_APPLICATION/docker-run.conf)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now let's imagine that you have updated your image and you would like to
deploy and restart it using the same parameters. You can do that with
the following script. It ensures a minimum downtime and can also be used
to start your container the first time.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

docker pull YOUR/REPOSITORY:latest&lt;span class="p"&gt;;&lt;/span&gt;
docker stop YOUR_CONTAINER_NAME&lt;span class="p"&gt;;&lt;/span&gt;
docker rm YOUR_CONTAINER_NAME&lt;span class="p"&gt;;&lt;/span&gt;
docker run &lt;span class="k"&gt;$(&lt;/span&gt;cat /etc/docker/YOUR_APPLICATION/docker-run.conf&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;You can check our XuC repository for a real world use case &lt;a href="1" title="1"&gt;1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ressources:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="1" title="1"&gt;1&lt;/a&gt; XuC docker repository:
    &lt;a href="https://registry.hub.docker.com/u/xivo/xuc/" title="https://registry.hub.docker.com/u/xivo/xuc/"&gt;https://registry.hub.docker.com/u/x...&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>Quebec International et XiVO, pour développer les TI</title><link href="http://blog.xivo.io/quebec-international-et-xivo-pour-developper-les-ti.html" rel="alternate"></link><updated>2015-02-23T18:14:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-02-23:quebec-international-et-xivo-pour-developper-les-ti.html</id><summary type="html">&lt;p&gt;Le 20 février 2015, &lt;a href="http://www.quebecinternational.ca/"&gt;Québec
International&lt;/a&gt; et des partenaires
tels qu'Investissement Québec et RCGT ont accueilli 30 participants pour
une matinée déjeuner-conférence. 2 membres de l'équipe &lt;a href="xivo.io"&gt;XiVO&lt;/a&gt;
étaient présents.&lt;/p&gt;
&lt;p&gt;February 20, 2015, Québec International and partners such as
Investissement Québec and RCGT welcomed 30 participants for a lunch
conference. 2 members of the team &lt;a href="xivo.io"&gt;XIVO&lt;/a&gt; were present.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Thierry Champagne de Québec International a présenté: l'importance
    des filiales étrangères dans la Région de Québec&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Une présentation qui débute avec un panorama du PIB, les acteurs lourds
et la dynamique territoriale qu'apportent les capitaux étrangers. En
effet, 50% des filiales proviennent des USA et 30% d'Europe. D'un point
de vue sectoriel, les TIC représentent 19%. Thierry Champagne a conclu
en présentant le rôle de Québec International : les activités de
l'agence comme acteur de développement économique, des services aux
entreprises dont l'accompagnement sur les dossiers de financement.&lt;/p&gt;
&lt;p&gt;&lt;img alt="022015-QI-Quebec-02-TChampagne.png" src="/public/022015-QI-Quebec-02-TChampagne.png" title="022015-QI-Quebec-02-TChampagne.png, fév. 2015" /&gt;Photo:
T.Champagne et les entreprises partenaires, dont Avencall. Picture:
T.Champagne, Québec International. Avencall partner of the meeting.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Linda Bergeron de Québec International a présenté: comment
    favoriser la croissance des filiales internationales?&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La plupart des entreprises identifient le volet accompagnement
qu'apporte QI mais sous-estiment l'intérêt du développement économique.
L'intervenante présente comment les 70 personnes de leur équipe sont
répartis par continents. Suite aux questions de la salle, l'intervenante
précise qu'il y a bien des correspondants en Amérique du Sud et Afrique
mas certains sont dans les ambassades, comme en Asie. La présentation
continue en soulignant que la création de filiales est une source de
prospérité du fait des transferts technologiques. Les analyses de QI
permettent de faire remonter des avis auprès du gouvernement (Ex : pour
le Forum de Davos).&lt;/p&gt;
&lt;p&gt;&lt;img alt="022015-QI-Quebec-L.Bergeron_et_JCarrierAccueil.png" src="/public/022015-QI-Quebec-L.Bergeron_et_JCarrierAccueil.png" title="022015-QI-Quebec-L.Bergeron_et_JCarrierAccueil.png, fév. 2015" /&gt;Photo:
L.Bergeron et J.Carrier qui anime la rencontre, Québec International&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Annie Lessard et Pierre Larouche du cabinet RCGT, Raymont Chabot
    Grant Tornton, ont présenté: comment prendre en charge une stratégie
    de croissance au Québec?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Annie Lessard expose des exemples d'entreprises qui ferment et les
    défis qu'elles doivent relever pour anticiper les signaux faibles:
    comme faire de la veille concurrentielle ou consolider. Dans la
    salle, les participants sont réactifs sur les exemples de « business
    case » et l'accès aux analyses économiques afin d'agir plutôt que
    de subir. Un étude menée par QI a révélé que 86% des entreprises ne
    prennent qu'1H par semaine pour discuter de stratégie. Après avoir
    suivi des conseils de QI, les entreprises se sont investies plus
    dans une démarche stratégique.&lt;/li&gt;
&lt;li&gt;Pierre Larouche souligne que l'innovation et l'audace est un
    investissement plus pris en compte par certaines entreprises plutôt
    que la recherche d'avantages fiscaux. Le marché exige de se
    démarquer et pour cela il existe différentes méthode comme intégrer
    des étudiants post-graduées. Dans le SAS (Software as a Service), le
    Cloud apporte une innovation dans l'accès, la gestion des donnés
    mais aussi dans la maintenance de la solution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Face à certains décideurs qui ne veulent pas prendre de risque car
« innovation » renvoit à de l'incertitude, il est possible d'étudier les
projets pour proposer des solutions concrètes.&lt;/p&gt;
&lt;p&gt;&lt;img alt="022015-QI-Quebec-ALessard_et_PLarouche_RCGT.png" src="/public/022015-QI-Quebec-ALessard_et_PLarouche_RCGT.png" title="022015-QI-Quebec-ALessard_et_PLarouche_RCGT.png, fév. 2015" /&gt;Photo:
Annie Lessard - Pierre Larouche, RCGT, Raymont Chabot Grant Tornton&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Martine Lessard de Québec International a présenté comment
    recruter à l'international?&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Déployer des filières, employer un étudiant post-gradué ou accompagner
une entreprise dans son embauche d'un employé à l'international et qui
fait venir sa famille. Pour recruter des talents, il faut s'appuyer sur
un réseau solide de partenaires, afin de faire progresser les différents
dossiers: prévision sur les besoins de main-d’œuvre, immigration, etc. 1
entreprise sur 2 va se lancer dans le recrutement suite aux réunions
organisées par QI.&lt;/p&gt;
&lt;p&gt;&lt;img alt="022015-QI-Quebec-MLessard_QI.png" src="/public/022015-QI-Quebec-MLessard_QI.png" title="022015-QI-Quebec-MLessard_QI.png, fév. 2015" /&gt;Photo:
Martine Lessard, Québec International&lt;/p&gt;
&lt;p&gt;L'équipe présente de &lt;a href="xivo.io"&gt;XiVO&lt;/a&gt; remercie les organisateurs pour
leur accueil et ces échanges!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sources:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QI, Québec International,
    &lt;a href="http://www.quebecinternational.ca/"&gt;www.quebecinternational.ca&lt;/a&gt;;
    &lt;a href="http://www.quebecinternational.ca/a-propos/equipe/prospection-d-investissements-etrangers/thierry-champagne/"&gt;Thierry
    Champagne&lt;/a&gt;;
    &lt;a href="https://ca.linkedin.com/in/lindabergeron"&gt;Linda Bergeron&lt;/a&gt;; &lt;a href="http://www.quebecinternational.ca/about-us/our-team/business-growth-support/martine--lessard/"&gt;Martine
    Lessard&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Annie Lessard et Pierre Larouche, RCGT:
    &lt;a href="http://www.rcgt.com/en/offices/"&gt;www.rcgt.com&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;XiVO-Avencall: Open Minded Open source System in telephony
    &lt;a href="xivo.io"&gt;xivo.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary><category term="développement économique"></category><category term="economic development in Quebec"></category><category term="investissement"></category></entry><entry><title>ElasticSearch in the XiVO ecosystem</title><link href="http://blog.xivo.io/elasticsearch-in-the-xivo-ecosystem.html" rel="alternate"></link><updated>2015-02-19T15:35:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-02-19:elasticsearch-in-the-xivo-ecosystem.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;What is ElasticSearch&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ElasticSearch is a real-time search and analytics engine with a
    RESTful API. It's a part of the ELK Stack, which is composed of a
    search engine (ElasticSearch), a logging tool (Logstash) and a
    visualization tool (Kibana). ElasticSearch is a distributed system,
    schema-less and provides a powerful query DSL.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="elasticsearch.png" src="/public/elasticsearch.png" title="elasticsearch.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Our use cases&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We are using ElasticSearch and Kibana together with XiVO in call
    centers as a real-time information board, usually on a call
    center dashboard. It can be also used by supervisors for fast and
    easy analysis of trends and statistics history.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Kibana call
center" src="/public/xuc/KibanaCC.png" title="Kibana call center, fév. 2015" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We are also integrating ElasticSeach and Kibana for use by our
    support team. They will use it for analyzing the recurrence of
    issues, common problems and other trends.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Data structure&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ElasticSearch is schema free. Data must be organized differently
    than in a traditional relational database. The basic ElasticSearch
    data unit is a document with multiple fields.&lt;/li&gt;
&lt;li&gt;The organization of our data is heavily influenced by the way the
    Kibana engine works. Kibana provides a time oriented graphical or
    textual representation of search results. Kibana dashboards are
    composed of widgets, each one showing a selection of a search
    request configured for the dashboard.&lt;/li&gt;
&lt;li&gt;Data stored in ElasticSearch are usually structured as
    timestamped events. A parent-child relation between documents
    enables drill-down analysis. For example: A parent document can
    store data on a call and its child documents can will represent
    events associated with the call.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Technical background&lt;/strong&gt;When we started with Elastic, the river-jdbc
&lt;a href="2" title="2"&gt;2&lt;/a&gt; plugin was not production ready. Therefore we developed a
small utility we called qlogtransfer. It is a basic synchronisation tool
written in Scala. It uses the jdbc Java driver to retrieve the data from
XiVO's postgresql database and inserts it into ElasticSearch using the
elastic4s scala client. The only data transformation done is through a
SQL request with JOIN clauses. The river-jdbc plugin seems to be stable
nowadays, so we are integrating it with our support team's use case.&lt;br /&gt;
We are also using another plugin: Head. It provides an easy but powerful
web interface to ElasticSearch with data browsing features. Plugin
installation is really very easy, the Head plugin installation can be
accomplished with one command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo elasticsearch/bin/plugin -install mobz/elasticsearch-head
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, ElasticSearch doesn't include any access right management, a
commercial extension called Shield must be used for this purpose.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kibana features&lt;/strong&gt;Kibana is a powerful web based visualization tool.
Multiple dashboards can be configured, each dashboard contains widgets
organized in rows as can be seen on the picture of our use case.
Dashboards are saved in ElasticSearch, inside a specific index. They can
be exported and you can also use advanced features like templated or
scripted dashboards. Kibana runs completely inside the web browser and
gets data from ElasticSearch through its REST API. Therefore, it's quite
CPU intensive, can consume a lot of bandwidth and needs to be able to
communicate directly with the ElasticSearch server. It seems to be a
good idea to protect the server behind a proxy, eventually with some
form of authorization if you don't have the Shield plugin (which is our
case).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;ElasticSearch is a powerful tool. Combined with Kibana you
can create nice monitoring interface. You can use nice features like the
time to live parameter for each document inserted, automatic data
distribution between nodes and a powerful search API. However, it's a
pity that the Shield plugin isn't open sourced.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ressources:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="1" title="1"&gt;1&lt;/a&gt; ElasticSearch: &lt;a href="http://www.elasticsearch.org"&gt;http://www.elasticsearch.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="2" title="2"&gt;2&lt;/a&gt; River-jdbc:
    &lt;a href="https://github.com/jprante/elasticsearch-river-jdbc"&gt;https://github.com/jprante/elasticsearch-river-jdbc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Community: &lt;a href="http://www.elasticsearch.com/community/"&gt;http://www.elasticsearch.com/community/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>A BarCamp about VoIP, with Mumble</title><link href="http://blog.xivo.io/a-barcamp-about-voip-with-mumble.html" rel="alternate"></link><updated>2015-02-16T21:16:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-02-16:a-barcamp-about-voip-with-mumble.html</id><summary type="html">&lt;p&gt;&lt;img alt="BarCampVoIPopensource-With-Mumble-June2015.png" src="/public/BarCampVoIPopensource-With-Mumble-June2015.png" title="BarCampVoIPopensource-With-Mumble-June2015.png, juin 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A new BarCamp about VoIP:What&lt;/strong&gt; Write directly your questions or
topics on the &lt;a href="http://barcamp.org/w/page/97007235/BarCampMumble-VoIP-OpenSource"&gt;wiki
website&lt;/a&gt;
or contact us.&lt;strong&gt;When&lt;/strong&gt;: 17th june 2015, 16:00 to 18:00 (France) and
10:00 to 12:00 (Quebec)&lt;strong&gt;How&lt;/strong&gt;: Tutorial in
&lt;a href="http://revenudebase.info/mumble/"&gt;French&lt;/a&gt;, in
&lt;a href="https://www.youtube.com/watch?v=oQSilwOySU8"&gt;english&lt;/a&gt; , in
&lt;a href="https://www.youtube.com/watch?v=lm61L-n1cIE"&gt;spanish&lt;/a&gt;&lt;strong&gt;Contact&lt;/strong&gt; (to
try mumble before, for exemple): on IRC server freenode #xivo (french
and english channel) or join Valérie here
vdagrain***@***avencall.com&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Last meeting:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;dl&gt;
&lt;dt&gt;SESSION #1 : 15 april 2015 - the website is&lt;/dt&gt;
&lt;dt&gt;&lt;a href="http://barcamp.org/w/page/94666184/BarCampIRC-Qu%C3%A9bec"&gt;here&lt;/a&gt;. The&lt;/dt&gt;
&lt;dt&gt;summary about the topics and meeting are&lt;/dt&gt;
&lt;dt&gt;&lt;a href="/public/BarCampIRC-1ereRencontreSurVoIP-CRv01.pdf"&gt;here&lt;/a&gt;.SESSION #2&lt;/dt&gt;
&lt;dd&gt;29 april 2015 - the website is
&lt;a href="http://barcamp.org/w/page/95337185/BarCampIRC-VoIP-opensource"&gt;here&lt;/a&gt;.
The report is
&lt;a href="/public/BarCampIRC-2ndMeeting-VoIP-OpenSource-2015-CRv01.pdf"&gt;here&lt;/a&gt;.
Session with more LUG!!&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Next activities:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SESSION #3 : 17 june 2015 - the website is
&lt;a href="http://barcamp.org/w/page/97007235/BarCampMumble-VoIP-OpenSourcehere"&gt;here&lt;/a&gt;.
The report soon here. Coordination on IRC channel #xivoSESSION #4:
.. october 2015 - the website and report soon here. Session will be
organised from an hacking camp and with students in
telecommunication/software engineering!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;The kind of questions and topics&lt;/strong&gt;News about webRTC ; What's the XiVO
business model (how does it ranks compared to a conventional PABX?) ;
The use of VoIP in the podcasting / radio broadcast ; How to manage
payments and voip ? Pay per minute , paypal, bitcoins , etc. ; What's
the news about Voice Recognition? ; What about a good VoIP instead of
H323 and Skype? ; Which solutions to speak with lot of people, as in
Mumble? ; What about Atlassian, like Jira, Confluence and HipChat? and
BlueJimp (Jitsi) Your advices about a cartoon with XiVO 1,2,3...
go!Reading &lt;a href="/public/BarCampIRC-2ndMeeting-VoIP-OpenSource-2015-CRv01.pdf"&gt;the report (FR) about the 2nd
BarCampIRC&lt;/a&gt;
about VoIP and open source telephony system.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>L'agenda du Libre - Free software schedule</title><link href="http://blog.xivo.io/lagenda-du-libre-free-software-schedule.html" rel="alternate"></link><updated>2015-02-09T20:38:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-02-09:lagenda-du-libre-free-software-schedule.html</id><summary type="html">&lt;p&gt;__Free Software Schedule: In France
&lt;a href="http:%20//www.agendadulibre.org"&gt;www.agendadulibre.org&lt;/a&gt;, in Belgium
&lt;a href="http:%20//www.agendadulibre.be"&gt;www.agendadulibre.be&lt;/a&gt;, in Switzerland
&lt;a href="http:%20//www.agendadulibre.ch"&gt;www.agendadulibre.ch&lt;/a&gt; and in Quebec
&lt;a href="http://www.agendadulibre.qc.ca/event/2015"&gt;www.agendadulibre.qc.ca/event/2015&lt;/a&gt;
.Learn more about the activities in Quebec with
&lt;a href="http:%20//facil.qc.ca"&gt;FACIL&lt;/a&gt; in Montreal, site from &lt;a href="http:%20//robin.millette.info"&gt;Robin
Millette&lt;/a&gt;, Linux User Group
&lt;a href="http:%20/%20/www.linuq.org"&gt;LinuQ&lt;/a&gt; in Quebec and the fablab
&lt;a href="https:%20//espacelab2014.wordpress.com"&gt;EspaceLab&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L'agenda du Libre en version francophone&lt;/strong&gt;: En France
&lt;a href="http://www.agendadulibre.org"&gt;www.agendadulibre.org&lt;/a&gt;, en Belgique
&lt;a href="http://www.agendadulibre.be"&gt;www.agendadulibre.be&lt;/a&gt;, en Suisse
&lt;a href="http://www.agendadulibre.ch"&gt;www.agendadulibre.ch&lt;/a&gt; et au Québec
&lt;a href="http://www.agendadulibre.qc.ca/event/2015"&gt;www.agendadulibre.qc.ca/event/2015&lt;/a&gt;.En
savoir plus sur les activités au Québec sur &lt;a href="http://facil.qc.ca"&gt;FACIL&lt;/a&gt;
à Montréal et le site de &lt;a href="http://robin.millette.info"&gt;Robin Millette&lt;/a&gt;,
avec &lt;a href="http://www.linuq.org"&gt;LinuQ&lt;/a&gt; à Québecainsi que
l'&lt;a href="https://espacelab2014.wordpress.com"&gt;EspaceLab&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Des activités passées au Québec à LinuQ et à l'EspaceLab:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Samedi 24 janvier 2015: Quoi faire avec son Raspberry Pi? (Anabel
    David), Installation et configuration d’un routeur pfSense
    (Dominique Drolet).&lt;/li&gt;
&lt;li&gt;Samedi 7 février 2015: &lt;strong&gt;Buzzword Lightyears au pays d’OpenStack
    (Claude Durocher)&lt;/strong&gt;, EspaceLab, la communauté du matériel libre
    (Benoit Debaque).&lt;/li&gt;
&lt;li&gt;Jeudi 12 février 2015: Une présentation LinuQ gratuite chez
    Savoir-Faire Linux (quartier Saint-Roch, basse-ville) :
    Cryptographie et communications (Virgil Dupras).&lt;/li&gt;
&lt;li&gt;Samedi 21 février 2015: Raspberry Pi avec relay gérant des prises
    électriques (Martin Plante), Programmation Android avec Python
    (François-Nicolas Demers), Rencontre mensuelle Drupal (Meetup)
    (Jean-François Bohémier/Evans Bernier).&lt;/li&gt;
&lt;li&gt;Jeudi 26 février 2015: Rencontre &lt;a href="http://www.osmqc.ca/"&gt;Open Street Map
    Québec&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="QuebecOpenSource2015.png" src="/public/QuebecOpenSource2015.png" title="QuebecOpenSource2015.png, mar. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Des activités à venir:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mardi 3 mars 2015: encontre EspaceLab et TechDrinks.&lt;/li&gt;
&lt;li&gt;Samedi 07 mars 2015: En matinée: Débutant Processing Par: Benoit
    Debaque à l'EspaceLab. Dans l'après-midi: l’accessibilité du libre
    (Miguel Ross), À la découverte du Web sémantique (François Belleau)
    à LinuQ.&lt;/li&gt;
&lt;li&gt;Jeudi 12 mars 2015 dès 19H: Le meilleur poste de travail
    informatique… est libre! par
    &lt;a href="http://www.agendadulibre.qc.ca/event/1112/"&gt;Facil&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Samedi 21 mars 2015: Base de données Cassandra – Gramps (logiciel
    libre de généalogie)&lt;/li&gt;
&lt;li&gt;Samedi 28 mars 2015: Styles CSS et préprocesseurs – &lt;strong&gt;Docker par
    &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; (S.Boily)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint Review 15.02</title><link href="http://blog.xivo.io/sprint-review-1502.html" rel="alternate"></link><updated>2015-01-30T14:59:00-05:00</updated><author><name>jpgelinas</name></author><id>tag:blog.xivo.io,2015-01-30:sprint-review-1502.html</id><summary type="html">&lt;p&gt;Here are a few links explaining what we are going to ship in XiVO 15.02:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.xivo.io/versions/218" title="https://projects.xivo.io/versions/218"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Essentially, 15.02 brings changes into the XiVO Client. Visual and
functionnal changes.&lt;/p&gt;
&lt;p&gt;We also fixed a bug introduced in 15.01 breaking api documentation in
xivo-dird&lt;/p&gt;
&lt;p&gt;Work of interest:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ongoing work on xivo-dird's integration and visual reorganisation of
    XiVO Client&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>LinuQ, Groupe Utilisateur Linux de Québec, des ateliers et XiVO</title><link href="http://blog.xivo.io/linuq-groupe-utilisateur-linux-de-quebec-des-ateliers-et-xivo.html" rel="alternate"></link><updated>2015-01-29T19:27:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-01-29:linuq-groupe-utilisateur-linux-de-quebec-des-ateliers-et-xivo.html</id><summary type="html">&lt;p&gt;This section presents LINUQ, Linux User Group from Quebec. In the
workshops this week: learning programming with a Raspberry-Pi, about BSD
licence, Kano, a computer and coding kit for all ages, Ubuntu install
session and interoperabilty topics.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Article sous cc by sa 3.0 par Valérie Dagrain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Apprenant-e-s ou animateur-trice-s, &lt;a href="http://www.linuq.org"&gt;le GUL LINUQ de la ville de
Québec&lt;/a&gt; accueille et présente les activités pour
2015.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Voici les ateliers du 24 jan.2015:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Atelier Raspberry PI&lt;/strong&gt;: la présence de nombreux participant-e-s
    confirme le grand engouement des ateliers sur &lt;a href="http://www.raspberrypi.org"&gt;Raspberry
    Pi&lt;/a&gt;. Durant cette session, plusieurs
    démonstrations, du code. L'intervenante est invitée à revenir pour
    proposer des ateliers pour les amateurs et les experts. Durant cet
    ateliers il y a eu des exemples d'applications, exemple:
    l'&lt;a href="http://www.solidrnet.fr/v2/wp-content/uploads/2013/10/car-rasp1.jpg"&gt;interface écran d'une
    voiture&lt;/a&gt;
    et des idées dans le magazine dédié
    &lt;a href="http://www.themagpi.com/"&gt;TheMagPI&lt;/a&gt;. Suite à cet atelier,
    l'intervenante à présenté
    &lt;a href="https://www.kickstarter.com/projects/alexklein/kano-a-computer-anyone-can-make"&gt;Kano&lt;/a&gt;:
    un kit ordinateur basé sur Raspberry-Pi pour programmer à tout âge.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Présentation du logiciel de programmation
    &lt;a href="http://scratch.mit.edu/"&gt;Scratch&lt;/a&gt;&lt;/strong&gt;, les fonctionnalités et
    l'interface graphique.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Atelier &lt;a href="/index.php?tag/BSD"&gt;BSD&lt;/a&gt;&lt;/strong&gt;: Un atelier en parallèle se
    tenait sur &lt;a href="http://fr.wikipedia.org/wiki/Licence_BSD"&gt;BSD&lt;/a&gt;, une
    licence libre utilisée pour la distribution de logiciels.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;: des groupes de personnes venaient pour installer
    &lt;a href="/index.php?tag/Ubuntu"&gt;Ubuntu&lt;/a&gt; sur leur ordinateur. Je tiens à
    remercier les discussions avec les femmes de cet atelier! Je suis
    impatiente de revenir discuter avec elles.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Informations matérielles&lt;/strong&gt;: certaines personnes viennent pour
    avoir des conseils concernant du matériel de son, par exemple, pour
    connaître leur interopérabilité.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Kano-LINUQ2015.JPG" src="/public/Kano-LINUQ2015.JPG" title="Kano-LINUQ2015.JPG, janv. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;Merci au trésorier pour m'avoir présenter les ateliers. Je rencontre
enfin G.Cossette dont les publications régulières sur les projets Libres
au Québec m'avaient permis de garder le contact sur les projets Libres
au Québec, depuis 2005 ainsi qu'avec &lt;a href="http://facil.qc.ca/"&gt;Facil&lt;/a&gt; sur
Montréal. Des membres de LinuQ transmettent: &lt;ins&gt;des remerciements à
G.Sanderson, S.Duthil et S.Boily pour leur intervention l'an dernier,
sur un atelier &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt;, dans la téléphonie Libre,
basé sur
&lt;a href="http://www.asterisk.org/"&gt;Asterisk&lt;/a&gt;.&lt;/ins&gt;&lt;img alt="LinuQ.png" src="/public/LinuQ.png" title="LinuQ.png, janv. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Le programme du site LinuQ annonce à 13h, pour le 7 février:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Buzzword Lightyears au pays d’OpenStack (Claude Durocher)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://espacelab2014.wordpress.co/"&gt;EspaceLab&lt;/a&gt;, la communauté du
    matériel libre (Benoit Debaque)&lt;/li&gt;
&lt;li&gt;Une prochaine session après sur Python.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Sources:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adresse pour rejoindre LinuQ : 1560, route de l’Église, Québec G1W
    3P7 (proche du chemin Saint-Louis – Carte)&lt;/li&gt;
&lt;li&gt;Horaire des activités : 13h à 17h. Les rencontres ont lieu tous les
    15 jours.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Sources:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.linuq.org"&gt;LinuQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.raspberrypi.org"&gt;Raspberry-Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.themagpi.com"&gt;TheMagPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://scratch.mit.edu"&gt;Kano&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fr.wikipedia.org/wiki/Licence_BSD"&gt;BSD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://facil.qc.ca"&gt;Facil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.xivo.io"&gt;XiVO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.asterisk.org"&gt;Asterisk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://espacelab2014.wordpress.co"&gt;EspaceLab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary><category term="raspberry Pi."></category><category term="LinuQ"></category><category term="Raspberry-Pi"></category><category term="Kano"></category><category term="TheMagPI"></category><category term="Scratch"></category><category term="BSD"></category><category term="Facil"></category><category term="XiVO"></category><category term="Asterisk"></category><category term="EspaceLab"></category><category term="Raspberry Pi"></category><category term="Ubuntu"></category></entry><entry><title>NyXD Systems, des fans de XiVO racontent leurs aventures dans la téléphonie</title><link href="http://blog.xivo.io/nyxd-systems-des-fans-de-xivo-racontent-leurs-aventures-dans-la-telephonie.html" rel="alternate"></link><updated>2015-01-29T13:57:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-01-29:nyxd-systems-des-fans-de-xivo-racontent-leurs-aventures-dans-la-telephonie.html</id><summary type="html">&lt;p&gt;Summary: NyXD Systems is a team passionated for computer science and
telecommunication systems, founded in 2006, near Paris (France). This
interview shows how they made communicate computers, installed a
network, configured a VPN on their routers, set a hosting services.
Exploring XiVO software, they contacted the developers. Thanks to this
meeting, NyXD wrote a tutorial to share their achievements.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Article en cc by sa 3.0 2015 - par Valérie Dagrain&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;Bonjour NyXD Systems, pouvez-vous présenter comment a débuté votre aventure dans la téléphonie?&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img alt="logo2015_200_100.png" src="/public/logo2015_200_100.png" title="logo2015_200_100.png, janv. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;"Bonjour Valérie, NyXD Systems est un collectif de jeunes passionnés
d'informatique, télécommunications et T.I, fondé en 2006, près de Paris
(France).&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;"&lt;strong&gt;Je suis Thomas, l'un des rédacteurs du blog de [NyXD
Systems&lt;/strong&gt;|http://retroplace.nyxd.org/] depuis 2012 et également l'un
des deux membres fondateurs. Nous sommes un groupe de 4 amis:Kevin et
moi avons commencé à bidouiller quand nous étions au lycée vers 2005 et
découvert qu'il était bien plus amusant de faire communiquer des
ordinateurs que de les laisser seuls dans leur coin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kevin, également rédacteur et je suis l'autre membre fondateur de
&lt;a href="/index.php?tag/NyXD%20Systems"&gt;NyXD Systems&lt;/a&gt;&lt;/strong&gt;. Ma passion pour
l'informatique m'a rapidement rapproché de Thomas, et nous avons assez
vite eu l'envie de mettre des ordinateurs sur des réseaux dont nous
avions la maîtrise, et surtout la fierté d'utiliser nos propres
solutions... Quand elles marchaient...NyXD Systems est aujourd'hui bien
plus qu'un petit passe-temps d'adolescent, c'est un projet qui me tient
énormément à cœur, et qui m'a permis de m'éclater tout en apprenant.Côté
téléphonie, je suis plus en retrait par rapport à Thomas à vrai dire :
ce n'est pas moi qui mets en place, mais je suis très fier d'avoir sur
mon bureau un téléphone qui fonctionne grâce à notre réseau, des
connexions VPN qui sont configurées sur nos routeurs, et
&lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; qui tourne sur l'un de nos serveurs. Deux
autres, Claude et Jean nous ont rejoint en 2014.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Claude, membre récent de l'équipe de NyXD Systems.Actuellement en
école d'ingénieur par la voie de l'apprentissage&lt;/strong&gt;, j'ai eu l'occasion
d'étudier la solution de téléphonie &lt;a href="/index.php?tag/Asterisk"&gt;Asterisk&lt;/a&gt;
(logiciel de référence dans la téléphonie open-source). Par le biais de
NyXD Systems, j'ai ainsi l’occasion de mettre en application via un
réseau réel tout ce que j'ai pu apprendre durant mon cursus scolaire.
Tout comme Kevin, je suis également fier d'avoir un téléphone
d'entreprise sur mon bureau, que je peux utiliser de la même manière que
dans le cadre de mon travail d'apprenti chez Orange.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Jean, je suis actuellement lycéen et je m’intéresse très fortement à
l’informatique et à l’électronique.&lt;/strong&gt; J’ai intégré NyXD Systems en 2014,
suite à la rencontre de Thomas sur un forum d’utilisateurs de Mac
(MacBidouille), et je m’occupe actuellement de réaliser des programmes
et du matériel sur-mesure pour NyXD Systems. Le réseau et la téléphonie
étant des domaines inconnus pour moi, faire partie de l'équipe me permet
de toucher à de nombreux domaines auxquels je n’aurai jamais pu voir "
l’envers du décor".&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Voilà comment "nous avons progressivement évolué en obtenant des
serveurs professionnels, ce qui nous a permis d'apprendre, ce que nous
faisons toujours.Nous touchons un peu à tout, Windows, Mac, Linux, et
même si nous avons moins de compétences sur Linux, je me suis vite rendu
compte que XiVO (système de téléphonie open-source) était très
accessible pour un néophyte en terme d'installation de système IPBX",
précise Thomas.&lt;/p&gt;
&lt;p&gt;&lt;img alt="2015-XiVO-Remercie-NyXDSystems-01-400.png" src="/public/2015-XiVO-Remercie-NyXDSystems-01-400.png" title="2015-XiVO-Remercie-NyXDSystems-01-400.png, fév. 2015" /&gt;&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;Avec quel matériel de téléphonie avez-vous commencé?&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;"J'ai trouvé par hasard, un lot de téléphones
&lt;a href="/index.php?tag/Cisco"&gt;Cisco&lt;/a&gt; IP Phone 7960 dotés d'un firmware SIP, et
très bon marché sur Ebay vers la mi-2013 et c'est là que tout à
commencé. Nous aimons beaucoup ces téléphones notamment car on peut les
voir dans des films et séries diverses, et je les ai côtoyé à plusieurs
reprises dans les grandes entreprises dans lesquelles j'ai travaillé. Je
n'avais jamais touché à la configuration d'un téléphone IP auparavant.
Je me disais "ça a une prise Ethernet, alors ça doit sûrement marcher
comme un ordinateur en réseau !". Malheureusement, il s'est très vite
avéré que non. Mais ces téléphones étant si agréables à utiliser que je
me suis documenté un peu, ne pouvant rester sur un échec. J'ai donc
commencé par chercher comment créer un réseau de téléphonie interne.
J'aurais pu partir d'une solution ex nihilo, mais la téléphonie étant
vraiment un domaine particulier et alors inconnu pour moi, j'ai préféré
m'affranchir de tout un tas de difficultés en partant d'une distribution
packgée, sans pour autant mettre de côté les rouages qui font que ça
marche, pour me concentrer sur la mise en place. Et c'est là que j'ai
découvert &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt;,
&lt;a href="/index.php?tag/Elastix"&gt;Elastix&lt;/a&gt;, &lt;a href="/index.php?tag/FreePBX"&gt;FreePBX&lt;/a&gt;,
etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="NyXD-400.JPG" src="/public/NyXD-400.JPG" title="NyXD-400.JPG, janv. 2015" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;J'ai commencé avec &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; à la toute fin 2013
mais certains détails de fonctionnement étaient encore obscurs pour moi
et rapidement une vidéo sur Elastix m'a permis d'en faire plus. &lt;strong&gt;J'ai
donc testé un peu Elastix, puis FreePBX mais avec beaucoup de
difficultés pour finalement revenir sur &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; dont
la qualité de l'interface de gestion, les fonctionnalités et la
simplicité d'installation sont très supérieures.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Très rapidement, nous avons mis en place un serveur dédié
&lt;a href="https://www.kimsufi.com/ca/fr/"&gt;Kimsufi&lt;/a&gt; chez l'hébergeur OVH, nos
téléphones Cisco chez nous avec un firmware en SIP et derrière des
routeurs pfSense avec le package additionnel siproxd (un proxy SIP) nous
permettant d'avoir facilement plusieurs téléphones sur chaque site. La
configuration de chaque téléphone se faisait totalement à la main ce qui
prenait du temps et surtout compliquait énormément toute modification
ultérieure au déploiement puisqu'il fallait obligatoirement se rendre
sur site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nous avons utilisé cette solution pendant quelques mois début 2014,
sans rencontrer particulièrement de problèmes. D'autres téléphones ont
été ajoutés, pour en avoir une petite douzaine en fonctionnement. Nous
arrivions aisément à passer des appels internes et externes mais nous
avions un stock de téléphones Cisco 7941, impossibles à configurer à la
main tel que nous le faisions. C'est à force de voir ces téléphones
inexploités que j'ai eu envie que notre serveur gère le provisioning,
c'est à dire que depuis le serveur on puisse dire "tel utilisateur
possède telle ligne, il faut l'attribuer à tel ou tel téléphone" et que
sans aucune intervention physique, le téléphone "reçoive" cette ligne et
soit opérationnel immédiatement. Ceci s'inscrivait assez facilement dans
notre changement d'infrastructure. Nos sites étant maintenant raccordés
par VPN, nous avons pu rapatrier le serveur de téléphonie en local, au
siège, et provisionner ainsi tous les téléphones du siège, et à travers
les liaisons VPN, les téléphones d'agences".&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;Dans quel contexte es-tu venu échanger pour la première fois avec les développeurs XIVO?&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;"J'ai eu un problème majeur dans le déploiement de cette nouvelle
version de notre solution basée sur un &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt;
auto-hébergé. Au niveau du serveur, nous étions reliés à OVH qui est
notre fournisseur de ligne SIP. Nous avons donc une ligne qui nous
permet d'appeler l'extérieur et d'être appelés. Nous interconnectons
cette ligne avec notre serveur qui contient donc une série de règles qui
définissent son comportement lors du passage d'un appel dans un sens ou
dans l'autre. Le problème que j'avais, c'est que j'arrivais à passer des
appels vers l’extérieur, mais pas dans l'autre direction. J'ai donc
tenté deux ou trois réglages à partir de recherches faites sur le web,
sans succès.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;En décembre 2014, je me suis donc rendu sur le canal IRC de
&lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; et alors que je m'attendais à discuter avec
des utilisateurs du logiciel, j'ai parlé en réalité avec l'équipe de
développeurs, sans même le savoir au début. Je n'en espérais pas tant !
Et ils m'ont effectivement aidé à résoudre mon problème&lt;/strong&gt; alors que je
n'ai aucun lien avec &lt;a href="/index.php?tag/XiVO"&gt;XiVO&lt;/a&gt; ou
&lt;a href="/index.php?tag/Avencall"&gt;Avencall&lt;/a&gt;, ni contrat de maintenance, ni
partenariat. Je suis juste un utilisateur lambda ayant demandé conseil
aux gens qui développent le logiciel qu'il utilise".&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;Comment ça c'est passé quand le système a marché?&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;"J'ai pu appliquer en direct les informations données par les
développeurs de &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; et lorsque ça a fonctionné,
j'étais très content. Non seulement j'avais appris quelque chose
d'intéressant, mais en plus j'ai eu envie d'en rédiger &lt;a href="http://retroplace.nyxd.org/2015/01/28/xivo-auto-hebergement-telephonie-pfsense-ovh/"&gt;un tutoriel, un
guide&lt;/a&gt;,
car il aurait été dommage de déranger les développeurs à nouveau pour le
même problème en cas de réinstallation complète du serveur. Une façon de
remercier l'équipe.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Je ne suis pas franchement ce qu'on peut appeler un libriste (même si
j'apprécie, respecte et encourage le Libre) mais dans mon esprit c'est
assez naturel de partager. J'utilise gratuitement un logiciel libre, je
demande de l'aide que l'on m'apporte, alors je n'ai pas envie de garder
cette aide pour moi, mais au contraire, en faire profiter le plus grand
nombre. Ainsi, si quelqu'un d'autre ayant la même difficulté fait une
recherche, il trouvera sûrement des solutions dans ce &lt;a href="http://retroplace.nyxd.org/2015/01/28/xivo-auto-hebergement-telephonie-pfsense-ovh/"&gt;guide
NyXD&lt;/a&gt;,
continuera d'utiliser le logiciel, ne dérangera pas l'équipe de
développement (qui doit répondre souvent aux mêmes questions), laissant
plus de temps pour se concentrer sur le développement du logiciel
&lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt;. De plus, rédiger un
&lt;a href="http://retroplace.nyxd.org/2015/01/28/xivo-auto-hebergement-telephonie-pfsense-ovh/"&gt;tutoriel&lt;/a&gt;
permet in fine d’accroître la quantité et la variété de documentation,
ce qui est appréciable pour tout le monde". Découvrir &lt;a href="http://retroplace.nyxd.org/2015/01/28/xivo-auto-hebergement-telephonie-pfsense-ovh/"&gt;le
tutoriel&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;img src=&amp;quot;/public/Capture_d_e_cran_2015-01-28_a__09.19.44.png&amp;quot; alt=&amp;quot;Capture_d_e_cran_2015-01-28_a__09.19.44.png&amp;quot; title=&amp;quot;Capture_d_e_cran_2015-01-28_a__09.19.44.png, janv. 2015&amp;quot; /&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;&lt;strong&gt;Que souhaitez-vous continuer de faire avec la téléphonie dans l'avenir, pour 2015?&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;"Je compte déjà peaufiner le fonctionnement de notre solution
actuelle. Avant toute chose, nous devons finaliser et fiabiliser notre
nouvelle infrastructure réseau et concomitamment la téléphonie, qui
exploite ce réseau. Nous avons défini les spécifications d'un kit
"agence" comprenant les équipements vitaux pour équiper une agence
nouvellement créée, comme le routeur, l'onduleur, le téléphone, etc.
Nous travaillons à cela quasiment en permanence car nous utilisons
quotidiennement cette infrastructure, et nous aurons a terme accès aux
profils utilisateurs de n'importe qui depuis n'importe où. Ainsi un
utilisateur d'une agence pourra retrouver son environnement de travail
depuis n'importe quel autre site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;De la prise en compte de la téléphonie dans nos déploiements
découlerait assurément une synergie importante pour nos apprentissages
futurs et notre capacité à maintenir une infrastructure d'entreprise.".&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="2015-XiVO-Remercie-NyXDSystems-02-400.png" src="/public/2015-XiVO-Remercie-NyXDSystems-02-400.png" title="2015-XiVO-Remercie-NyXDSystems-02-400.png, fév. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Toute l'équipe XiVO vous remercie, pour votre tout &lt;a href="http://retroplace.nyxd.org/2015/01/28/xivo-auto-hebergement-telephonie-pfsense-ovh"&gt;nouveau tutoriel
sur
XiVO&lt;/a&gt;
ainsi que votre motivation pour cet interview. Vous êtes les premiers à
inaugurer la rubrique des contributeurs XiVO!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sources:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://retroplace.nyxd.org/2015/01/28/xivo-auto-hebergement-telephonie-pfsense-ovh/"&gt;Tutoriel de NyXD Systems sur
    XiVO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/production/"&gt;Documentation&lt;/a&gt; officielle
    XiVO&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.xivo.io/projects/xivo/boards"&gt;Forums XiVO&lt;/a&gt; et canal
    IRC #XiVO, serveur freenode&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xivopourlesnuls.wordpress.com/"&gt;XiVO pour les nuls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PDq1LdXAd14"&gt;Tutorial Elastix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.framboise314.fr/decouvrez-la-framboise314-allo-un-pabx-asterisk-dans-votre-raspberry-pi-partie-2"&gt;PABX Asterisk et
    raspberry-pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.voip-info.org/wiki/view/Asterisk+phone+cisco+79xx"&gt;Asterisk et
    Cisco&lt;/a&gt;
    et
    &lt;a href="http://www.voip-info.org/wiki/view/Setup+SiP+on+7940+-+7960"&gt;SIP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cisco.com/c/en/us/td/docs/voice_ip_comm/cuipph/7960g_7940g/sip/english/user/guide/user/sipuget.html"&gt;Manuel Cisco IP
    Phone7940/7960&lt;/a&gt;
    et &lt;a href="http://www.google.ca/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0CCkQFjAA&amp;amp;url=http%3A%2F%2Fwww.telovations.com%2Fattachments%2Fcategory%2F87%2FCisco7941_61_UserGuide.pdf&amp;amp;ei=9cXHVJSVBoGwUausgsgL&amp;amp;usg=AFQjCNF2N6ogonRuM85XqTHYOtNpkj6w2w&amp;amp;sig2=aYV3mEQ9PXhg_50UQ5RjNw&amp;amp;bvm=bv.84349003,d.d24"&gt;Manuel Cisco IP Phone
    7941/7961&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Configuration d'un &lt;a href="http://www.tux89.com/telephonie/configuration-d%E2%80%99un-poste-telephonique-cisco-79407960/"&gt;poste
    cisco&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://forum.ovh.com/"&gt;Forums OVH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary><category term="NyXD Systems"></category></entry><entry><title>L’EspaceLab, un nouvel espace numérique communautaire à Québec avec des ateliers en logiciel libre et domotique - article 4</title><link href="http://blog.xivo.io/lespacelab-un-nouvel-espace-numerique-communautaire-a-quebec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-4.html" rel="alternate"></link><updated>2015-01-26T16:44:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-01-26:lespacelab-un-nouvel-espace-numerique-communautaire-a-quebec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-4.html</id><summary type="html">&lt;p&gt;The EspaceLab is a space for the digital creation community, opened in
autumn 2014, in the district of Sainte-Foy, Quebec, Canada.This week,
workshops are about: Open-Data, Printer 3D, plants walls and
intelligents plants, 3D modeling with the software Blender, arduino,
solar drone, open-source software in telephony, Information about
Hacking Club of Laval University, live action role-playing game and
cyberpunk hacking stuffs.&lt;/p&gt;
&lt;p&gt;L’EspaceLab, un espace de création numérique communautaire, a ouvert ses
portes en automne 2014, dans le quartier de Sainte-Foy à Québec, au
Canada.&lt;em&gt;Reportage par valerie-dagrain.org cc-by-sa 3.0 EspaceLab
Janvier.2015&lt;/em&gt;Article
&lt;a href="/index.php?post/2014/12/01/Espace-Lab%2C-espace-numerique-communautaire-%C3%A0-Quebec%3B-des-ateliers-en-logiciel-libre-et-domotique"&gt;1&lt;/a&gt;,
&lt;a href="/index.php?post/2014/12/15/L-EspaceLab%2C-un-nouvel-espace-num%C3%A9rique-communautaire-%C3%A0-Quebec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-2"&gt;2&lt;/a&gt;
et
&lt;a href="blog.xivo.io/index.php?post/2015/01/26/L%E2%80%99EspaceLab%2C-un-nouvel-espace-num%C3%A9rique-communautaire-%C3%A0-Qu%C3%A9bec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-3"&gt;3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Témoignages des activités ouvertes et participatives de ce samedi
24.janv 2015:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Open-Data&lt;/strong&gt;: Mireille lance un sujet sur l'ouverture des données
    publiques et l'implication de la ville de Québec: "il y a le site de
    &lt;a href="http://www.donnees.gouv.qc.ca/?node=/accueil"&gt;Québec sur les données
    ouvertes&lt;/a&gt;, pour ce qui
    concerne la capitale mais il y aussi &lt;a href="http://donnees.ville.montreal.qc.ca/"&gt;Montréal
    ouvert&lt;/a&gt;." Valérie cite des
    exemples de participations citoyennes comme
    &lt;a href="https://libertic.wordpress.com"&gt;Libertic&lt;/a&gt;,
    &lt;a href="http://www.regardscitoyens.org/"&gt;regards-citoyens&lt;/a&gt; (et
    &lt;a href="http://valerie.dagrain.numerimoire.net/?p=1055"&gt;ici&lt;/a&gt;), des projets
    de villes "2.0" où se partagent des pratiques d'économie solidaire
    et sociale afin d'améliorer ou créer un nouvel habitat, re-inventer
    des modes de vie et prendre en considération l'environnement:
    &lt;a href="http://imaginationforpeople.org/en/projects/"&gt;Imagination4People&lt;/a&gt;.
    Discuter sur l'accès aux informations publiques c'est aussi aborder
    le sujet de la protection des données personnelles, la
    re-appropriation des lieux de conception avec les fablabs, les
    hackerspaces et artisans afin de sensibiliser tous les publics aux
    ateliers, des fortes demandes d'animation pédagogiques (arduino,
    raspberry-pi, des systèmes libres). Un autre sujet est lancé avec
    l'accès à Internet en Wi-Fi proposé par
    &lt;a href="http://www.zapquebec.org/"&gt;ZAP&lt;/a&gt;, un service de Zone d'Accès Public,
    à Québec.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Imprimante 3D&lt;/strong&gt;: Après le cube qui "tourne avec des rouages",
    Isabelle a lancé une nouvelle création faite avec l'imprimante 3D:
    c'est un coeur qui s'articule en "un tour". Il existe un modèle dont
    il faut faire "5 tours" pour revenir à sa forme initiale. Les pièces
    internes pour maintenir l'ensemble s'impriment aussi. De nouvelles
    créations voient le jour et les maquettes sont disponibles sur les
    sites de maker bot ou un exemple
    &lt;a href="http://dailygeekshow.com/2014/01/01/mechaneu-une-sphere-dengrenages-stupefiante-qui-explore-les-limites-de-limpression-3d/"&gt;ici&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;L'atelier sur la "plante intelligente"&lt;/strong&gt; s’agrandit: le groupe de
    travail présente des ressources bibliographiques sur les murs
    végétaux, souhaiter inviter d'autres personnes intéressés par la
    bio-informatique et "comment présenter ce projet" à l'écran pour une
    prochaine session.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Un groupe améliore l'imprimante 3D&lt;/strong&gt;: L'animateur de la semaine
    passé (lire
    &lt;a href="/index.php?post/2015/01/26/L%E2%80%99EspaceLab%2C-un-nouvel-espace-num%C3%A9rique-communautaire-%C3%A0-Qu%C3%A9bec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-3"&gt;ici&lt;/a&gt;)
    avait présenté le fonctionnement de son imprimante 3D car la demande
    d'apprentissage est forte. Durant cet atelier, il a lancé
    l'impression d'une tuyère, pour refroidir le système de la machine
    elle-même et l'améliorer.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="www.blender.org"&gt;Blender&lt;/a&gt; le logiciel de modélisation 3D&lt;/strong&gt;: un
    groupe de travail présente sur l'écran, des plans de pièces. Le
    fichier peut-être lu et exporté sur l'imprimante 3D.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Un atelier arduino et "makey makey"&lt;/strong&gt;: un jeune animateur a initié
    un atelier arduino et des démonstrations. Isabelle a présenté des
    logiciels de musique ou jeux pour connecter via des éléments
    conducteurs sur "makey makey". Je lui demande comment on peut
    étendre à plusieurs octaves suite à une démonstration sur le piano.
    &lt;a href="https://www.youtube.com/watch?v=rfQqh7iCcOU"&gt;Makey Makey,&lt;/a&gt; permet
    des usages immédiats mais aussi d’être programmé pour des
    usages étendus.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;L'atelier de drone solaire&lt;/strong&gt;. Mickaël: Il présente ses maquettes
    et durant cette seconde session il a pu bien avancer les tests de
    voltage et de recharge sur les membranes solaires. "Aujourd'hui je
    veux vérifier que le système allait fonctionner. Pour cela on va
    faire un test de charge". Je me suis joins à cet atelier pour
    initier un atelier "tournage en milieu non urbain" avec un drone,
    fin février.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Étudiants en télécommunication et téléphonie Libre&lt;/strong&gt;: Je développe
    une présentation sur &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt;, en téléphonie
    libre pour voir comment présenter ce qu'il y a d'amusant avec les
    messages et un réseau téléphonique ouvert.
    &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; est basé sur
    &lt;a href="http://www.asterisk-france.org"&gt;Asterisk&lt;/a&gt; et je souhaite monter un
    atelier en télécommunication.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Club de hacking à l'Université Laval&lt;/strong&gt;: Je relaye qu'il y a une
    journée porte-ouverte le 7 février 2015, à l'Université Laval et
    dont le club de &lt;a href="http://hacking.fsg.ulaval.ca/"&gt;hacking&lt;/a&gt;
    sera présent. Je souhaite monter un petit groupe sur les
    télécommunications pour une mise en réseau avec des étudiants
    en Bretagne.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Maquettes&lt;/strong&gt; : avec Mickaël, Michel et Isabelle, nous élargissons
    le sujet sur la modélisation. Mickaël avait préparé une maquettes
    pour son drone et d'autres conceptions en argile.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="EspaceLab-Quebec-24012015-RS.png" src="/public/EspaceLab-Quebec-24012015-RS.png" title="EspaceLab-Quebec-24012015-RS.png, janv. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ateliers de jeux de rôle grandeurs nature et ateliers bidouillage&lt;/strong&gt;
:Durant les ateliers, nous avions parlé de modélisation, maquettes et
bidouillage dont voici quelques liens:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Depuis 1997, dans les scénarios médiévaux&lt;/strong&gt;, je fabrique des épées
    en mousse (fibre carbone, mousse, latex, acrylique). J'ai également
    crée un portail circulaire avec des runes luminescentes (démontable
    et portable), un cristal géant, des maquettes en argile.
    L’électronique nous sert ici pour déclencher des effets spéciaux.
    Mais j'ai également vu un groupe de joueur (Elfes noirs) créer des
    barrières lumineuses pour simuler des champs de force ou intégrer de
    la fibre optique dans leurs costumes pour simuler des
    armures magiques.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;En 2010, j'ai initié un croisement entre "jeux de simulation et
    hackerspace"&lt;/strong&gt; car pour les époques "steampunk" nous avions besoin
    d'animer des objets avec des rouages et des leds. La communauté de
    jeu de rôle avait les idées mais pas de locaux et pas toutes les
    compétences techniques.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;En 2011-2012, robotique et steampunk&lt;/strong&gt;: c'est un étudiant en
    robotique qui avait fait un stage sur les marionnettes, avec qui
    j'ai pu développer des idées: voici une de ces
    &lt;a href="http://guildebzh.fr/?p=1290"&gt;créations&lt;/a&gt;. Ensuite j'ai crée un
    &lt;a href="http://valerie.dagrain.numerimoire.net/?p=2384"&gt;scénario cyberpunk&lt;/a&gt;
    adapté pour une soirée enquête: mon objectif était de faire se
    rencontrer des scénaristes et les bidouilleurs du hackerspace. Voici
    le &lt;a href="http://valerie.dagrain.numerimoire.net/?p=2384"&gt;compte-rendu&lt;/a&gt; de
    ces 2 soirée-enquêtes et photos. En 2012, j'ai rencontré des
    professionnels du
    &lt;a href="https://picasaweb.google.com/114321407839074124021/EHSM2012PhotosByEwelinaValerie#5836922808455226162"&gt;steampunk&lt;/a&gt;
    à Berlin lors de la conférence de Hacking
    &lt;a href="http://ehsm.eu/2012/"&gt;EHSM&lt;/a&gt; où j'étais co-organisatrice. Les
    concepteurs recréent des ambiances 19ème siècle, avec des
    technologies du jour. Cela donne un ordinateur victorien, des livres
    mécaniques, des lampes dans lesquelles poussent des plantes ou une
    main qui écrit toute seule. Un moyen de comprendre comment l'arrivée
    de l’électricité à développer les imaginations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2012, des scénarios futuristes.&lt;/strong&gt; Suite à mon expérience sur la
    soirée-enquête cyperpunk (Blade Runner, MegaIII JDR, Ghost in the
    Shell), j'avais étendu ces rencontres bidouillage avec une
    association de paintball avec scénario. Certains ont crée un portail
    "Stargate", des timer "pour couper le cable et sauver le monde",
    d'autres veulent développer et explorer l'histoire avec des
    scénarios techno-futuriste, comme dans les romans de Tom Clancy.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Historique de me activités&lt;/em&gt;: &lt;a href="http://valerie.dagrain.numerimoire.net/?page_id=61"&gt;mes pratiques de jeux de
    simulation&lt;/a&gt;,
    &lt;a href="http://valerie.dagrain.numerimoire.net/?page_id=88"&gt;conseil
    d'administration&lt;/a&gt;,
    &lt;a href="http://valerie.dagrain.numerimoire.net/?page_id=1749"&gt;organisation ou
    participation&lt;/a&gt;,
    une section sur sur &lt;a href="http://valerie.dagrain.numerimoire.net/?p=2213"&gt;les imaginaires
    socio-techniques&lt;/a&gt;.''&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"Le monde de la réalité a ses limites ; le monde de l'imagination est
sans frontières." Rousseau&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sources:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L'EspaceLab de Québec: &lt;a href="https://espacelab2014.wordpress.co"&gt;https://espacelab2014.wordpress.co&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open Data: Libertic &lt;a href="https://libertic.wordpress.com"&gt;https://libertic.wordpress.com&lt;/a&gt;, &lt;a href="http://www.regardscitoyens.org/"&gt;regards
    citoyens&lt;/a&gt;, Imagination4People
    &lt;a href="http://imaginationforpeople.org/en/projects"&gt;http://imaginationforpeople.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open Data: Quebec &lt;a href="http://www.donnees.gouv.qc.ca"&gt;http://www.donnees.gouv.qc.ca&lt;/a&gt;, Montréal
    &lt;a href="http://donnees.ville.montreal.qc.ca"&gt;http://donnees.ville.montreal.qc.ca&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Zone d'Accès Public pour le wifi: ZAP
    h&lt;a href="http://www.zapquebec.org"&gt;ttp://www.zapquebec.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blender: &lt;a href="www.blender.org"&gt;www.blender.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Arduino: &lt;a href="http://www.arduino.cc"&gt;http://www.arduino.cc/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;XiVO, système de téléphonie open source: &lt;a href="http://www.xivo.io"&gt;http://www.xivo.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Asterisk, PABX libre de VoIP: &lt;a href="http://www.asterisk-france.org"&gt;http://www.asterisk-france.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Des ateliers dans un
    Hackerspace:&lt;a href="www.hacknowledge.org"&gt;www.hacknowledge.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Le Labfab de Rennes: &lt;a href="www.labfab.fr"&gt;www.labfab.fr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hacking Club de l'Université Laval:
    &lt;a href="http://hacking.fsg.ulaval.ca"&gt;http://hacking.fsg.ulaval.ca/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LinuQ, Groupe utilisateur de Linux à Québec:
    &lt;a href="www.linuq.org/"&gt;www.linuq.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sur Flicker, photos de &lt;a href="https://www.flickr.com/photos/129970080@N03/sets/72157647473984013/"&gt;bidouillage
    hacking&lt;/a&gt;
    et des créations &lt;a href="https://www.flickr.com/photos/129970080@N03/sets/72157649499560797/"&gt;pour jeux de role grandeur
    nature&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary><category term="EspaceLab"></category><category term="fablab"></category><category term="hackerspace"></category><category term="hackspace"></category></entry><entry><title>L’EspaceLab, un nouvel espace numérique communautaire à Québec avec des ateliers en logiciel libre et domotique - article 3</title><link href="http://blog.xivo.io/lespacelab-un-nouvel-espace-numerique-communautaire-a-quebec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-3.html" rel="alternate"></link><updated>2015-01-26T14:32:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2015-01-26:lespacelab-un-nouvel-espace-numerique-communautaire-a-quebec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-3.html</id><summary type="html">&lt;p&gt;The EspaceLab is a space for the digital creation community, opened in
autumn 2014, in the district of Sainte-Foy, Quebec, Canada.This week,
workshops are about: Printer 3D, Linux and hackable devices magazines,
solar drone, open-source software in telephony, Information about LinuQ
(Linux User Group in Quebec) and the Hacking Club of Laval University.&lt;/p&gt;
&lt;p&gt;L’EspaceLab, un espace de création numérique communautaire, a ouvert ses
portes en automne 2014, dans le quartier de Sainte-Foy à Québec, au
Canada.&lt;em&gt;Reportage par valerie-dagrain.org cc-by-sa 3.0 EspaceLab
Janvier.2015&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrouvez ici le fonctionnement de l'EspaceLab et les témoignages sur
des ateliers :
&lt;a href="http://blog.xivo.io/index.php?post/2014/12/01/Espace-Lab%2C-espace-numerique-communautaire-%C3%A0-Quebec%3B-des-ateliers-en-logiciel-libre-et-domotique"&gt;1&lt;/a&gt;
et
&lt;a href="http://blog.xivo.io/index.php?post/2014/12/15/L-EspaceLab%2C-un-nouvel-espace-num%C3%A9rique-communautaire-%C3%A0-Quebec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-2"&gt;2&lt;/a&gt;
sur le blog de XiVO, &lt;a href="http://www.a-brest.net/article16948.html"&gt;ici&lt;/a&gt; sur
le site a-brest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Témoignages des activités ouvertes et participatives de ce samedi
17.janv 2015:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Imprimante 3D&lt;/strong&gt;: ce samedi matin est dédié à une
    &lt;a href="www.youmagine.com"&gt;présentation&lt;/a&gt; sur le fonctionnement d'une
    imprimante 3D. Près de 35 personnes étaient présentes pour
    s'informer et poser des questions sur: les coûts des imprimantes 3D
    et des logiciels ressources comme &lt;a href="www.sketchup.com/fr"&gt;sketchup&lt;/a&gt;,
    un logiciel d'architecture 3D ou le site de bidouillage
    &lt;a href="www.thingiverse.com"&gt;thinkgiverse&lt;/a&gt;. Cette session permettait de
    comprendre le fonctionnement de l'interface logicielle de
    l'imprimante mais aussi des astuces liées à la nature du matériau,
    la zone d'impression, la température et l'entretien.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Les magazines de bidouillage&lt;/strong&gt;: Petit coup de coeur sur un article
    qui explique "comment savoir que l'on a reçu du courrier dans sa
    boite au lettre physique" en plaçant un capteur de lumière et
    recevoir l'information sur Twitter. La plupart des magazines sont de
    &lt;a href="http://boutique.ed-diamond.com/module/dmdsubscription/family?id_family=22"&gt;LinuxMag&lt;/a&gt;
    et titres sur la révolution des ateliers
    &lt;a href="www.raspberrypi.org"&gt;Raspberry-Pi&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mickaël modifie son drone pour installer des cellules solaires
    afin d’accroître son autonomie de vol&lt;/strong&gt;. Professionnel dans
    l’aérospatiale, il souhaite également modifier l'ergonomie du drone.
    Inquiet sur la disparition prochaine du kérozène, il s’intéresse aux
    montgolfières et autres développements civils avec les drones comme
    mode de déplacement. Valérie va se joindre à cet atelier et apporter
    un drone avec camera.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Valérie présente &lt;a href="http://www.xivo.io"&gt;XiVO&lt;/a&gt;, système de téléphonie
    open source&lt;/strong&gt; et fait un don de matériel à l'EspaceLab, de la part
    des développeurs de XiVO. Investit auprès des commissions scolaires.
    Alain présent aux ateliers, témoigne de son intérêt pour
    &lt;a href="http://www.asterisk-france.org"&gt;Asterisk&lt;/a&gt;. et il a déjà essayé
    FreePBX puis XiVO. Il témoigne qu'il faut un juste quelques
    connaissances en programmation. D'un autre côté, il constate une
    faible implication des instances gouvernementales Québécoises pour
    les logiciels libres notamment dans le secteur éducatif.
    Présentation de photos d'ateliers : dans des
    &lt;a href="www.hacknowledge.org"&gt;hackerspaces&lt;/a&gt; et partage des bonnes idées du
    &lt;a href="www.labfab.fr"&gt;LabFab&lt;/a&gt; de Rennes, dont des éléments produits
    principalement par John Lejeune pour animer des
    sessions pédagogiques.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mise en réseau&lt;/strong&gt;: Benoît, animateur à l'EspaceLab constate que
    pour cette rentrée 2015 est l’effervescente! Les adhésions affluent,
    les personnes viennent avec leurs questions ou leur matériel et des
    démarches se mettent en place progressivement avec &lt;a href="http://atelierlapatente.org/"&gt;la
    Patente&lt;/a&gt;, le hackerspace &lt;a href="http://www.chambreblanche.qc.ca/en/"&gt;la chambre
    blanche&lt;/a&gt; et
    &lt;a href="www.linuq.org/"&gt;LinuQ&lt;/a&gt; (2015-2016). Mr Merhi, enseignant en
    informatique à l'Université Laval m'informe d'un &lt;a href="http://hacking.fsg.ulaval.ca/"&gt;club de
    Hacking&lt;/a&gt; à 500m de l'EspaceLab! De
    nouveaux échanges en perspective.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="EspaceLab-Quebec-17012015-RS.png" src="/public/EspaceLab-Quebec-17012015-RS.png" title="EspaceLab-Quebec-17012015-RS.png, janv. 2015" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sources:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;L'EspaceLab, le site du fablab de Québec&lt;/strong&gt;:
    &lt;a href="https://espacelab2014.wordpress.com/"&gt;espacelab2014.wordpress.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;L'animateur sur l'imprimante 3D:
    &lt;a href="www.youmagine.com"&gt;www.youmagine.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Un logiciel de modelisation
    3D:&lt;a href="www.sketchup.com/fr"&gt;www.sketchup.com/fr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Un site ressource pour l'impression de pieces:
    &lt;a href="www.thingiverse.com"&gt;www.thingiverse.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LinuxMag:
    &lt;a href="http://boutique.ed-diamond.com/module/dmdsubscription/family?id_family=22"&gt;http://boutique.ed-diamond.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Encourager l'apprentissage de la programmation avec le
    mini-ordinateur Raspberry-Pi:
    &lt;a href="www.raspberrypi.org"&gt;www.raspberrypi.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;XiVO, système de téléphonie open source: &lt;a href="http://www.xivo.io"&gt;http://www.xivo.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Asterisk, PABX libre de VoIP: &lt;a href="http://www.asterisk-france.org"&gt;http://www.asterisk-france.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Des ateliers dans un
    Hackerspace:&lt;a href="www.hacknowledge.org"&gt;www.hacknowledge.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Le Labfab de Rennes: &lt;a href="www.labfab.fr"&gt;www.labfab.fr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hacking Club de l'Université Laval: &lt;a href="http://hacking.fsg.ulaval.ca/"&gt;http://hacking.fsg.ulaval.ca/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hackerspace de Québec, la chambre blanche:
    &lt;a href="http://www.chambreblanche.qc.ca"&gt;http://www.chambreblanche.qc.ca/en/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LinuQ, Groupe utilisateur de Linux à Québec:
    &lt;a href="www.linuq.org"&gt;www.linuq.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Atelier coopératif la Patente:
    &lt;a href="http://atelierlapatente.org"&gt;http://atelierlapatente.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary><category term="EspaceLab"></category><category term="fablab"></category><category term="hackerspace"></category><category term="hackspace"></category></entry><entry><title>Sprint Review 15.01</title><link href="http://blog.xivo.io/sprint-review-1501.html" rel="alternate"></link><updated>2015-01-16T14:55:00-05:00</updated><author><name>jpgelinas</name></author><id>tag:blog.xivo.io,2015-01-16:sprint-review-1501.html</id><summary type="html">&lt;p&gt;Here are a few links explaining what we are going to ship in XiVO 15.01:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.xivo.io/versions/217" title="https://projects.xivo.io/versions/217"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;New features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added POPC support for Yealink T46&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also fixed quite a few bugs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;added support for ldap username and password containing spaces&lt;/li&gt;
&lt;li&gt;fixed a missing dll error when launching XiVO Client on windows&lt;/li&gt;
&lt;li&gt;added support for ldap phone numbers starting with "+" presented in
    the directory&lt;/li&gt;
&lt;li&gt;fixed bug that created line function keys when deleting an existing
    function key on yealink devices&lt;/li&gt;
&lt;li&gt;fixed a spelling error in statistics interface of web interface&lt;/li&gt;
&lt;li&gt;fixed a bug preventing the display of the second queue skills rules
    page&lt;/li&gt;
&lt;li&gt;Provisioning now works on Yealink T32/T38&lt;/li&gt;
&lt;li&gt;fixed bug : Holdtime announcement before entering the queue doesn't
    work with some numbers&lt;/li&gt;
&lt;li&gt;fixed bug : Calls answered by the switchboard are displayed as
    missed calls on the operator's phone&lt;/li&gt;
&lt;li&gt;Snom 7XX function keys now works with XiVO's High Avaiability&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Work of interest:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ongoing work on xivo-dird's integration and visual reorganisation of
    XiVO Client&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO et les Trophées de la Distribution 2015</title><link href="http://blog.xivo.io/xivo-et-les-trophees-de-la-distribution-2015.html" rel="alternate"></link><updated>2014-12-23T15:56:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2014-12-23:xivo-et-les-trophees-de-la-distribution-2015.html</id><summary type="html">&lt;p&gt;&lt;img alt="COM-FR-TropheeDistribution2015-320x295.png" src="/public/COM-FR-TropheeDistribution2015-320x295.png" title="COM-FR-TropheeDistribution2015-320x295.png, déc. 2014" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nous voilà à l'aube de la 8ème édition des Trophées de la Distribution
2015!&lt;/strong&gt;Ce prix est délivré par le média IT "Distributique" sur le Salon
IT Partners (3 et 4 février 2015).En tant qu'exposant, Avencall va
concourir à ce Trophée et nous souhaitons tout faire pour remporter les
2 prix :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1) Meilleur produit : solution &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2) Meilleur politique de vente indirecte&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Merci de contribuer à notre visibilité et réussite!&lt;/strong&gt;Voici la
démarche:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1. s'inscrire ici à
    &lt;a href="http://www.distributique.com/grandsprix_distrib_itpartners2015/"&gt;Distributique&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2. voter pour participer à notre élection. Pour voter c'est dans la
    section: Messageries et Collaborations unifiées, en choisissant
    "Avencall" (éditeur de la solution)&lt;/li&gt;
&lt;li&gt;3. diffusez auprès de vos clients et réseau de communication&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pour une victoire partagée, merci de votre participation :)L'équipe vous
remercie.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO and the 2015 Distribution Trophy</title><link href="http://blog.xivo.io/xivo-and-the-2015-distribution-trophy.html" rel="alternate"></link><updated>2014-12-23T14:39:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2014-12-23:xivo-and-the-2015-distribution-trophy.html</id><summary type="html">&lt;p&gt;&lt;img alt="COM-EN-TrophyDistribution2015-320x300.png" src="/public/COM-EN-TrophyDistribution2015-320x300.png" title="COM-EN-TrophyDistribution2015-320x300.png, déc. 2014" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We are at the dawn of the 8th edition of the 2015 Distribution
Trophy,&lt;/strong&gt; An award issued by the IT media "Distributique" on the IT
Exhibition Partners (3th and 4th February 2015). As an exhibitor,
Avencall will compete at this trophy and we want to do everything to win
2 awards:&lt;/p&gt;
&lt;p&gt;* 1) Best Product: &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; solution&lt;br /&gt;
* 2) Political Best indirect sales&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thank you to contribute to our visibility and success!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here are the steps:&lt;/p&gt;
&lt;p&gt;* 1. Distributique register here:
&lt;a href="http://www.distributique.com/grandsprix_distrib_itpartners2015/"&gt;Distributique&lt;/a&gt;.&lt;br /&gt;
* 2. vote to participate in our election. You can vote in this section:
Messaging and Unified Collaboration and choose "Avencall"&lt;br /&gt;
* 3. distribute to your customers and communication network&lt;/p&gt;
&lt;p&gt;For a shared victory, thank you for participating :)&lt;/p&gt;
&lt;p&gt;The team thanks you.&lt;/p&gt;
&lt;/p&gt;</summary><category term="Distribution"></category><category term="Messaging"></category><category term="Trophy"></category><category term="Unifiec Collaboration"></category></entry><entry><title>XiVO: Logiciel Libre et bidouillage en réseau - Network hack</title><link href="http://blog.xivo.io/xivo-logiciel-libre-et-bidouillage-en-reseau-network-hack.html" rel="alternate"></link><updated>2014-12-17T21:41:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2014-12-17:xivo-logiciel-libre-et-bidouillage-en-reseau-network-hack.html</id><summary type="html">&lt;p&gt;&lt;em&gt;licence cc by sa 3.0 0.2015 par valérie dagrain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L'équipe qui développe XiVO soutient la communauté du Libre en:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;contribuant à Asterisk, PABX open-source et propriétaire ;&lt;/li&gt;
&lt;li&gt;animant des ateliers lors d'événements tels que les Rencontres
    Mondiales du Logiciel Libre
    (&lt;a href="https://www.youtube.com/watch?v=tK-xIU-lsS0&amp;amp;index=1&amp;amp;list=PLRYrJgPhLiqTjmzjW23vqk5psnfzs-Ay0"&gt;Video&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;proposant des présentations dans des Groupes utilisateurs
    Linux (GUL) ou associations faisant la promotion du Libre
    (&lt;a href="http://www.april.org/"&gt;April&lt;/a&gt;, &lt;a href="http://facil.qc.ca/"&gt;Facil&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;participant à des rencontres sur les T.I et Logiciels Libres pour
    dynamiser l'économie locale (&lt;a href="https://www.youtube.com/playlist?list=PLRYrJgPhLiqTjmzjW23vqk5psnfzs-Ay0"&gt;Solutions
    Linux&lt;/a&gt;)
    ;&lt;/li&gt;
&lt;li&gt;encourageant les contributeurs qui diffusent des &lt;a href="https://fr.wikipedia.org/wiki/XiVO"&gt;tutoriaux sur
    XIVO&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Depuis cet automne 2014, l'effervescence autour de l'ouverture de
    l"Espace Lab" (&lt;a href="https://fr.wikipedia.org/wiki/Fab_lab"&gt;FabLab&lt;/a&gt;) a
    généré beaucoup d'échanges entre les associations locales.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;L'équipe de développeur XiVO siège essentiellement à Québec et présente
ces structures ressources:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LINUQ LL&lt;/strong&gt;: Groupes Utilisateurs Linux de Québec,
&lt;a href="www.linuq.org"&gt;LinuQ&lt;/a&gt;&lt;strong&gt;ESPACELAB&lt;/strong&gt;: Espace communautaire pour présenter
son projet ou rejoindre une équipe. On cherche à monter un atelier
télécommunication. Articles
&lt;a href="/index.php?post/2014/12/01/Espace-Lab%2C-espace-numerique-communautaire-%C3%A0-Quebec%3B-des-ateliers-en-logiciel-libre-et-domotique"&gt;1&lt;/a&gt;,
&lt;a href="/index.php?post/2014/12/15/L-EspaceLab%2C-un-nouvel-espace-num%C3%A9rique-communautaire-%C3%A0-Quebec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-2"&gt;2&lt;/a&gt;,
&lt;a href="/index.php?post/2015/01/26/L%E2%80%99EspaceLab%2C-un-nouvel-espace-num%C3%A9rique-communautaire-%C3%A0-Qu%C3%A9bec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-3"&gt;3&lt;/a&gt;,
&lt;a href="/index.php?post/2015/01/26/L%E2%80%99EspaceLab%2C-un-nouvel-espace-num%C3%A9rique-communautaire-%C3%A0-Qu%C3%A9bec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-4"&gt;4&lt;/a&gt;.&lt;strong&gt;HACKSPACE&lt;/strong&gt;:
&lt;a href="http://www.chambreblanche.qc.ca/"&gt;La Chambre Blanche&lt;/a&gt;, avec des
activités en art visuel.&lt;strong&gt;LA PATENTE&lt;/strong&gt;: Coopérative qui accueille et
propose de fabriquer ou restaurer. Atelier &lt;a href="http://atelierlapatente.org/"&gt;La
patente&lt;/a&gt;.&lt;strong&gt;CLUB HACKNG&lt;/strong&gt;: Groupe
d'étudiants en informatique et télécommunication à l'Université
Laval.&lt;strong&gt;ÉCOLES EN TÉLÉCOMMUNICATION&lt;/strong&gt;groupe d'étudiants en
télécommunication. &lt;a href="http://www.telecom-bretagne.eu/"&gt;Telecom Bretagne&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A bientôt pour de nouvelles activités!&lt;/p&gt;
&lt;/p&gt;</summary><category term="fablab"></category><category term="hackspace"></category><category term="telecommunication"></category><category term="EspaceLab"></category><category term="hackerspace"></category></entry><entry><title>L'EspaceLab, un nouvel espace numérique communautaire à Quebec avec des ateliers en logiciel libre et domotique - article 2</title><link href="http://blog.xivo.io/lespacelab-un-nouvel-espace-numerique-communautaire-a-quebec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-2.html" rel="alternate"></link><updated>2014-12-15T15:31:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2014-12-15:lespacelab-un-nouvel-espace-numerique-communautaire-a-quebec-avec-des-ateliers-en-logiciel-libre-et-domotique-article-2.html</id><summary type="html">&lt;p&gt;The EspaceLab is a space for the digital creation community, opened in
autumn 2014, in the district of Sainte-Foy, Quebec, Canada. This week,
workshops are about: Printer 3D, programming, astronomy software,
Arduino ou Raspberry Pi, sparki robot.&lt;/p&gt;
&lt;p&gt;Reportage par
&lt;a href="valerie-dagrain.org" title="valerie-dagrain.org"&gt;valerie-dagrain.org&lt;/a&gt;
cc-by-sa EspaceLab Déc. 2014 (english following soon)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Présentation de l'EspaceLab:&lt;/strong&gt;L'EspaceLab, un espace de création
numérique communautaire, a ouvert ses portes cet automne 2014, dans le
quartier de Sainte-Foy à Québec au Canada. Situé dans la Bibliothèque
Monique Corriveau nouvellement aménagée, au cœur du quartier, à 10mn de
l'Université de Laval et juste à côté des locaux R&amp;amp;D de XiVO (système de
téléphonie Libre), des animateurs-trices bénévoles de l'Espace-lab
accueillent vos idées d'ateliers. En savoir plus sur l'historique des
Fablabs au Québec.En savoir plus sur les animateurs-trices, la salle et
le matériel, les projets : &lt;a href="https://espacelab2014.wordpress.com/"&gt;Espace
Lab&lt;/a&gt; et &lt;a href="/index.php?post/2014/12/01/Espace-Lab%2C-espace-numerique-communautaire-%C3%A0-Quebec%3B-des-ateliers-en-logiciel-libre-et-domotique"&gt;article
1&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Isabelle est ingénieur en physique et anime régulièrement des sessions
avec l'imprimante 3D et sur de la programmation&lt;/strong&gt;. En collaboration avec
d'autres animateurs tel que Rémi, ils avaient imprimé (imprimante 3D) un
sifflet et des sapins de Noël miniatures pouvant accueillir des DELs à
l'intérieur pour illuminer les sapins composés de différentes couleurs.
Isabelle apprécie d'animer des ateliers scientifiques pour les enfants
et se définit avec entrain comme une exploratrice !&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;D'ailleurs, ses fils Laurent et Guillaume (7 et 9 ans) m'ont expliqué
le logiciel Scratch junior pour faire de la programmation&lt;/strong&gt;, sur leur
tablette.
&lt;a href="http://macquebec.com/aides-en-francais-lutilisation-scratch-junior-ipad"&gt;Scratch&lt;/a&gt;
« permet d’initier de jeunes enfants (5-7 ans) au codage et à la
programmation Web en leur permettant de créer leurs propres histoires et
des jeux interactifs. »Laurent et Guillaume expliquent que l'on peut
prendre des personnages et des décors, créer un programme et lancer des
séquences pour faire des animations. Scratch, comme outil d'initiation à
la programmation, existe pour les enfants mais aussi pour les
adolescents et les adultes.&lt;/p&gt;
&lt;p&gt;Isabelle me présente comment elle a créé des jeux avec Scratch et des
images de héros de dessins animés… ou en utilisant &lt;a href="https://www.youtube.com/watch?v=rfQqh7iCcOU"&gt;Makey
Makey&lt;/a&gt; qui transforme tout
objet en clavier, en périphériques !!! Isabelle anime aussi des ateliers
à l’école Fernand Seguin, sur la conception de petits robots insectes
qu'elle a appelé: le Scarabot ! Venez les rencontrer pour découvrir tout
cela :D&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Valérie préparera un atelier astronomie avec
&lt;a href="http://www.stellarium.org/"&gt;Stellarium&lt;/a&gt; et une présentation sur &lt;a href="http://www.xivo.io/"&gt;XiVO
en téléphonie Libre&lt;/a&gt;&lt;/strong&gt; (un kit est en train de se
créer) pour janvier 2015.Valérie informe d'une pluie d'étoiles filantes
entre le 13 et 14 décembre : les
&lt;a href="http://fr.wikipedia.org/wiki/G%C3%A9minides"&gt;géminides&lt;/a&gt;. Provoquée par
l'astéroïde (3200) Phaéton qui passe près du Soleil tous les 1,4 an, il
y a 140 étoiles filantes par heure en moyenne!&lt;/p&gt;
&lt;p&gt;Benoit informe que pour ces ateliers, il y a la possibilité de louer un
télescope environ 40\$ pour 4 jours et qu'il y un observatoire au sud de
Québec; celui du &lt;a href="http://montcosmos.com"&gt;Mont Cosmos&lt;/a&gt;.Cet observatoire
est un ancien silo à grain, dans une ferme au cœur des Appalaches. Les
lieux peuvent accueillir les familles et des sessions sont organisés
pour initier à l'astronomie.Cet observatoire est sous la responsabilité
de l'Université Laval où l'on y trouve le &lt;a href="http://www2.ulaval.ca/fileadmin/ulaval_ca/Images/recherche/bd/projet/fiche/90177.html"&gt;Centre de recherche en
Astrophysique du
Québec&lt;/a&gt;
(CRAQ).&lt;/p&gt;
&lt;p&gt;&lt;img alt="EspaceLab-02-Quebec-13122014-Texte.png" src="/public/EspaceLab-02-Quebec-13122014-Texte.png" title="EspaceLab-02-Quebec-13122014-Texte.png, déc. 2014" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Daniel nous parle du « board arduino » pour faire un modulateur vocal.
Sur le projet de plante intelligente&lt;/strong&gt;, Josée était très concentrée avec
Dominique et Mireille pour préparer le système d'irrigation automatique.
Nous en saurons plus dans le prochain article!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nicolas et Hari, passionnés d’électronique, ont rejoint Frédéric (15
ans) et Félix (13 ans) qui paramétraient les capteurs d'un robot basé
sur Arduino ou Raspberry Pi:
&lt;a href="http://arcbotics.com/products/sparki"&gt;Sparki&lt;/a&gt;.&lt;/strong&gt;Ce support est très
utile pour des ateliers pédagogiques. En effet tous deux témoignent «
qu'une fois Sparki connecté à l'ordinateur on peut le programmer ». Une
fois déconnecté de l'ordinateur, une télécommande permet de commander le
robot : il peut attraper des objets, dessiner, définir la distance entre
lui et un objet, communiquer en Wi-Fi avec d'autres robots Sparki,
sortir d'un labyrinthe....&lt;/p&gt;
&lt;p&gt;Il existe une application Android pour contrôler Sparki en Bluetooth et
de nombreux capteurs. Le robot est open source mais il n'y a pas de
versions pour l'utiliser sous Linux… pour l'instant :D Frédéric
travaille aussi sur le projet de fusée à eau. Il témoigne que ses amis
sont intéressés pour venir prochainement et qu'un autre de leurs amis
utilise l'imprimante 3D.&lt;/p&gt;
&lt;p&gt;L'EspaceLab, c'est tous les samedi matin \\o/&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sources :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L'EspaceLab qui accueille les ateliers
    &lt;a href="https://espacelab2014.wordpress.com"&gt;https://espacelab2014.wordpress.com&lt;/a&gt; et &lt;a href="/index.php?post/2014/12/01/Espace-Lab%2C-espace-numerique-communautaire-%C3%A0-Quebec%3B-des-ateliers-en-logiciel-libre-et-domotique"&gt;article 1 sur les
    activités&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Astronomie: &lt;a href="http://montcosmos.com"&gt;http://montcosmos.com&lt;/a&gt;; Astrophysique à L'université
    Laval
    &lt;a href="http://www2.ulaval.ca/fileadmin/ulaval_ca/Images/recherche/bd/projet/fiche/90177.html"&gt;http://www2.ulaval.ca&lt;/a&gt;,
    membres de la Fédération des Astronomes Amateurs du Québec (FAAQ) et
    Regroupement des Clubs d’Astronomie de la grande région de Québec.&lt;/li&gt;
&lt;li&gt;Robot Sparki:
    &lt;a href="http://arcbotics.com/products/sparki/"&gt;http://arcbotics.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Programmation avec Scratch:
    &lt;a href="http://macquebec.com/aides-en-francais-lutilisation-scratch-junior-ipad"&gt;http://macquebec.com&lt;/a&gt; (fr)
    et &lt;a href="http://wiki.scratch.mit.edu/wiki/ScratchJr"&gt;http://wiki.scratch.mit.edu/wiki/ScratchJr&lt;/a&gt; (le wiki en anglais)&lt;/li&gt;
&lt;li&gt;Ateliers sur la plante et la fusée:
    &lt;a href="https://espacelab2014.wordpress.com/projets/"&gt;https://espacelab2014.wordpress.com/projets/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary><category term="domotique ateliers téléphonie logiciel libre Do-it-yourself"></category><category term="EspaceLab"></category><category term="fablab"></category><category term="hackerspace"></category><category term="hackspace"></category></entry><entry><title>Sprint Review 14.23</title><link href="http://blog.xivo.io/sprint-review-1423.html" rel="alternate"></link><updated>2014-12-05T14:56:00-05:00</updated><author><name>jpgelinas</name></author><id>tag:blog.xivo.io,2014-12-05:sprint-review-1423.html</id><summary type="html">&lt;p&gt;Here are a few links explaining what we are going to ship in XiVO 14.23:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.xivo.io/versions/215" title="https://projects.xivo.io/versions/215"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;New features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XiVO Client association with tel: and callto: protocols under
    Windows Vista and up&lt;/li&gt;
&lt;li&gt;Updated "on waiting calls / logged agents ratio overrun" queue
    diversion configuration&lt;/li&gt;
&lt;li&gt;Asterisk 11.14.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have many new community contributions to the documentation&lt;/p&gt;
&lt;p&gt;We also fixed a few bugs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a freeze&lt;/li&gt;
&lt;li&gt;problem associating a voicemail to a sccp device&lt;/li&gt;
&lt;li&gt;can't Create Online Call Recording Function Key&lt;/li&gt;
&lt;li&gt;problems in function key migration script&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Work of interest:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Function key migration towards our new model is nearly over&lt;/li&gt;
&lt;li&gt;A first working development version of
    &lt;a href="/index.php?post/2014/09/26/XiVO-s-new-directory-server"&gt;xivo-dird&lt;/a&gt;
    has been completed, and is now integrated into XiVO.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>How we test xivo-dird</title><link href="http://blog.xivo.io/how-we-test-xivo-dird.html" rel="alternate"></link><updated>2014-12-03T21:23:00-05:00</updated><author><name>pcadotte</name></author><id>tag:blog.xivo.io,2014-12-03:how-we-test-xivo-dird.html</id><summary type="html">&lt;p&gt;XiVO dird is a new directory service in XiVO. It will be used as the
entry pointfor lookups and reverse lookups in the near future. Dird is
the first service inXiVO that is developed with the objective of being
runnable on a separate machine.This objective made it essential to make
the service configurable so that dirdis not tied to an existing XiVO
installation.&lt;/p&gt;
&lt;p&gt;Making the borders clear around xivo-dird made it possible to test
against dird'sinterface more easily than what used to be possible with
other services in XiVO.&lt;/p&gt;
&lt;p&gt;Like any other service in XiVO, xivo-dird has a unit test suite that we
strive tomake as complete as possible. We also wrote a suite of
integration tests that canbe executed from a development machine without
a full installation of XiVO. Theintegration test suite uses xivo-dird as
a black box, changing the input only, typicallyconfiguration files,
files, web services or other resources depending on the testedback-end.
These tests are higher level than unit tests but not as high as the
oneswe usually have in xivo-acceptance that requires and sometimes test
manycomponents at the same time.&lt;/p&gt;
&lt;p&gt;Some of the tools we use for the integration tests include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;docker to launch and stop xivo-dird quickly with different
    configuration&lt;/li&gt;
&lt;li&gt;fig to coordinate our launched services, it starts all containers
    with the proper arguments to allow the whole system to work&lt;/li&gt;
&lt;li&gt;nosetests to run the test suite&lt;/li&gt;
&lt;li&gt;jenkins to execute the tests and report problems&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The way these tests are structured, is quite simple at the moment. At
the rootof the xivo-dird project, an integration_tests directory can be
found. In thisdirectory, there is a Makefile, a Dockerfile, an assets
folder and a suitefolder. Here's a quick description of each of these
elements.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the file to build the test image that is used by the test suite.
It generatesa runnable docker container using the current branch.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Makefile&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Makefile is a helper to build the test image and pull somedocker
dependencies. make test-image can be used to generate a freshtest image
ready for testing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;assets&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This directory contains many set of runnable configuration that areused
by the test suite. An asset consists of a fig.yml file to describethe
environment in which we want to run dird as well as allconfiguration
files that are required for this given test.&lt;/p&gt;
&lt;p&gt;Here is an example of an asset directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% tree assets/xivo_users_multiple_xivo &lt;/span&gt;
&lt;span class="n"&gt;assets&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xivo_users_multiple_xivo&lt;/span&gt;
├── &lt;span class="n"&gt;confd_data&lt;/span&gt;
│   ├── &lt;span class="n"&gt;america&lt;/span&gt;
│   │   └── &lt;span class="mf"&gt;1.1&lt;/span&gt;
│   │       ├── &lt;span class="n"&gt;infos&lt;/span&gt;
│   │       └── &lt;span class="n"&gt;users&lt;/span&gt;
│   ├── &lt;span class="n"&gt;asia&lt;/span&gt;
│   │   └── &lt;span class="mf"&gt;1.1&lt;/span&gt;
│   │       ├── &lt;span class="n"&gt;infos&lt;/span&gt;
│   │       └── &lt;span class="n"&gt;users&lt;/span&gt;
│   ├── &lt;span class="n"&gt;europe&lt;/span&gt;
│   │   └── &lt;span class="mf"&gt;1.1&lt;/span&gt;
│   │       ├── &lt;span class="n"&gt;infos&lt;/span&gt;
│   │       └── &lt;span class="n"&gt;users&lt;/span&gt;
│   └── &lt;span class="n"&gt;run_confd&lt;/span&gt;
├── &lt;span class="n"&gt;etc&lt;/span&gt;
│   └── &lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dird&lt;/span&gt;
│       ├── &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;
│       └── &lt;span class="n"&gt;sources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;
│           ├── &lt;span class="n"&gt;america&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;
│           ├── &lt;span class="n"&gt;asia&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;
│           └── &lt;span class="n"&gt;europe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;
└── &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;

&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="n"&gt;directories&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;suite&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All integration test are in this directory, each TestCase class hasan
asset field that map the test to an asset. The BaseDirdIntegrationTestis
responsible of launching and stopping the environment for each testcase.&lt;/p&gt;
&lt;p&gt;Here is an example fig file for the asset shown above:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% cat assets/xivo_users_multiple_xivo/fig.yml&lt;/span&gt;
&lt;span class="n"&gt;dird&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dird&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;
  &lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &amp;quot;&lt;span class="mi"&gt;9489&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9489&lt;/span&gt;&amp;quot;
  &lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &amp;quot;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dird&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dird&lt;/span&gt;&amp;quot;
  &lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;america&lt;/span&gt;&amp;quot;
    &lt;span class="o"&gt;-&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;asia&lt;/span&gt;&amp;quot;
    &lt;span class="o"&gt;-&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;europe&lt;/span&gt;&amp;quot;
&lt;span class="n"&gt;america&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;2.7&lt;/span&gt;
  &lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &amp;quot;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;confd_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&amp;quot;
  &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &amp;quot;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;run_confd&lt;/span&gt; &lt;span class="n"&gt;america&lt;/span&gt;&amp;quot;
&lt;span class="n"&gt;europe&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;2.7&lt;/span&gt;
  &lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &amp;quot;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;confd_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&amp;quot;
  &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &amp;quot;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;run_confd&lt;/span&gt; &lt;span class="n"&gt;europe&lt;/span&gt;&amp;quot;
&lt;span class="n"&gt;asia&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;2.7&lt;/span&gt;
  &lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &amp;quot;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;confd_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&amp;quot;
  &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &amp;quot;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;run_confd&lt;/span&gt; &lt;span class="n"&gt;asia&lt;/span&gt;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The resulting architecture used for the test would look like the
following diagram.&lt;/p&gt;
&lt;p&gt;&lt;img alt="architecture.png" src="/public/architecture/architecture.png" title="architecture.png, déc. 2014" /&gt;&lt;/p&gt;
&lt;p&gt;Since xivo-confd is not docker ready at the moment, we mocked the confd
serverwith a python SimpleHTTPServer and some static files. This allowed
us to havepredictable results for our tests without having to launch and
configure awhole XiVO server and still be able to test some common
cases, such as servernot started, 404 errors, etc.&lt;/p&gt;
&lt;p&gt;Once we know that all of our back-end and that the core of dird is
completelytested, only one acceptance test is required to test the whole
chain ofinteraction.&lt;/p&gt;
&lt;p&gt;This mode of testing is still new to our team, we will see if the
theoreticaladvantages that we get from this kind of segmentation is as
good in practice asit is on paper.&lt;/p&gt;
&lt;p&gt;Detailed instructions are available in xivo-dird's README for those who
want totry running the test suite.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://xivo.io" title="XiVO"&gt;XiVO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io" title="XiVO documentation"&gt;XiVO
    documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/dev/system/xivo-dird/xivo-dird.html" title="dird documentation"&gt;xivo-dird
    documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/xivo-pbx/xivo-dird" title="dird source code"&gt;xivo-dird source
    code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fig.sh" title="fig"&gt;fig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docker.com" title="docker"&gt;docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>L'EspaceLab, un nouvel espace numérique communautaire à Québec avec des ateliers en logiciel libre et domotique</title><link href="http://blog.xivo.io/lespacelab-un-nouvel-espace-numerique-communautaire-a-quebec-avec-des-ateliers-en-logiciel-libre-et-domotique.html" rel="alternate"></link><updated>2014-12-01T14:44:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2014-12-01:lespacelab-un-nouvel-espace-numerique-communautaire-a-quebec-avec-des-ateliers-en-logiciel-libre-et-domotique.html</id><summary type="html">&lt;p&gt;Reportage par
&lt;a href="valerie-dagrain.org" title="valerie-dagrain.org"&gt;valerie-dagrain.org&lt;/a&gt;
cc-by-sa c EspaceLab Nov.2014 (english following soon)&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Présentation de l'EspaceLab:&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://espacelab2014.wordpress.com"&gt;L'EspaceLab&lt;/a&gt;, un espace de
création numérique communautaire, a ouvert ses portes cet automne 2014,
dans le quartier de Sainte-Foy à Québec au Canada.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Situé dans la Bibliothèque Monique Corriveau&lt;/strong&gt; nouvellement aménagée
(photo 1), au cœur du quartier, à 10mn de l'Université de Laval et juste
à côté des locaux R&amp;amp;D de &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; (système de
téléphonie Libre), des animateurs-trices bénévoles de l'Espace-lab
accueillent vos idées d'ateliers.En savoir plus sur l'historique des
&lt;a href="http://fablabs-quebec.org"&gt;Fablabs au Québec&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L'équipe de l'EspaceLab couvre tous les milieux professionnels&lt;/strong&gt;: ce
sont des chercheurs, des enseignants, des scientifiques, des
administrateurs et des gens d’affaires.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;La salle&lt;/strong&gt;, qui accueille des ateliers tous les samedi matin, permet
d'organiser plusieurs groupes de travail. Le matériel de la bibliothèque
disponible sur place se compose de plusieurs tables, chaises, de 4
grands écrans TV pour utiliser et montrer en temps réel l'utilisation de
logiciels ou montrer des vidéos. La bibliothèque fournit un accès
internet en WiFi et filaire.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Le matériel&lt;/strong&gt; apporté par les bénévoles comprend actuellement de
l'équipement en électronique (Arduino avec 16 projets pour les débutants
et des capteurs arduino, oscilloscope électronique et multimètre) en
robotique, &lt;a href="http://www.freecadweb.org/"&gt;Freecad&lt;/a&gt; en CAO (Conception
Assistée par Ordinateur), en informatique (Logiciel Libre
&lt;a href="http://www.ubuntu.com/"&gt;Ubuntu&lt;/a&gt;,
&lt;a href="https://fr.wikipedia.org/wiki/Linux"&gt;Linux&lt;/a&gt;,
&lt;a href="http://www.blender.org"&gt;Blender&lt;/a&gt;, &lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; et
du matériel pour exécuter de l'impression 3D et Scanneur 3D.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Les 4 projets actuels&lt;/strong&gt;, où tout le monde peut participer, sont:
d'établir un record d'altitude avec une fusée à eau (projet 624), de
créer une plante intelligente qui s'arrose et publie sur un blog (projet
agro-urbano), de participer au projet d'un étudiant sur un synthétiseur
modulaire, de fabriquer un mini-maker pour le printemps 2015 (événement
&lt;a href="http://www.makerfairemontreal.ca/?lang=fr"&gt;mini-maker faire de
Montreal&lt;/a&gt;).Sources :
&lt;a href="https://espacelab2014.wordpress.com"&gt;espacelab2014.wordpress.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="EspaceLab-Quebec-29112014rs500.png" src="/public/EspaceLab-Quebec-29112014rs500.png" title="EspaceLab-Quebec-29112014rs500.png, déc. 2014" /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Témoignages des activités ouverts et participatifs de ce samedi 29.nov 2014:&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Josée a présenté le projet de plante intelligente&lt;/strong&gt;« qui s'arrose
    seule et publie sur le blog » (photo 2 et 7) . Elle travaillait avec
    une autre dame jusqu'à ce qu'une personne rejoigne l'équipe pour
    présenter une modélisation 3D de fleurs. J'ai présenté le logiciel
    Libre &lt;a href="http://www.bioclipse.net/"&gt;bioclipse&lt;/a&gt; pour modéliser en 3D en
    prenant compte différentes sciences. Les idées s'enrichissent de
    l'expérience de chacun. Sur Paris, j'avais découvert le projet de
    géo-pollution (au &lt;a href="http://www.tmplab.org/"&gt;/tmp/lab&lt;/a&gt; par P.Langlois)
    où chacun pouvait faire analyser la composition d'une plante
    (hackerspace /tmp/lab). Peut-être qu'ici je pourrai réaliser mon
    projet de plante qui montre le fonctionnement de la photosynthèse.
    J'avais initié ce projet pour le musée des sciences de Rennes, dans
    notre hackerspace &lt;a href="http://www.hacknowledge.org"&gt;hacknowledge&lt;/a&gt;
    en France. Comme les fiches sont partagées, c'est une occasion pour
    moi de continuer !&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Avec les passionnés de domotique comme Daniel et Hari&lt;/strong&gt;. on
    discute d’actualités comme la &lt;a href="http://ici.radio-canada.ca/nouvelles/science/2014/11/25/001-cuillere-parkinson-google.shtml"&gt;cuillère
    Google&lt;/a&gt;,
    l'objet connecté
    &lt;a href="http://rue89.nouvelobs.com/2014/11/09/echo-est-devenu-membre-famille-produit-flippant-damazon-255946"&gt;Echo&lt;/a&gt;
    qui répond aux questions et s'installe dans l'espace domestique, des
    &lt;a href="http://rue89.nouvelobs.com/2014/11/27/securite-cinq-innovations-censees-proteger-256262"&gt;limites de la
    sécurité&lt;/a&gt; etc.
    Nous étions 2 pour présenter &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt; qui permet
    de monter un système téléphonique libre basé sur
    &lt;a href="http://www.asterisk.org/"&gt;Asterisk&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Jean-Paul, enseignant en science,&lt;/strong&gt; présente &lt;a href="http://www.youtube.com/watch?v=_qNAJGqRBFE"&gt;les fondements du
    moteur électrique&lt;/a&gt; sur
    un écran. Pour cela, il a entièrement modélisé en 3D le
    fonctionnement en utilisant le logiciel Libre
    &lt;a href="http://www.blender.org/"&gt;Blender&lt;/a&gt; (photo 6). La vidéo est
    accessible &lt;a href="http://www.youtube.com/watch?v=_qNAJGqRBFE"&gt;ici&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CAO&lt;/strong&gt;: D'autres personnes sont ensuite arrivé pour faire une
    animation sur &lt;a href="http://www.freecadweb.org/index-fr.html"&gt;FreeCAD&lt;/a&gt; qui
    est l'alternative libre du logiciel AutoCAD, pour faire de la
    modélisation 3D pour la
    &lt;a href="https://fr.wikipedia.org/wiki/Conception_assist%C3%A9e_par_ordinateur"&gt;CAO&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;L'imprimante 3D&lt;/strong&gt; : toute une équipe était très motivée pour la
    paramétrer et faire des essais sur la préparation : température
    et calibrage. (photos 3 et 5). À l'approche des fêtes, le modèle de
    sapin à imprimer s'affine !&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Arduino&lt;/strong&gt; : Un autre groupe animait un atelier avec suivi de
    tutoriaux sur l’écran (photo 4) et travaux pratiques.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Benoît présente des actualités et le partenariat à venir&lt;/strong&gt; comme
    favoriser des activités avec &lt;a href="http://www.linuq.org/"&gt;LinuQ&lt;/a&gt;, le
    groupe utilisateur Linux sur Québec, nous échangeons également sur
    les
    &lt;a href="http://fr.wikipedia.org/wiki/Formation_en_ligne_ouverte_%C3%A0_tous"&gt;MOOCs&lt;/a&gt;,
    c'est à dire la formation en ligne ouverte à tous. Je présente
    &lt;a href="http://tetaneutral.net"&gt;Tetaneutral&lt;/a&gt;, un collectif à
    Toulouse (France) qui développe de l'accès internet communautaire en
    forte demande comme &lt;a href="https://www.koumbit.org/"&gt;Koumbit&lt;/a&gt; qui rayonne
    depuis Montréal.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Je suis très motivée pour revenir animer&lt;/strong&gt; &lt;a href="http://www.a-brest.net/article3864.html"&gt;un
    atelier&lt;/a&gt; sur
    &lt;a href="http://www.stellarium.org/fr/"&gt;Stellarium&lt;/a&gt;, un planétarium Libre.
    J'ai déjà animé des ateliers durant la &lt;a href="http://www.fetedelascience.fr/"&gt;Fête des
    Sciences&lt;/a&gt; en France et &lt;a href="http://www.a-brest.net/article3864.html"&gt;initié ce
    cours&lt;/a&gt; auprès de jeunes
    élèves en Corse.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Ressources&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Le site du fablab de Québec&lt;/strong&gt;:
    l'&lt;a href="espacelab2014.wordpress.com"&gt;EspaceLab&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;La bibliothèque Monique Corriveau&lt;/strong&gt; qui accueille l'EspaceLab:
    &lt;a href="http://www.bibliothequesdequebec.qc.ca/bibliotheques/saintefoysillerycaprouge/monique_corriveau.aspx"&gt;www.bibliothequesdequebec.qc.ca&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Espace-lab et fablabs&lt;/strong&gt;:
    &lt;a href="https://espacelab2014.wordpress.com"&gt;espacelab2014.wordpress.com&lt;/a&gt; ;
    la charte des fablabs du MIT
    &lt;a href="http://fab.cba.mit.edu/about/charter"&gt;http://fab.cba.mit.edu&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Le hackerspace&lt;/strong&gt; : salle Blanche et arts visuels sur Québec
    &lt;a href="http://www.chambreblanche.qc.ca/EN/content.asp?page=ChambreBlanche_History"&gt;www.chambreblanche.qc.ca&lt;/a&gt;
    ; le /tmp/lab sur Paris &lt;a href="http://www.tmplab.org/"&gt;www.tmplab.org&lt;/a&gt;,
    Hacknowledge &lt;a href="http://www.hacknowledge.org"&gt;www.hacknowledge.org&lt;/a&gt; sur
    Rennes, Koumbit &lt;a href="https://www.koumbit.org/"&gt;www.koumbit.org&lt;/a&gt; sur
    Montréal et Tetaneutral &lt;a href="http://tetaneutral.net"&gt;tetaneutral.net&lt;/a&gt;
    sur Toulouse (FR), GUL LinuQ à Québec
    &lt;a href="http://www.linuq.org/"&gt;www.linuq.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Des logiciels libres&lt;/strong&gt;; XiVO &lt;a href="http://www.xivo.io/"&gt;www.xivo.io&lt;/a&gt; et
    &lt;a href="https://fr.wikipedia.org/wiki/XiVO"&gt;XiVO sur wikipedia&lt;/a&gt;, Asterisk
    &lt;a href="http://www.asterisk.org"&gt;www.asterisk.org&lt;/a&gt;, Blender
    &lt;a href="http://www.blender.org"&gt;www.blender.org&lt;/a&gt;, FreeCAD
    &lt;a href="http://www.freecadweb.org"&gt;www.freecadweb.org&lt;/a&gt;, Python
    &lt;a href="https://www.python.org"&gt;www.python.org&lt;/a&gt;, Bioclipse
    &lt;a href="http://www.bioclipse.net/"&gt;www.bioclipse.net&lt;/a&gt;, Stellarium
    &lt;a href="http://www.stellarium.org/"&gt;www.stellarium.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Des fêtes de sciences, du Libre et des savoirs&lt;/strong&gt;: maker faire à
    Montréal
    &lt;a href="http://www.makerfairemontreal.ca/?lang=fr"&gt;www.makerfairemontreal.ca&lt;/a&gt;,
    fêtes de la Science (Fr)
    &lt;a href="http://www.fetedelascience.fr"&gt;www.fetedelascience.fr&lt;/a&gt;, La SQIL
    semaine québécoise informatique Libre
    &lt;a href="http://2014.sqil.info/"&gt;2014.sqil.info/&lt;/a&gt;, les MOOCs
    &lt;a href="http://fr.wikipedia.org/wiki/Formation_en_ligne_ouverte_%C3%A0_tous"&gt;http://fr.wikipedia.org/wiki/Formation_en_ligne_ouverte&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary><category term="communautaire"></category><category term="domotique"></category><category term="fablab"></category><category term="hackerspace"></category><category term="logiciel libre"></category><category term="numerique"></category><category term="telephonie"></category><category term="xivo"></category><category term="EspaceLab"></category><category term="hackspace"></category></entry><entry><title>Agile Tour Québec 2014</title><link href="http://blog.xivo.io/agile-tour-quebec-2014.html" rel="alternate"></link><updated>2014-11-25T18:24:00-05:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2014-11-25:agile-tour-quebec-2014.html</id><summary type="html">&lt;p&gt;On november 5th 2014 some members of the XiVO dev team were at the
Centre des congrès de Québec for the Agile Tour 2014. The attendance was
around 800 people, with a fair share of managers and developers. The
XiVO dev team having an agile process for the last couple of years was
interested in the new good practices and an opportunity to exchange
experiences with other people.&lt;/p&gt;
&lt;h3&gt;First keynote by Michael Feathers (author of Working Effectively with Legacy Code)&lt;/h3&gt;
&lt;p&gt;The main idea we got from this keynote is the importance of metrics. I'd
like to compare this with code optimization: if you only read the code
and try to optimize everything that you find by only reading, you will
probably waste your time because you won't be optimizing in the right
spot. The first thing to do in order to optimize code is profiling: you
run the code and measure which portion of the code uses the most
resource (CPU, memory, etc.). Only then can you know where you should
put your efforts to get the best amelioration. In the same way, about
code quality, you may find some spots where the quality is pretty bad,
but you may miss the most important spot. The right metrics can give you
that: where you should put your efforts to get the best amelioration of
code quality and reduction of maintenance. Here are two examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;for a given period, list the count of commits per file: it gives you
    the files that need the most maintenance, which are probably where
    you should improve code quality. Usually, 20% of the files get 80%
    of the commits.&lt;/li&gt;
&lt;li&gt;evolution of the average length of source files: it gives you an
    idea of the "aging" of your code base. Usually, the average will
    tend to grow fast after some time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One of the danger with metrics it to use them as goal instead of using
them as an indicator of success. For example, aiming for 100% unit-test
coverage or for a high number of new tests may result in better numbers
on paper, but the result in the code quality and maintainability could
be disastrous.Incomplete or badly designed tests adds complexity to the
software without adding value. In these situation, adding tests may only
increase the technical debt.&lt;/p&gt;
&lt;h3&gt;Félix Antoine Bourbonnais – Agile coach&lt;/h3&gt;
&lt;p&gt;The introduction to this presentation was formulated around the
following question: "What is going to be the next big challenge that
your software will have to address in the next 5 or 10 years?"&lt;/p&gt;
&lt;p&gt;The right answer is : "We don't care". This answer lead us to some best
practices to keep software maintainable and to be able to adapt to
changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Interfaces&lt;/li&gt;
&lt;li&gt;Interfaces&lt;/li&gt;
&lt;li&gt;Polymorphism&lt;/li&gt;
&lt;li&gt;Interfaces&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Second keynote by Jurgen Appelo - author of Management 3.0&lt;/h3&gt;
&lt;p&gt;Most questions that M. Appelo receives from participants in his workshop
are about changing other people:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How can I make my team do...&lt;/li&gt;
&lt;li&gt;How can we make the upper management understand that...&lt;/li&gt;
&lt;li&gt;How can I change this person's ...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The answer to these questions in most cases is: don't. A keep to success
is to improve yourself, not others. Try and keep challenging your
techniques, behavior and see if you can do better.&lt;/p&gt;
&lt;p&gt;His book is available for free on &lt;a href="http://m30.me"&gt;http://m30.me&lt;/a&gt; and contains a long
list of interesting ideas to get people to know their co-workers better
and share good experiences.&lt;/p&gt;
&lt;h3&gt;Michael Ouellet - agile team leader&lt;/h3&gt;
&lt;p&gt;The main idea of this talk was: don't waste your precious brain time and
move forward, think constructive. To do that, you must be able to
identify what wastes your time. Based on the book Positive Intelligence
from Shirzad Chamine, M. Ouellet gives us a list of "saboteurs" which
represent types of behaviour that lead to a waste of time, such as the
Judge, the Victim, the Avoider or the Hyper-Achiever. We all have all
these saboteurs, and they all express to some degree. Identifying which
saboteur caused you to think this negative thought or do that
non-constructive action is the first step for blocking the saboteurs. M.
Ouellet insisted on two points: the worst saboteur is the Judge, it is
always there and the best course of action to reduce the effects of
saboteurs in a team is to show the example, not try to impose your
vision, joining the recommandation of J. Appelo.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://positiveintelligence.com/overview/power-potential/" title="http://positiveintelligence.com/overview/power-potential/"&gt;http://positiveintelligence.com/ove...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-zdJ1ubvoXs" title="https://www.youtube.com/watch?v=-zdJ1ubvoXs"&gt;https://www.youtube.com/watch?v=-zd...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Hugo Emond&lt;/h3&gt;
&lt;p&gt;Hugo Emond presented the feedback from a SCRUM project with a team
distributed over two continents in different timezones. The presentation
was about the techniques that worked best to obtain good results. Some
best practices:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A first meeting between the members of the team&lt;/li&gt;
&lt;li&gt;High quality tools for the meetings, webcam and microphones, the
    later being very important&lt;/li&gt;
&lt;li&gt;100% presence on meetings, no cellphones, no mail, etc&lt;/li&gt;
&lt;li&gt;Keep an informal communication channel open at all time to share non
    professional communication such as jokes and personal news&lt;/li&gt;
&lt;li&gt;Respect and be aware of cultural differences&lt;/li&gt;
&lt;li&gt;Keep the timezone in mind when asking for the awareness of team
    members&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The missing point from this experience that could have benefited our
team is a way to do a good sprint review with many participants,
technical or not, from many locations. At the moment, we do conference
calls with a blog post to share screenshots and links. We are still
missing a good way to do our demos.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Nov.2014 Rencontre Régionale des TIC, Gaspésie-Îles-de-la-Madeleine</title><link href="http://blog.xivo.io/nov2014-rencontre-regionale-des-tic-gaspesie-iles-de-la-madeleine.html" rel="alternate"></link><updated>2014-11-21T19:43:00-05:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2014-11-21:nov2014-rencontre-regionale-des-tic-gaspesie-iles-de-la-madeleine.html</id><summary type="html">&lt;p&gt;Nov.2014 Rencontre Régionale des TIC, Gaspésie-Îles-de-la-Madeleine
(version anglaise prochainement)Interview de Gregory Sanderson, Geek
Lord de &lt;a href="http://www.xivo.io"&gt;XiVO&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Dans quel contexte se déroule cette rencontre "Branché sur l'avenir
de notre région ?"&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;La rencontre fût organisée par le Technocentre des TIC, une organisation
favorisant le développement des TIC (Technologies de l'information et et
des communications) pour la région de la Gaspésie-Îles-de-la-Madeleine.&lt;/p&gt;
&lt;p&gt;C'est une occasion permettant aux diverses entreprises et organisations
de la région de se rencontrer, réseauter, d'apprendre et d'échanger sur
les nouvelles tendances dans le domaine du numérique. La rencontre a
pris place au Centre des congrès de Carlton-Sur-Mer.&lt;/p&gt;
&lt;p&gt;La rencontre était divisé en 2 parties : Les conférences du jeudi soir
et les ateliers du vendredi. Au total 6 ateliers différents se sont
déroulés pendant la journée avec des sujets comme le big data,
l'e-reputation, les villes intelligentes, le mobile et le webmarketing.&lt;/p&gt;
&lt;p&gt;J'ai eu la chance d'être invité par M. Carol Cotton, organisateur de la
rencontre, pour venir donner un atelier sur les Logiciels Libres.
C'était ma première visite en Gaspésie et je suis très content d'avoir
participé. J'ai été accueilli par des gens chaleureux, contents
d'échanger avec des nouveaux gens et désireux de faire évoluer leur
belle région sur le plan numérique.&lt;/p&gt;
&lt;p&gt;J'ai été surpris par les gens que j'ai rencontré en Gaspésie. Au début
je m'attendais à ce que les logiciels libres ne soit pas un sujet très
connu dans la région, mais je me suis trompé. Vendredi soir, j'ai
rencontré un entrepreneur offrant des solutions de réseautique intégrant
plusieurs logiciels libres. J'ai aussi rencontré un des mainteneurs de
lxterminal, le terminal utilisé dans LXDE.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Cette journée comprenait 6 ateliers et le votre était dédié à la
section Logiciel Libre. Dans votre présentation, quelles sont les forces
du Logiciel Libre dans la téléphonie?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Premièrement, il ne faut pas oublier que nous allons retrouver les mêmes
avantages du logiciel libre sur le plan numérique, c'est-à-dire une
meilleur qualité, plus de flexibilité, une plus grande durée de vie et
une meilleure évolutivité.Ce qui va faire la force du libre dans le
domaine de la téléphonie ce sont les économies, l'interopérabilité et
les standards ouverts.&lt;/p&gt;
&lt;p&gt;Les économies, car nous pouvons remplacer une solution matérielle avec
une solution logicielle. Ça permet de faire évoluer l'infrastructure
plus facilement et de remplacer le matériel de téléphonie désuet avec
des alternatives moins coûteuses.&lt;/p&gt;
&lt;p&gt;L'interopérabilité est une autre force car les logiciels libres de
téléphonie vont souvent supporter plusieurs protocoles utilisés par
divers fournisseurs, puis ils vont aussi permettre d'interconnecter ces
technologies de façon transparente. Par exemple : Avec une solution
asterisk on peut facilement faire le pont entre un téléphone IP et une
ligne analogique. Ou encore, entre un softphone et un téléphone Cisco.&lt;/p&gt;
&lt;p&gt;Les standards ouverts vont aussi beaucoup contribuer à
l'interopérabilité. Je pense surtout aux standards comme SIP et RTP qui
sont utilisés par la grande majorité des fabricants de téléphones IP.
Grâce à ces protocoles, les logiciels libres de téléphonie peuvent
supporter une grande panoplie d'appareils sans contraintes techniques ou
légales. C'est un avantage pour le fabricant qui peut réutiliser des
technologies matures, puis c'est aussi un avantage pour le client qui se
retrouve avec un plus grand choix.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Quels avantages majeurs propose XiVO, projet sur lequel vous
travaillez dans le secteur de la téléphonie Libre?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;XiVO est une solution basé sur asterisk, un PBX VoIP (serveur de
téléphonie IP), un logiciel de téléphonie assez populaire dans le
domaine du libre. Asterisk offre une panoplie de fonctionnalités, ce qui
le rend très flexible. C'est un grand avantage, mais en contrepartie ça
prend du temps à bien configurer ainsi qu'un minimum de connaissances
techniques. XiVO permet de simplifier ce processus, rendant la gestion
des téléphones plus simple et efficace pour l'administrateur et
l'utilisateur.&lt;/p&gt;
&lt;p&gt;Je donne quelques exemples de fonctionnalités qui sont configurables en
quelques étapes : Provisionnement automatique de téléphones IP, boîtes
de messagerie vocal, files d'appels en attente, appels en mode
conférence, transfert d'appels, etc. Cette simplification permet aussi
de rajouter des fonctionnalités facilement, plus tard, au fil de
l'évolution des besoins.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Quelle actualité majeure dans la téléphonie est à retenir pour 2014
et quelles évolutions voyez-vous pour 2015?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Je crois qu'en 2015 il faut commencer à porter plus attention à un
nouveau codec : Opus. Opus est une technologie permettant de compresser
l'audio de la voix de façon plus efficace que les codecs plus connus
comme GSM, uLAW ou aLAW.&lt;/p&gt;
&lt;p&gt;J'ai beaucoup espoir en Opus car ça permet une meilleur utilisation de
la bande passante, un facteur toujours important dans n'importe quel
logiciel de réseautique, mais aussi parce que c'est un standard ouvert.
Je crois que c'est en encourageant des alternatives libres comme Opus
que nous pouvons assurer un plan numérique qui évolue plus rapidement,
puis au final un plus grand partage des connaissances au bénéfice de
tous.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. Sujets Libres: quels sont les défis pour le Libre; quels sont les
projets qui te passionnes dans la téléphonie; quels sont les éléments
motivants à venir ou que tu voudrais tester...?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;J'aimerais beaucoup explorer le WebRTC. C'est un nouveau protocole de
communication en temps réel développé pour les navigateurs web. Je crois
que grâce à cette technologie nous allons pouvoir connecter le
navigateur web avec des nouveaux services. Par exemple : On pourrait
envisager de connecter un navigateur avec un système de téléphonie IP,
ainsi on pourrait téléphoner directement à partir d'une page web.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sources&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Site officiel de
    &lt;a href="http://www.technocentre-tic.com/images/tctic14%20Programmation%20et%20inscription.pdf#TIC-Programmation-Conferences-Ateliers.indd%3A.6058%3A28"&gt;Technocentre&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="XIVO-G-Sanderson-11-2014.png" src="/public/XIVO-G-Sanderson-11-2014.png" title="XIVO-G-Sanderson-11-2014.png, nov. 2014" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Hackfest 2014 - Cybersecurity talks</title><link href="http://blog.xivo.io/hackfest-2014-cybersecurity-talks.html" rel="alternate"></link><updated>2014-11-18T22:42:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2014-11-18:hackfest-2014-cybersecurity-talks.html</id><summary type="html">&lt;p&gt;HACKFEST 2014, Quebec-city&lt;/p&gt;
&lt;p&gt;Interview with Valerie Dagrain,team &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt;]
(version française plus bas)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http:%20//valerie-dagrain.org/"&gt;Valerie&lt;/a&gt;, you were present at the
Hackfest which took place on 7-8th november 2014 in Quebec City. Can you
give us the context?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Each year, the city of Quebec hosts a Hackfest meeting on cybersecurity.
This is the schedule:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The
    &lt;a href="http:%20//www.hackfest.ca/%20fp_type%20conf2014%20="&gt;conferences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Projections or reportage about hacking and recent news on
    data protection.&lt;/li&gt;
&lt;li&gt;The &lt;a href="http:%20//www.hackfest.ca/hackfest-party-2014"&gt;workshops&lt;/a&gt; of
    lockpicking, 3D printer.&lt;/li&gt;
&lt;li&gt;The &lt;a href="http:%20//www.hackfest.ca/partenaires-2014"&gt;exhibitors&lt;/a&gt; in
    computer security.&lt;/li&gt;
&lt;li&gt;The game of "Capture the flag": 16H of game, 150 players. 26 teams.&lt;/li&gt;
&lt;li&gt;Entertainment: arcade, challenge, lockpicking ...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These kind of meeting in cybersecurity are also organized in other
countries, with shared a common culture and with lectures, workshops and
exhibitors about threats and recent news. This is the &lt;a href="https:%20//wiki.gnome.org/Hackfests"&gt;global calendar
of Hackfests&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What was your participation in this event?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The project &lt;a href="http:%20//66.254.41.189"&gt;XiVO&lt;/a&gt; was present for the
&lt;a href="/index.php%20post%20/%202012/11/08%20/%20Hacking-at-the-Hackfest?"&gt;Hackfest in
2012&lt;/a&gt;.
This year, my presence allowed to renew support for these two days
dedicated to cybersecurity.&lt;/p&gt;
&lt;p&gt;I'm involved in free software community since 2004 (&lt;a href="http:%20//lea-linux.org/documentations/Annuaire:%20LUG_France"&gt;groups users
Linux&lt;/a&gt;)
and &lt;a href="http:%20//www.hacknowledge.org/drupal%20/"&gt;hackerspace&lt;/a&gt; since 2009
(Quebec, France and Germany) where I created
&lt;a href="http:%20//www.a-brest.net/article10201.html"&gt;workshops&lt;/a&gt; on privacy and
personal data.&lt;/p&gt;
&lt;p&gt;A member of &lt;a href="http:%20//www.linuq.org/"&gt;LinuQ Quebec&lt;/a&gt; and &lt;a href="http:%20//66.254.41.189"&gt;XiVO
team&lt;/a&gt; informed me about the Hackfest: I
proposed to be volunteer and coordinate via IRC (freenode server
#hackfest_ca) to assist in the installation.&lt;/p&gt;
&lt;p&gt;The welcome and the atmosphere was excellent. I helped to carry cisco's
servers (capture the flag game was inside!) and network cables for other
groups set up Internet access in the Hotel Plazza. Exchanging with the
organizing team I learned the creation of a hackerspace / fablab on
Quebec and a meeting in St Foy every 4th thursday of the month. I could
also talk about the project &lt;a href="http:%20//goteo.org/project/cle-facil"&gt;key
Facil&lt;/a&gt; (Add distributions on USB
key) initiated in Montreal and distribute documents on other
&lt;a href="http:%20//ehsm.eu/"&gt;conferences&lt;/a&gt; (EHSM- Berlin) or projects as
&lt;a href="https:%20//github.com/m-labs/ARTIQ"&gt;artiq&lt;/a&gt; or hack festival news in
Europe for 2015.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Can you give an overview of some conferences?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hackfest 2014 hosted &lt;a href="https://www.youtube.com/watch?v=aWmLWx8ut20&amp;amp;list=UUSckp-N4zP4V8GnZGxVqjTg"&gt;Theo de
Raadt&lt;/a&gt;,
the OpenBSD project leader
(&lt;a href="https://www.youtube.com/watch?v=aWmLWx8ut20&amp;amp;list=UUSckp-N4zP4V8GnZGxVqjTg"&gt;video&lt;/a&gt;),
the testimony to the career of &lt;a href="http:%20//%20www%20.hackfest.ca%20/%20speaker%20/%20emily-brandwin"&gt;Emily
Brandwin&lt;/a&gt;"from
comedian to Cia" and &lt;a href="http:%20//www.hackfest.ca/speaker/brad-haines-renderman"&gt;Brad
Haines&lt;/a&gt; with a
presentation entitled "They are doing what! with air traffic control ?.&lt;/p&gt;
&lt;p&gt;I discovered reportage as
&lt;a href="http:%20//en.wikipedia.org/wiki/Sneakers_%281992_film%29"&gt;sneakers&lt;/a&gt; and
some &lt;a href="http:%20//www.youtube.com/watch?%20V%20=%20v_SvO8exqhk?"&gt;BBC
broadcast&lt;/a&gt;, I
keep back a souvenir from the 3D printer and visited the &lt;a href="https:%20//www.csis.gc.ca/index%20-en.php"&gt;SCRS /
CSIS&lt;/a&gt;'s stand.&lt;/p&gt;
&lt;p&gt;I thank all the volunteer organizers, participants and partners. Here is
the
&lt;a href="http://www.hackfest.ca/wp-content/uploads/2014/11/Hackfest-2014-Communiqu%C3%A9-de-presse-v2.pdf"&gt;presspresse&lt;/a&gt;
which summarizes everything that happened on this hackfest. The
reception was outstanding, as part of the sumptuous and comfortable
Hotel Plazza since the great Canadian cold began to happen!Thank you to
patoff__, the organizing committee, for reviewing!&lt;/p&gt;
&lt;p&gt;'' Numbers: 40 people organize the hackfest, 600 people participated in
2014, 26 speakers, 40% of the experts in this event working in
cybersecurity, 26 teams compete during the capture of flag's game and
700 people attend the event on social networks.
&lt;a href="http://www.hackfest.ca/"&gt;Sources&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sources&lt;/strong&gt;- Website &lt;a href="htttp;%20//%20www.hackfest.ca"&gt;www.hackfest.ca&lt;/a&gt;-
&lt;a href="http:%20//www.hackfest.ca/en/schedule-2014"&gt;Schedule 2014&lt;/a&gt;- Press
2013&lt;a href="/affaires/techno/201311/07/01-4708386-hackfest-les-bons-pirates-informatiques-accostent-a-quebec.php"&gt;http://www.lapresse.ca/le-soleil&lt;/a&gt;-
&lt;a href="https:%20//wiki.gnome.org/Hackfests"&gt;World Calendar Hackfests&lt;/a&gt;-
&lt;a href="http://www.hackfest.ca/wp-content/uploads/2014/11/Hackfest-2014-Communiqu%C3%A9-de-presse-v2.pdf"&gt;Hackfest 2014 - Press
report&lt;/a&gt;-
Join the &lt;a href="http:%20//www.hackfest.ca/hackfest-community"&gt;community
Hackfest&lt;/a&gt;.-
&lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt;] Add telephony&lt;/p&gt;
&lt;p&gt;&lt;img alt="HackfestQuebec2014-byVDagrain.JPG" src="/public/HackfestQuebec2014-byVDagrain.JPG" title="HackfestQuebec2014-byVDagrain.JPG, November 2014" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;HACKFEST 2014, ville de Québec&lt;/p&gt;
&lt;p&gt;Entretien de Valerie Dagrain, équipe
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://valerie-dagrain.org/"&gt;Valérie&lt;/a&gt;, tu étais présente au Hackfest
qui s'est déroulé le 7-8 novembre 2014 à Québec. Peux-tu nous présenter
le contexte?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Chaque année la ville de Québec accueille le Hackfest, une rencontre sur
la cybersecurité. Voici les activités qui étaient au programme:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;des &lt;a href="http://www.hackfest.ca/?fp_type=conf2014"&gt;conférences&lt;/a&gt; sur les
    failles des systemes pour les corriger mais aussi parler de la
    protection des données personnelles et sur les actualités concernant
    la vie privée des citoyens:&lt;/li&gt;
&lt;li&gt;des projections de videos sur des reportages concernant le hacking
    ou des actualités sur la protection des données.&lt;/li&gt;
&lt;li&gt;des &lt;a href="http://www.hackfest.ca/hackfest-party-2014"&gt;ateliers&lt;/a&gt; de
    lockpicking, imprimante 3D.&lt;/li&gt;
&lt;li&gt;des &lt;a href="http://www.hackfest.ca/partenaires-2014"&gt;exposants&lt;/a&gt; en
    sécurité informatique.&lt;/li&gt;
&lt;li&gt;Le jeu de "Capture the flag": un jeu de 16H ou plus de 150 joueurs
    se sont affrontés par équipe afin de pénétrer dans des
    systèmes (préparés). 26 groupes concurrents s'affrontent,&lt;/li&gt;
&lt;li&gt;Des animations: bornes d'arcade, challenge lockpicking...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ces rencontres en cybersécurité existent dans d'autres pays, avec comme
point commun des conférences, des ateliers et des exposants pour
échanger sur les failles et l'actualité. Vous trouverez ici le
&lt;a href="https://wiki.gnome.org/Hackfests"&gt;calendrier mondial des hackfests&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quel est le contexte de votre participation?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Le projet &lt;a href="http://66.254.41.189"&gt;XiVO&lt;/a&gt; était présent au &lt;a href="/index.php?post/2012/11/08/Hacking-at-the-Hackfest"&gt;Hackfest de
2012&lt;/a&gt;. Cette année,
ma présence permettait de renouveler le soutien à ces 2 journées dédiées
à la cybersécurité.&lt;/p&gt;
&lt;p&gt;Je suis investie dans le domaine du Logiciel Libre depuis 2004 (des
&lt;a href="http://lea-linux.org/documentations/Annuaire:LUG_France"&gt;groupes utilisateurs
Linux&lt;/a&gt;) et
&lt;a href="http://www.hacknowledge.org/drupal/"&gt;hackerspace&lt;/a&gt; depuis 2009 (Quebec,
France et Allemagne) où j'ai crée des
&lt;a href="http://www.a-brest.net/article10201.html"&gt;ateliers&lt;/a&gt; sur la vie privée
et les données personnelles.&lt;/p&gt;
&lt;p&gt;Un membre de &lt;a href="http://www.linuq.org/"&gt;LinuQ Québec&lt;/a&gt; et de l'entreprise
&lt;a href="http://66.254.41.189"&gt;XiVO&lt;/a&gt; m'a alors informé du Hackfest: j'ai alors
proposé du bénévolat, en passant par l'IRC de l’événement, (serveur
freenode #hackfest_ca) pour aider à l'installation.&lt;/p&gt;
&lt;p&gt;L'accueil et l'ambiance était excellente. J'ai aidé à porter des
serveurs cisco et des câbles réseaux (capture de drapeau) pour que
d'autres groupes mettent en place l’accès à Internet dans l’Hôtel
Plazza. En échangeant avec l’équipe organisatrice j'ai appris la
création d'un hackerspace/fablab sur Québec et d'une rencontre à St Foy,
tous les 4eme jeudi de la fin du mois à ce sujet. J'ai pu également
parler du projet de &lt;a href="http://goteo.org/project/cle-facil"&gt;clé Facil&lt;/a&gt;
(distributions Libre sur clé usb) initié à Montréal et diffuser des
documents concernant d'autres &lt;a href="http://ehsm.eu/"&gt;conférences&lt;/a&gt; (EHSM-
Berlin) ou projets (&lt;a href="https://github.com/m-labs/ARTIQ"&gt;artiq&lt;/a&gt;) de hack
pour 2015.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quels sont les sujets de conférence que vous avez retenu?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Le hackfest 2014 accueillait &lt;a href="http://www.hackfest.ca/speaker/theo-de-raadt"&gt;Theo de
Raadt&lt;/a&gt; (leader sur le
projet OpenBSD), le témoignage sur la carrière de &lt;a href="http://www.hackfest.ca/speaker/emily-brandwin"&gt;Emily
Brandwin&lt;/a&gt;,"from comedian
to Cia" et de &lt;a href="http://www.hackfest.ca/speaker/brad-haines-renderman"&gt;Brad
Haines&lt;/a&gt; sur une
présentation intitulé "They are doing what! with air traffic control?.&lt;/p&gt;
&lt;p&gt;J'ai découvert des reportages-video
(&lt;a href="http://en.wikipedia.org/wiki/Sneakers_%281992_film%29"&gt;sneakers&lt;/a&gt;,
&lt;a href="http://www.youtube.com/watch?v=v_SvO8exqhk"&gt;BBC&lt;/a&gt;...), rapporté un
souvenir de l'atelier avec l'imprimante 3D et échangé sur le stand
sécurité informatique et centre de la sécurité des télécommunications
(&lt;a href="https://www.csis.gc.ca/index-en.php"&gt;SCRS/CSIS&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Je remercie tous les organisateurs bénévoles, participants et
partenaires pour les temps d’échange. Voici le &lt;a href="http://www.hackfest.ca/wp-content/uploads/2014/11/Hackfest-2014-Communiqu%C3%A9-de-presse-v2.pdf"&gt;communiqué de
presse&lt;/a&gt;
qu'ils ont édité et qui résume tout ce qui s'est passé sur ce hackfest.
L'accueil était exceptionnel, le cadre de l'Hotel Plaza somptueux et
confortable puisque le grand froid canadien commençait à arriver!Merci à
patoff__, du comité organisateur, pour la relecture!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Des chiffres: 40 personnes se retrouvent dans l'année pour organiser le
hackfest, plus de 600 personnes étaient présentes en 2014, 26
conférenciers, 40% des experts présents sont dans la cybersécurité, 26
équipes s'affrontent durant le war game et 700 personnes suivent cet
événement sur les réseaux sociaux (&lt;a href="htttp;//www.hackfest.ca"&gt;sources&lt;/a&gt;).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sources&lt;/strong&gt;- Le site de l’événement
&lt;a href="htttp;//www.hackfest.ca"&gt;www.hackfest.ca&lt;/a&gt;- &lt;a href="http://www.hackfest.ca/en/schedule-2014"&gt;Le programme
2014&lt;/a&gt;- Presse le Soleil de 2013
&lt;a href="/affaires/techno/201311/07/01-4708386-hackfest-les-bons-pirates-informatiques-accostent-a-quebec.php"&gt;http://www.lapresse.ca/le-soleil&lt;/a&gt;-
&lt;a href="https://wiki.gnome.org/Hackfests"&gt;Calendrier mondial des hackfests&lt;/a&gt;-
&lt;a href="http://www.hackfest.ca/wp-content/uploads/2014/11/Hackfest-2014-Communiqu%C3%A9-de-presse-v2.pdf"&gt;Hackfest 2014 - Communiqué de
presse&lt;/a&gt;-
Rejoindre la &lt;a href="http://www.hackfest.ca/hackfest-community"&gt;communauté du
Hackfest&lt;/a&gt;.-
&lt;a href="http://66.254.41.189"&gt;XiVO&lt;/a&gt;, téléphonie Libre&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>AstriCon 2014</title><link href="http://blog.xivo.io/astricon-2014.html" rel="alternate"></link><updated>2014-11-12T16:47:00-05:00</updated><author><name>vdagrain</name></author><id>tag:blog.xivo.io,2014-11-12:astricon-2014.html</id><summary type="html">&lt;p&gt;ASTRICON 2014, Las Vegas (version française plus bas)&lt;/p&gt;
&lt;p&gt;Interview with Sylvain Boily, &lt;a href="http://www.xivo.io/"&gt;XiVO&lt;/a&gt;'s founder&lt;/p&gt;
&lt;p&gt;&lt;img alt="lasvegasRS.jpg" src="/public/lasvegasRS.jpg" title="lasvegasRS.jpg, nov. 2014" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sylvain, you attended AstriCon this year. Can you give us an overview
of the atmosphere, the planning and people involved in the event?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;AstriCon is the annual conference for Asterisk users and developers.
It's organized by Digium in partnership with various partners and
exhibitors. The conference takes place over 3 days and welcomes
approximately 700 participants every year. The 2014 edition was held in
Las Vegas.&lt;/p&gt;
&lt;p&gt;AstriCon is comprised of a workday for developers (Astridevcon), various
conferences, and partner exhibitions.&lt;/p&gt;
&lt;p&gt;Astridevcon, which takes place a day before the presentations, allows
people like external developers, contributors and other interested
parties to meet and discuss about the next version of Asterisk.For
example: During the day I spoke to suggest that Docker should be used to
help in the process of automated testing, also known as Asterisk Test
Suite. This eventually led to my publication of a repository on
&lt;a href="https://github.com/sboily/asterisk-testsuite"&gt;https://github.com/sboily/asterisk-testsuite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Finally, the exhibition hall allows partners to promote their business
solutions based around Asterisk and the telephony field.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Which opportunities did you have to present work done on XiVO?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;AstriCon brings together developers / users / companies from around the
world who come to follow projects developed around Asterisk. Being
present at this conference represents an opportunity to present
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt; to other actors in the telephony
field on an international level.&lt;/p&gt;
&lt;p&gt;There are also numerous business opportunities. Among others, we have
the possibility of recruiting new partners to distribute
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt;. In 2011, we met with the company
BGM IT that is now an Avencall partner and distributor of the
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt; solution.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Can you share with us what you learned during the main presentations
?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Many topics have caught my attention. First was the excellent keynote
from Russell Bryant who talked about Openstack and Asterisk, and
opportunities on how the Asterisk community can move forward with
Openstack. This keynote obviously pleased me because
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt; has been moving in the same
direction for over 2 years already and we actively follow Openstack.&lt;/p&gt;
&lt;p&gt;Another interesting topic for me was ARI (Asterisk REST Interface) that
allows you to build apps based on RESTful APIs in Asterisk. Paul
Belanger, the speaker, showed us that we could use ARI instead of
app_queue to manage queues.&lt;/p&gt;
&lt;p&gt;In the same train of thought, Matt Jordan also talked about the idea of
removing app_voicemail. It is clear that for
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt;, the direction taken by Asterisk
makes sense and is sign of an exciting future as we will be able to
contribute our own expertise in these areas, but it also allows us to
continue with our vision of &lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt; as a
modular and flexible platform while using Asterisk as a powerful tool
for the lower layers.&lt;/p&gt;
&lt;p&gt;The last thing I learned was during a conference on a competing project,
FreePBX. I realized that this project had taken an important place in
the community thanks to its modular design. Our latest work on our
presence and contacts service (XiVO-dird) is also adopting a modular
approach that will go even further! So it's a great time to contribute
to XiVO.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Which presentations did you talk about the most with the XiVO team and
what should we retain from this year's Astricon for the future ?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I mainly talked about ARI and OpenStack. ARI will be the future for
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt; when we migrate towards Asterisk 13
and our most active discussions within the development team turn around
topics related to OpenStack / Docker.&lt;/p&gt;
&lt;p&gt;What we should retain this year: Asterisk continues on its momentum
started two years ago to orient itself as a real toolkit for simplifying
interactions and development in the telephony field. This topic is
important for us and confirms our choice of Asterisk as a platform for
the future of &lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;ARI is a subject that will come back during our discussions in 2015, but
we will also discuss PaaS, the cloud, Openstack, scalability and
elasticity in &lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt;.Also, I think the
Asterisk community has every reason to look more closely at the
ecosystem around Docker. As a side note, Matt Jordan (lead Asterisk
developer) has aleady started talking about it
(&lt;a href="https://twitter.com/mattcjordan/status/530858516563902464"&gt;1&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Finally, I look forward to attending the next AstriCon while keeping in
mind that &lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt; should be more present
for this major event in the Asterisk community. I thank Paul for having
shared a part of the AstriCon
(&lt;a href="https://twitter.com/pabelanger/status/525968878279860225"&gt;2&lt;/a&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1) &lt;a href="https://twitter.com/mattcjordan/status/530858516563902464"&gt;https://twitter.com/mattcjordan/status/530858516563902464&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(2) &lt;a href="https://twitter.com/pabelanger/status/525968878279860225"&gt;https://twitter.com/pabelanger/status/525968878279860225&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;__Some links:__&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://http://www.xivo.io/"&gt;http://http://www.xivo.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io"&gt;http://documentation.xivo.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.xivo.io"&gt;http://projects.xivo.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.org/xivo-pbx"&gt;http://github.org/xivo-pbx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://asterisk.org"&gt;http://asterisk.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.asterisk.org"&gt;http://wiki.asterisk.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openstack.org"&gt;http://openstack.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docker.com"&gt;http://docker.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="astridevconRS.jpg" src="/public/astridevconRS.jpg" title="astridevconRS.jpg, nov. 2014" /&gt;&lt;/p&gt;
&lt;p&gt;ASTRICON 2014, Las VegasInterview de Sylvain Boily, Fondateur de
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sylvain, tu étais présent à l'AstriCon. Peux-tu nous présenter
l'ambiance, le déroulement et les personnes qui participent à cet
événement?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;L'Astricon est la conférence annuelle des utilisateurs et développeurs
Asterisk. Elle est organisée par Digium avec différents partenaires,
également exposants.L'Astricon se déroule sur 3 journées et compte
environ 700 participants à chaque année. L'édition 2014 s'est déroulée à
Las Vegas.&lt;/p&gt;
&lt;p&gt;L'Astricon regroupe la journée de travail des développeurs
(Astridevcon), les conférences thématiques et l'exposition des
partenaires.&lt;/p&gt;
&lt;p&gt;L'Astridevcon, qui a lieu une journée avant, permet entre autres aux
développeurs, contributeurs et ceux qui le souhaitent de discuter de la
prochaine version d'Asterisk.Par exemple : je suis intervenu pour
proposer que Docker soit utilisé pour aider dans le processus des tests
automatiques appelé Asterisk Test Suite.Cela a finalement donné
naissance à un dépôt sur
&lt;a href="https://github.com/sboily/asterisk-testsuite"&gt;https://github.com/sboily/asterisk-testsuite.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pour finir, le hall d'exposition permet aux partenaires de faire la
promotion de leurs solutions commerciales autour d'Asterisk et de la
téléphonie.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quelles opportunités tu as eu pour présenter les développements sur
XiVO?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;L'Astricon rassemble des développeurs/utilisateurs/entreprises venus du
monde entier suivre les projets autour d'Asterisk et être présent à
cette conférence représente une opportunité de présenter
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt; aux acteurs de la téléphonie à
l'international.&lt;/p&gt;
&lt;p&gt;Les opportunités sont nombreuses avec entre autre la possibilité de
recruter de nouveaux partenaires pour distribuer
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt;. En 2011, nous avions rencontré la
compagnie BGM informatique aujourd'hui partenaire Avencall et
distributeur de la solution &lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Peux-tu nous partager les présentations principales?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Plusieurs sujets ont retenu mon attention, le premier a été la très
bonne keynote de Russell Bryant sur Openstack et Asterisk ainsi que les
opportunités de la communauté Asterisk pour aller de l'avant avec
Openstack.Cette keynote m'a évidement fait plaisir car
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt; est depuis déjà plus de 2 ans
orienté dans cette direction et nous suivons activement Openstack.&lt;/p&gt;
&lt;p&gt;Une autre thématique pour moi intéressante était sur ARI (Asterisk REST
Interface) qui permet de construire autour d'Asterisk des applications
basées sur les interfaces REST dans Asterisk. Une très bonne
présentation de Paul Belanger montrant que nous pouvions utiliser ARI à
la place de app_queue pour gérer les files d'attente.&lt;/p&gt;
&lt;p&gt;Matt Jordan a également présenté dans la même idée la suppression de
app_voicemail. Il est clair que pour
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt;, la voie prise par Asterisk est
parfaite et nous réserve un avenir très intéressant puisque nous serons
capable d'apporter notre expertise sur ces sujets mais aussi de
continuer dans notre idée que &lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt; sera
une plateforme modulaire et élastique tout en utilisant Asterisk comme
un outil performant sur les couches basses.&lt;/p&gt;
&lt;p&gt;Le dernier point que j'ai retenu, a été en assistant à une conférence
sur un projet concurrent au notre, FreePBX. Je me suis aperçu que ce
projet avait pris une place importante dans la communauté grâce à son
aspect modulaire. Notre dernier développement le serveur de
contacts/présence (xivo-dird) est justement orienté dans ce sens et ira
même encore plus loin ! Donc n'hésitez pas à contribuer aussi dans XiVO.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quelle présentation as tu le plus partagé avec l’équipe XiVO et qu'il
faut retenir pour les années à venir?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Principalement ARI et openstack. ARI est l'avenir pour XiVO quand nous
allons passer sur Asterisk 13 et openstack/ Docker sont les sujets les
plus présents dans nos discussions avec l'équipe de développement.&lt;/p&gt;
&lt;p&gt;Ce que je retiens de cet Astricon : Asterisk poursuit sur sa lancée
commencée il y a 2 ans orienté comme une véritable boite à outil pour
simplifier les développements et interactions dans le monde de la
téléphonie. Ce sujet est majeur pour nous et nous conforte dans notre
choix qu'Asterisk est une véritable plateforme d'avenir pour
&lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;ARI est un sujet qui va beaucoup revenir dans nos discussions en 2015,
mais aussi le PaaS, le cloud, Openstack, la modularité et l'élasticité
dans &lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt;. Pour finir je pense que la
communauté Asterisk a tout intérêt à regarder de plus près le monde de
Docker, d'ailleurs Matt Jordan (lead developer Asterisk) a commencé à en
parler(&lt;a href="https://twitter.com/mattcjordan/status/530858516563902464"&gt;1&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Finalement j'ai hâte de retourner aux prochains Astricon en ayant à
l'esprit que &lt;a href="http://documentation.xivo.io"&gt;XiVO&lt;/a&gt; sera plus présent pour
cet événement majeur de la communauté Asterisk. Merci à Paul de nous
avoir partagé une partie de l'Astricon
(&lt;a href="https://twitter.com/pabelanger/status/525968878279860225"&gt;2&lt;/a&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1) &lt;a href="https://twitter.com/mattcjordan/status/530858516563902464"&gt;https://twitter.com/mattcjordan/status/530858516563902464&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(2) &lt;a href="https://twitter.com/pabelanger/status/525968878279860225"&gt;https://twitter.com/pabelanger/status/525968878279860225&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Quelques liens :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io"&gt;http://documentation.xivo.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.xivo.io"&gt;http://projects.xivo.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.org/xivo-pbx"&gt;http://github.org/xivo-pbx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://asterisk.org"&gt;http://asterisk.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.asterisk.org"&gt;http://wiki.asterisk.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openstack.org"&gt;http://openstack.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docker.com"&gt;http://docker.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Images jointes :&lt;/strong&gt;- Salle durant l'Astridevcon, Las vegas, 10.2014- La
Tour Eiffel, Las vegas, 10.2014&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Metrics in XUC</title><link href="http://blog.xivo.io/metrics-in-xuc.html" rel="alternate"></link><updated>2014-11-11T17:45:00-05:00</updated><author><name>jhlavacek</name></author><id>tag:blog.xivo.io,2014-11-11:metrics-in-xuc.html</id><summary type="html">&lt;p&gt;We use Metrics in two contexts: contact centre statistics management and
xuc health supervision. We created two independent registries to
separate statistics data and technical data.&lt;/p&gt;
&lt;p&gt;Metrics integrates the ability to report periodically data to the
logfile, or on demand via http.&lt;/p&gt;
&lt;h3&gt;JSON representation via HTTP&lt;/h3&gt;
&lt;h4&gt;JVM statistics&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#curl -XGET &amp;#39;http://127.0.0.1:9000/stats/admin/metrics?name=tech&amp;#39;@@
{
  &amp;quot;version&amp;quot; : &amp;quot;3.0.0&amp;quot;,
  &amp;quot;gauges&amp;quot; : {
    &amp;quot;blocked.count&amp;quot; : {
      &amp;quot;value&amp;quot; : 0
    },
    &amp;quot;count&amp;quot; : {
      &amp;quot;value&amp;quot; : 56
    },
    &amp;quot;daemon.count&amp;quot; : {
      &amp;quot;value&amp;quot; : 17
    },
    &amp;quot;deadlock.count&amp;quot; : {
      &amp;quot;value&amp;quot; : 0
    },
    &amp;quot;deadlocks&amp;quot; : {
      &amp;quot;value&amp;quot; : [ ]
    },
    &amp;quot;heap.committed&amp;quot; : {
      &amp;quot;value&amp;quot; : 1020264448
    },
    &amp;quot;heap.init&amp;quot; : {
      &amp;quot;value&amp;quot; : 1073741824
    },
    &amp;quot;heap.max&amp;quot; : {
      &amp;quot;value&amp;quot; : 1020264448
    },
    &amp;quot;heap.usage&amp;quot; : {
      &amp;quot;value&amp;quot; : 0.4769269545301259
    },
    &amp;quot;heap.used&amp;quot; : {
      &amp;quot;value&amp;quot; : 486591616
    },
    ...
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Call-centre statistics&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#curl -XGET &amp;#39;http://127.0.0.1:9000/stats/admin/metrics?name=Stats&amp;#39;
{
  &amp;quot;version&amp;quot; : &amp;quot;3.0.0&amp;quot;,
  &amp;quot;gauges&amp;quot; : {
    &amp;quot;3000-TotalNumberCallsAbandonned-gauge&amp;quot; : {
      &amp;quot;value&amp;quot; : 2.0
    },
    &amp;quot;3000-TotalNumberCallsAbandonnedAfter15-gauge&amp;quot; : {
      &amp;quot;value&amp;quot; : 5.0
    },
    &amp;quot;3000-TotalNumberCallsAnswered-gauge&amp;quot; : {
      &amp;quot;value&amp;quot; : 0.0
    },
    &amp;quot;3000-TotalNumberCallsAnsweredBefore15-gauge&amp;quot; : {
      &amp;quot;value&amp;quot; : 0.0
    },
    &amp;quot;3000-TotalNumberCallsClosed-gauge&amp;quot; : {
      &amp;quot;value&amp;quot; : 1.0
    },
    &amp;quot;3000-TotalNumberCallsEntered-gauge&amp;quot; : {
      &amp;quot;value&amp;quot; : 1.0
    }
  },
  &amp;quot;counters&amp;quot; : { },
  &amp;quot;histograms&amp;quot; : {
    &amp;quot;3000-PercentageAbandonnedAfter15-window&amp;quot; : {
      &amp;quot;count&amp;quot; : 1,
      &amp;quot;max&amp;quot; : 1,
      &amp;quot;mean&amp;quot; : 1.0,
      &amp;quot;min&amp;quot; : 1,
      &amp;quot;p50&amp;quot; : 1.0,
      &amp;quot;p75&amp;quot; : 1.0,
      &amp;quot;p95&amp;quot; : 1.0,
      &amp;quot;p98&amp;quot; : 1.0,
      &amp;quot;p99&amp;quot; : 1.0,
      &amp;quot;p999&amp;quot; : 1.0,
      &amp;quot;stddev&amp;quot; : 0.0
    },
    ...
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Statistics in log file&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2014-11-12 11:49:30,764 - [info] application - type=GAUGE, name=3000-PercentageAbandonnedAfter15-gauge, value=0.0
2014-11-12 11:49:30,765 - [info] application - type=GAUGE, name=3000-PercentageAnsweredBefore15-gauge, value=0.0
2014-11-12 11:49:30,765 - [info] application - type=GAUGE, name=3000-TotalNumberCallsAbandonned-gauge, value=1.0
2014-11-12 11:49:30,765 - [info] application - type=GAUGE, name=3000-TotalNumberCallsAbandonnedAfter15-gauge, value=0.0
2014-11-12 11:49:30,765 - [info] application - type=GAUGE, name=3000-TotalNumberCallsAnswered-gauge, value=0.0
2014-11-12 11:49:30,766 - [info] application - type=GAUGE, name=3000-TotalNumberCallsAnsweredBefore15-gauge, value=0.0
2014-11-12 11:49:30,766 - [info] application - type=GAUGE, name=3000-TotalNumberCallsClosed-gauge, value=1.0
2014-11-12 11:49:30,766 - [info] application - type=GAUGE, name=3000-TotalNumberCallsEntered-gauge, value=1.0
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Links&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/groups/xuc" title="XUC sources"&gt;XUC sources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://xuc.readthedocs.org/en/latest/" title="XUC documentation"&gt;XUC
    documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dropwizard.github.io/metrics/3.1.0/" title="Metrics"&gt;Metrics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>Managing agent using Xuc CCManager</title><link href="http://blog.xivo.io/managing-agent-using-xuc-ccmanager.html" rel="alternate"></link><updated>2014-11-10T08:18:00-05:00</updated><author><name>jylebleu</name></author><id>tag:blog.xivo.io,2014-11-10:managing-agent-using-xuc-ccmanager.html</id><summary type="html">&lt;p&gt;&lt;img alt="Selection_025.png" src="/public/xuc/xucagent.png?200X50" title="Selection_025.png, nov. 2014" /&gt;&lt;/p&gt;
&lt;p&gt;You may now user ccmanager to manage your #xivo contact center agents.&lt;/p&gt;
&lt;p&gt;In addition to drag and drop in ccmanager main window, agents can be
easily added in a queue with a specific penalty, penalty can be changed
for any queue, and the agent can be removed from a queue.&lt;/p&gt;
&lt;p&gt;Just click on the little pen on the main screen agent box, and the agent
configuration windows pops up.&lt;/p&gt;
&lt;p&gt;Xuc is available on &lt;a href="https://gitlab.com/groups/xuc" title="gitlab"&gt;gitlab&lt;/a&gt; doc
on &lt;a href="http://xuc.readthedocs.org/"&gt;read the docs&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Intervention de Richard M. Stallman à l'Université de Concordia à Montréal sur les Logiciels Libres et Libertés</title><link href="http://blog.xivo.io/intervention-de-richard-m-stallman-a-luniversite-de-concordia-a-montreal-sur-les-logiciels-libres-et-libertes.html" rel="alternate"></link><updated>2014-10-29T15:43:00-04:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2014-10-29:intervention-de-richard-m-stallman-a-luniversite-de-concordia-a-montreal-sur-les-logiciels-libres-et-libertes.html</id><summary type="html">&lt;p&gt;&lt;em&gt;English version available towards the end of the article&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;2 personnes du projet &lt;a href="http://documentation.xivo.io" title="XiVO"&gt;XiVO&lt;/a&gt;
(téléphonie libre) témoignent :&lt;/p&gt;
&lt;h3&gt;Partage de Valérie Dagrain&lt;/h3&gt;
&lt;p&gt;Cette conférence de R. M. Stallman intitulée "Logiciel Libre et vos
libertés" s'est déroulée à l'Université de Concordia. R. M. Stallman qui
s'est vu remettre un titre honorifique de la part d'un responsable de
l'Université, pour féliciter ses actions et ses engagements. Plus de 100
étudiants anglophones des universités sur Montréal telles que Concordia
et McGill étaient présents ainsi que des enseignants en informatique et
entrepreneurs du Libre.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ayant suivi plusieurs interventions de R. M. Stallman, je découvre
    que ses interventions débutent désormais par un refus d’apparaître
    sur les réseaux sociaux fermés tels que Facebook et citait plutôt
    les licences Creative Commons.&lt;/li&gt;
&lt;li&gt;Un temps est consacré à présenter le Logiciel Libre et les 4
    libertés, Unix et le système GNU/Linux puis la &lt;em&gt;Free Software
    Foundation&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;R. M. Stallman soutient la nécessité d'utiliser des logiciels libres
    comme seule alternative aux logiciels propriétaires qu'il dénonce
    être des logiciels malveillants (&lt;em&gt;malware&lt;/em&gt;). Les utilisateurs
    doivent contrôler leurs systèmes et aller de plus en plus vers des
    composants Libres. Le Libre était alors présenté comme la seule
    solution technique et éthique pour lutter contre les failles de
    sécurité qu'apportent les logiciels de Micosoft, Apple, Google
    Play, Amazon... et contrôler son système.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;R. M. S avançait dans ses précédentes présentations que les logiciels
propriétaires étaient devenus privateurs. Désormais il met en garde de
leur rôle de "&lt;em&gt;malware&lt;/em&gt;", de "&lt;em&gt;spyware&lt;/em&gt;" et de menottes numériques (DRM)
qui verrouillent des accès et nous entraînent dans une société
orwellienne sous contrôle. Du côté des firmes propriétaires, des accès
récurrents s'opèrent sur certains de nos appareils (ordinateur,
téléphone...) sans accord de l'utilisateur et des actions peuvent être
faites sur nos systèmes. Les risques de censure sont possibles tout
comme des mauvais usages du fait de notre géolocalisation (GPS).&lt;/p&gt;
&lt;p&gt;Face à cela R. M. S. encourage le partage et met en garde contre le
discours de propagande visant à associer une personne qui partage avec
les pirates. Suite à la révélation par E. Snowden en 2013, sur les
programmes américains de surveillance de masse, R. M. Stallman invite à
applaudir le courage de cet ancien employé qui était mandaté par la NSA.
Un ban d'honneur a ainsi été fait en son nom !"Nous devons contrôler nos
systèmes pour les améliorer. Il faut enseigner le "&lt;em&gt;reverse
engineering&lt;/em&gt;" dans les écoles !" En conclusion R. M. Stallman appuie
l'usage des logiciels libres, notamment en milieu scolaire. Fabian
Rodriguez, président de FACIL (Association pour l'appropriation
collective de l'Informatique Libre) et promoteur du Libre auprès d'une
commission scolaire à Montréal, a su partager sa motivation et son
engagement dans ce sens durant les échanges.&lt;/p&gt;
&lt;p&gt;La video sera accessible depuis le site de Concordia et d'autres sites
partageant les ressources Libres.&lt;/p&gt;
&lt;p&gt;Sources :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.xivo.io"&gt;http://blog.xivo.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fr.wikipedia.org/wiki/Logiciel_libre"&gt;http://fr.wikipedia.org/wiki/Logiciel_libre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fr.wikipedia.org/wiki/Free_Software_Foundation"&gt;http://fr.wikipedia.org/wiki/Free_Software_Foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.programmez.com/actualites/windows-est-un-malware-selon-richard-stallman-21259"&gt;http://www.programmez.com/actualites/windows-est-un-malware-selon-richard-stallman-21259&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Digital_rights_management"&gt;http://en.wikipedia.org/wiki/Digital_rights_management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fabianrodriguez.com/blog/profil"&gt;http://fabianrodriguez.com/blog/profil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://facil.qc.ca"&gt;http://facil.qc.ca&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Partage de Gregory Eric Sanderson&lt;/h3&gt;
&lt;p&gt;J'ai rencontré R. M. S. pour la première fois en 2010 lors du "Salon du
Logiciel Libre du Québec". 4 ans plus tard, malgré le changement du
discours, le message principal reste le même.&lt;/p&gt;
&lt;p&gt;Pendant la première partie du discours, je me suis rappelé que les
concepts soutenant le Logiciel Libre sont tout d'abord fondés sur des
questions morales et éthiques. Les 4 libertés (la liberté d'utiliser,
étudier, modifier et redistribuer) permettent d'assurer nos droits
humains fondamentaux dans notre utilisation de logiciels.&lt;/p&gt;
&lt;p&gt;R. M. S. mettait souvent l'emphase sur la différence entre le contrôle
exercé par un utilisateur sur un logiciel &lt;em&gt;vs.&lt;/em&gt; le contrôle du logiciel
sur un utilisateur. Prenons la liseuse électronique de Amazon, le
Kindle, en exemple. Puisqu'un utilisateur n'a pas de contrôle sur le
logiciel utilisé sur un Kindle, Amazon a pu supprimer toutes les copies
du livre 1984. Ironique, n'est-ce pas ? Un deuxième exemple : Les
architectures SaaS ("&lt;em&gt;Software as a Service&lt;/em&gt;". Autrement dit, du
logiciel comme service. R. M. S s'est amusé en substituant l'acronyme
pour "&lt;em&gt;Service as a Software Substitute&lt;/em&gt;", ou encore "Le service comme
un substitut au logiciel") Du SaaS ne peut être catégorisé comme un
logiciel libre car il n'existe pas de moyen de vérifier ce que le
service fait avec les données qu'on lui envoie. En d'autres mots, le
service est capable d'exercer un contrôle sur l'utilisateur.&lt;/p&gt;
&lt;p&gt;La différence entre les logiciels libres et "&lt;em&gt;Open Source&lt;/em&gt;" était aussi
un autre sujet chaud. R. M. S. n'a pas hésité à critiquer les militants
de l&lt;em&gt;'Open Source&lt;/em&gt; comme des gens sans considérations éthiques. Des gens
qui préfèrent des solutions pragmatiques et faciles. Par exemple, dans
le noyau Linux nous retrouvons des blocs de "&lt;em&gt;firmware&lt;/em&gt;". Ces blocs ne
contiennent pas de code source et sont distribués avec le noyau, ce qui
implique qu'ils peuvent intervenir à l'encontre des libertés de
l'utilisateur, parfois même sans qu'il le sache.&lt;/p&gt;
&lt;p&gt;En conclusion, cette conférence m'a rappelé que même si les programmeurs
comme moi ont la chance de créer plein de logiciels grâce au logiciel
libre, les implications morales et éthiques restent encore pertinentes
aujourd'hui.&lt;/p&gt;
&lt;h3&gt;Gregory Eric Sanderson's Point of View&lt;/h3&gt;
&lt;p&gt;I saw R.M.S for the first time in 2010 for the "Salon du Logiciel Libre
du Québec". 4 years later, although the words have changed, but the core
message has stayed the same.&lt;/p&gt;
&lt;p&gt;During the first part, I was reminded that the concepts behind Free
Software are foremost about moral and ethical considerations. The four
liberties (i.e. the liberty to use, study, modify and redistribute) help
in establishing human rights when using software, no matter where.&lt;/p&gt;
&lt;p&gt;R.M.S often emphasised the difference between a user's control over a
program vs. the control of a program over its user. Let's take Amazon's
e-reader, the Kindle, as an example: Since a user does not have control
over the software on the Kindle, Amazon was able to delete everyone's
copy of 1984, therefore exerting control on what the user was allowed to
read. Ironic, isn't it? Another example given was Software as a Service.
(or, as R.M.S put it, Service as a Software Substitute) SaaS cannot be
considered Free Software because there is no feasible way of
ascertaining what the service is doing with the data that we send.
Therefore, it can exert control over the user.&lt;/p&gt;
&lt;p&gt;Another hot topic was the difference between Free Software and Open
Source. R.M.S did not hestitate to criticize Open Source advocates as
people who did not care about the ethical implications, who preferred
pragmatic and easy solutions to problems. An example of this were the
firmware blobs in the Linux Kernel. Since these blobs do not contain any
source code and are distributed alongside the kernel, they jeopardize a
user's freedoms, often without the user even knowing about it.&lt;/p&gt;
&lt;p&gt;Over all, this conference was a reminder that even though programmers
like myself get to create all sorts of programs thanks to Free Software,
the moral and ethical considerations behind the movement still remain
relevant today.&lt;/p&gt;
&lt;h3&gt;Photos&lt;/h3&gt;
&lt;p&gt;&lt;img alt="DSCF4499.JPG" src="/public/rms/DSCF4499.JPG" title="DSCF4499.JPG, Oct 2014" /&gt;&lt;img alt="DSCF4513.JPG" src="/public/rms/DSCF4513.JPG" title="DSCF4513.JPG, Oct 2014" /&gt;&lt;img alt="DSCF4515.JPG" src="/public/rms/DSCF4515.JPG" title="DSCF4515.JPG, Oct 2014" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint Review 14.20</title><link href="http://blog.xivo.io/sprint-review-1420.html" rel="alternate"></link><updated>2014-10-24T12:57:00-04:00</updated><author><name>pcadotte</name></author><id>tag:blog.xivo.io,2014-10-24:sprint-review-1420.html</id><summary type="html">&lt;p&gt;Here are a few links explaining what we are going to ship in XiVO 14.20:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.xivo.io/versions/211" title="https://projects.xivo.io/versions/211"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;New features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support for the SPA122 gateway (available in testing at the moment)&lt;/li&gt;
&lt;li&gt;Asterisk 11.13.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also fixed many bugs in the switchboard:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a crash&lt;/li&gt;
&lt;li&gt;some ergonomic improvements when handling calls&lt;/li&gt;
&lt;li&gt;some weird caller id behavior when transferring calls from the
    switchboard&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Work of interest:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Function key migration towards our new model keeps going forward&lt;/li&gt;
&lt;li&gt;A first working development version of
    &lt;a href="/index.php?post/2014/09/26/XiVO-s-new-directory-server"&gt;xivo-dird&lt;/a&gt;
    has been completed, but is not yet integrated into XiVO.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint Review 14.19</title><link href="http://blog.xivo.io/sprint-review-1419.html" rel="alternate"></link><updated>2014-10-10T12:31:00-04:00</updated><author><name>jpgelinas</name></author><id>tag:blog.xivo.io,2014-10-10:sprint-review-1419.html</id><summary type="html">&lt;p&gt;Here are a few links explaining what we are going to ship in XiVO 14.19:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.xivo.io/versions/210" title="https://projects.xivo.io/versions/210"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.io/dev/administration/ivr/ivr.html" title="http://documentation.xivo.io/dev/administration/ivr/ivr.html"&gt;IVR
    documentation&lt;/a&gt;
    to find out how to set up an Interactive voice response with XiVO&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO's new directory server</title><link href="http://blog.xivo.io/xivos-new-directory-server.html" rel="alternate"></link><updated>2014-09-26T15:14:00-04:00</updated><author><name>pcadotte</name></author><id>tag:blog.xivo.io,2014-09-26:xivos-new-directory-server.html</id><summary type="html">&lt;p&gt;Some of you may know that a new version of the &lt;a href="/public/xivo-client/Contacts.jpg" title="XiVO client"&gt;XiVO
client&lt;/a&gt; is being worked
on at the moment. The newlook and feel require some work behind the
scenes to merge all kindof contacts a XiVO user might have into a single
source of information.&lt;/p&gt;
&lt;p&gt;What does all this mean ? A personal contact, an entry from an LDAP
server or another XiVO usershould all be available to the user as one
single list of contacts, even if some operations are not available on
all kinds of entries.&lt;/p&gt;
&lt;p&gt;We already had a directory xlet that merged XiVO users and remote
directoryentries into a single list. This xlet is used by the
switchboard profile.The directory xlet does most of the heavy lifting of
merging the different contactlists on the client side. This solution is
not ideal for the future of XiVO as we wouldlike to be able to develop a
mobile or web-based version of the client without theburden of rewriting
the same logic.&lt;/p&gt;
&lt;p&gt;The first step of our work on this new client is to move this directory
logicback on the server side. To do so, we are creating a new directory
service, namedxivo-dird, that will be responsible of handling all
queries made to all configured directory sources ona XiVO.&lt;/p&gt;
&lt;p&gt;This new service will offer a public REST interface. This means that
custom client-side applicationswill be able to integrate the services
provided by xivo-dird easily. We are also making this newservice
runnable without a complete XiVO ecosystem. It will be possible to
installxivo-dird on a dedicated server or in a container. The nature of
the work doneon xivo-dird will also make it easy to run the service in a
distributed manner. Withsome configuration, an administrator will be
able to have many xivo-dird servers running behinda load balancer so
that it may be used by many XiVOs simultaneously. For example:Avencall
has one xivo per office but could use the same xivo-dird proxy for all
offices.&lt;/p&gt;
&lt;p&gt;&lt;img alt="archi-xivo-dird.svg" src="/public/architecture/archi-xivo-dird.svg" title="archi-xivo-dird.svg, sept. 2014" /&gt;&lt;/p&gt;
&lt;h3&gt;Architecture&lt;/h3&gt;
&lt;p&gt;We are also designing xivo-dird for extensibility and we are trying to
makeplugins as easy as possible to create, making it easier for the
community to contribute.&lt;/p&gt;
&lt;h4&gt;Plugins&lt;/h4&gt;
&lt;p&gt;Currently planned extension points include:&lt;/p&gt;
&lt;h5&gt;Backends&lt;/h5&gt;
&lt;p&gt;Backends are plugins that are used to query directory sources. This is
where we find the logicfor retrieving data from a specific kind of
technology. Backends include, but arenot limited to, ldap, csv,
xivo-directory (the internal directory of a
XiVO),xivo-personal-directory (user's personal contact).&lt;/p&gt;
&lt;h5&gt;HTTP views&lt;/h5&gt;
&lt;p&gt;HTTP views are different URLs that are exposed by the xivo-dird server.
At themoment we know that we will have a json view that will be used by
other XiVOservices to retrieve lookup results. Other views will be added
to support otherneeds. Phones are a good example of consumers that
require a customized view.Adding support for a new brand of phone to
xivo-dird will be a matter of addingthe HTTP view plugin that formats
the lookup results in a way that the phoneunderstands.&lt;/p&gt;
&lt;h4&gt;Core&lt;/h4&gt;
&lt;p&gt;The core of the application is responsible for loading all of the
plugins.We will probably use a third party library for this job. We have
a proof ofconcept using
&lt;a href="http://stevedore.readthedocs.org/en/latest/" title="stevedore"&gt;stevedore&lt;/a&gt;at
the moment. Concurrency is also managed by the core.&lt;/p&gt;
&lt;p&gt;This kind of architecture will become the reference for other XiVO
services. Having modular servicesthat can be executed independently from
each other will allow us scale therequired parts of XiVO when needed.&lt;/p&gt;
&lt;p&gt;You can look at the &lt;a href="https://github.com/xivo-pbx/xivo-dird" title="github repository"&gt;github
repository&lt;/a&gt;to
view the source code and follow our work. Note that the master branch
does not include thiswork yet. The code in other branches are proof of
concepts used to confirm that our architecturecould handle the kind of
load we were aiming for and that our modular architecture could
beachieved but this code is not meant for production and will be
replaced once we write theproduction version.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Sprint review 14.18</title><link href="http://blog.xivo.io/sprint-review-1418.html" rel="alternate"></link><updated>2014-09-26T12:55:00-04:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2014-09-26:sprint-review-1418.html</id><summary type="html">&lt;p&gt;Here are a few links explaining what we are going to ship in XiVO 14.18:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.xivo.io/versions/209" title="https://projects.xivo.io/versions/209"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.fr/dev/administration/cli_tools/cli_tools.html#xivo-dist" title="http://documentation.xivo.fr/dev/administration/cli_tools/cli_tools.html#xivo-dist"&gt;xivo-dist&lt;/a&gt;
    to choose the version of XiVO before an upgrade&lt;/li&gt;
&lt;li&gt;&lt;a href="http://documentation.xivo.fr/dev/upgrade/archives.html#upgrade-from-an-older-archive-version-to-a-newer-archive-version" title="http://documentation.xivo.fr/dev/upgrade/archives.html#upgrade-from-an-older-archive-version-to-a-newer-archive-version"&gt;Procedure before
    upgrade&lt;/a&gt;
    to explain how to choose the version when xivo-dist is not available&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>Update from XiVO 13.20</title><link href="http://blog.xivo.io/update-from-xivo-1320.html" rel="alternate"></link><updated>2013-10-21T17:01:00-04:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2013-10-21:update-from-xivo-1320.html</id><summary type="html">&lt;p&gt;It's been a while since we gave any updates, but we've been quite
active.&lt;/p&gt;
&lt;p&gt;We are currently writing a REST API to configure XiVO, giving access to
asimplified set of the Web interface's controls and replacing thecurrent
Web services. A few examples of what can be done with this API
includelisting users, lines, extensions, devices, voicemails, creating
users, givingthem a SIP line and an extension. The documentation of the
API is available
&lt;a href="http://documentation.xivo.fr/dev/api_sdk/rest_api/1.1/api-1.1.html" title="API documentation"&gt;online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The REST API offers one new feature that is not possible via the Web
interface:associating multiple users to a single SIP line. The main use
case is for multipleusers sharing the same physical phone. They can be
called using the same ordifferent extensions.&lt;/p&gt;
&lt;p&gt;The next step to improve the rest api would be to associate a device to
a user,which can currently only be done via the web interface.
unfortunately, thisrequires cleaning and rewriting in python a pretty
big bunch of code fromthe php web interface, mainly because of the
handling of programmablefunction keys, so we are taking the time to do
it right.&lt;/p&gt;
&lt;p&gt;This development has three consequences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First, we are cleaning the storage systems for users, lines, devices,
etc., which means changing the database schema and removing useless data
caches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Second, we are developing a Python interface to configure XiVO, which
our REST API uses, and which eventually third-party Python scripts will
be able to use, once it is documented.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Third, we're pushing all configuration events into a software bus
(RabbitMQ), so that XiVO components are aware of configuration changes,
and eventually third-party programs may be aware of them as well. Again,
this will be available once it is documented.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We are also going towards upgrading XiVO to the next version of Debian
namedWheezy. The next step is to backport PostgreSQL from Wheezy, so
that thedatabase migration, which is not so simple, is not done at the
same time as thewhole system upgrade.&lt;/p&gt;
&lt;p&gt;Finally, we moved all our Git repositories to Github. Some time ago, we
movedsome of our repositories to Gitorious, which we preferred because
it iscompletely based on free software, but we've had a few problems
with it.So we decided to switch to Github. You can now fork us at
&lt;a href="https://github.com/xivo-pbx"&gt;https://github.com/xivo-pbx&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Understanding the XIOH label on our product</title><link href="http://blog.xivo.io/understanding-the-xioh-label-on-our-product.html" rel="alternate"></link><updated>2013-03-14T11:04:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2013-03-14:understanding-the-xioh-label-on-our-product.html</id><summary type="html">&lt;p&gt;Dear XIOH followers,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;As we have passed the CE marking certification, we have finalized the
label that we will have on our product with the revelant informations
necessary to identify the product once on the market :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOH_Label" src="/public/XIOHv5/.P1070110_m.jpg" title="XIOH_Label, mar. 2013" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;"XIOH - version 5"&lt;/strong&gt; : the name of the product and the hardware
    version&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;"S/N : XIOH-5-1236-29"&lt;/strong&gt; ; the serial number including the
    hardware version (5), the production batch (1236) and the number in
    this batch (29)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;"AC input: 100-240V\~, 4-2A, 60-50Hz"&lt;/strong&gt; : indication on the power
    requirements used by our ATX 180W power supply&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;"Manufacturer :Avencall"&lt;/strong&gt; : the name of the manufacturer (that
    could be different is different production project)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;"Sources : http://0001-0001.okey.ohanda.org"&lt;/strong&gt; : the OHANDA
    trademark is our legal umbrella for this OpenHardware
    project/product and a direct link to the GIT repository of our
    hardware and software files is indicated on the label. This will
    help the customers and users getting information on the hardware,
    contacting us and sharing information&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;"Made in France"&lt;/strong&gt; : we are currently producing in France (i.e.
    locally as we are based here) but we would rather talk about local
    production to track down the carbone footprint of our product from
    components sourcing to cabling and packaging&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Differents logos&lt;/strong&gt; including the "CE" (1) and RoHS process of
    production as well as the OHANDA logo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(1) : http://en.wikipedia.org/wiki/CE_marking&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Passing the CE marking certification for EU market</title><link href="http://blog.xivo.io/passing-the-ce-marking-certification-for-eu-market.html" rel="alternate"></link><updated>2013-03-11T11:17:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2013-03-11:passing-the-ce-marking-certification-for-eu-market.html</id><summary type="html">&lt;div&gt;

![Measurement of radiated
disturbances](/public/XIOHv5/.MeasurementRadiatedDisturbances_m.jpg "Measurement of radiated disturbances, mar. 2013")

&lt;/div&gt;

&lt;div&gt;

**  
**

&lt;/div&gt;

&lt;div&gt;

**The measurements of radiated disturbances had been done using the
following equipments :**

&lt;/div&gt;

&lt;div&gt;

-   Semi anechoic chamber (11,8x8,1x9,5m) SIEPEL C01
-   Bilog antenna SHWARZBECK VULB9160
-   EMI receiver RHODE&amp;SCHWARZ ESI40
-   Pré-amplifier BONN 3018-8F30S
-   Horn antenna ETS 3115

&lt;/div&gt;

&lt;p&gt;This tests had been done for the B-class which stands for domestic and
professional markets which means we can now sell in all EU countries.&lt;/p&gt;
&lt;p&gt;Xavier Carcelle.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Starting beta-test period for XIOH power-users and developers</title><link href="http://blog.xivo.io/starting-beta-test-period-for-xioh-power-users-and-developers.html" rel="alternate"></link><updated>2013-01-10T10:22:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2013-01-10:starting-beta-test-period-for-xioh-power-users-and-developers.html</id><summary type="html">&lt;p&gt;Dear XIOH followers and developers,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We are now entering our beta-test period with our first batch of XIOH
appliances&lt;/strong&gt; available for shipping for developers and power-users that
could be interested in testing and giving feedback on our product. The
appliances are currently shipped in a metallic 1U-rackable case for up
to 50 users and 10 simultaneous calls. It ships with &lt;a href="http://mirror.xivo.fr/iso/" title="XiVO 12.24"&gt;XiVO
12.24&lt;/a&gt;. We're using free
&lt;a href="http://git.xivo.fr/?p=official/xioh/firmware.git;a=summary"&gt;MSP430
firmware&lt;/a&gt;
running the power sequence of voltage levels for the different
functional blocks, and a &lt;a href="http://git.xivo.fr/?p=official/xioh/coreboot.git;a=summary"&gt;free CPU boot
firmware&lt;/a&gt;
based on &lt;a href="http://coreboot.org"&gt;Coreboot&lt;/a&gt;. Each ROM contains MAC
addresses with our OUI prefix, and a serial number. &lt;a href="http://git.xivo.fr/?p=official/xioh/hardware.git;a=summary"&gt;Public design
source
files&lt;/a&gt; are
also available.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Here is a glimpse on the look-and-feel of the appliance:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOHv5 prototype
casing" src="/public/XIOHv5/.XIOHv5_Prototype_StockPile_m.jpg" title="XIOHv5 prototype casing, janv. 2013" /&gt;&lt;/p&gt;
&lt;p&gt;If anyone is interested, please contact us at
xcarcelle_at_avencall_dot_com for availability and potential
shipping.&lt;/p&gt;
&lt;p&gt;The feedback of our first appliances running in production in 5
different locations are good and we are able to confirm that we can
handle up to 1000 calls a day on a single XiVO IOH.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HaPPy 2013 OpenHardware to yall.&lt;/strong&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>A Switchboard for XiVO</title><link href="http://blog.xivo.io/a-switchboard-for-xivo.html" rel="alternate"></link><updated>2012-12-14T18:44:00-05:00</updated><author><name>pcadotte</name></author><id>tag:blog.xivo.io,2012-12-14:a-switchboard-for-xivo.html</id><summary type="html">&lt;p&gt;One of the long time missing feature of XiVO is a good switchboard
interface. We havebeen working on a new switchboard profile for the XiVO
client and this post isan overview of what you might expect in the next
few releases.&lt;/p&gt;
&lt;p&gt;&lt;img alt="switchboard.png" src="/public/.switchboard_m.jpg" title="switchboard.png, déc. 2012" /&gt;&lt;/p&gt;
&lt;p&gt;As we've said before, we are now releasing a new version every two weeks
andeach release must succeed our test suite before being sent into
production.That means that we will have to ship the new switchboard one
piece at a time. Thefirst three user stories of the switchboard will be
available in the nextrelease (12.24). In fact, one of these story was
already implemented in 12.23but we did not send this release into
production since we are replacingchan_agent with xivo-agent, but that's
another story.&lt;/p&gt;
&lt;p&gt;The first user story is to be able to answer an incoming call with a
click ora key press. To accomplish this goal, we created a new xlet
called switchboard,not to be confused with the switchboard profile. The
switchboard xlet issplitted in three sections, incoming calls on the
left, calls on hold on the right andthe current call on the top spanning
from left to right. When a call reachesthe switchboard, it is shown in
the list on the left of the switchboard. Theoperator can then press
enter or click the call to answer it.&lt;/p&gt;
&lt;p&gt;The call flow leads us to the next user story, which is to show the
currentcall at the top of the switchboard xlet. The caller id name and
number areavailable and buttons are available for each actions that can
be done on thatcall. Each button also has a key binding to allow fast
call distribution.Actions will be added to this frame until each desired
action is present.At the end of the current sprint, only hangup and hold
will be available.&lt;/p&gt;
&lt;p&gt;The third story that we are addressing is the holded call list that is
on theright side of the xlet. These are the calls that have been
answered by theoperator a first time but that have not been distributed
yet (excluding thecurrent call).&lt;/p&gt;
&lt;p&gt;All of these new functinnality are planned for version 12.24 that will
bereleased on december 19th.&lt;/p&gt;
&lt;p&gt;What are the next steps&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Call transfers (the contact xlet can already be used to transfer to
    other users)&lt;/li&gt;
&lt;li&gt;Call tracking (to know what happenned to previously
    distributed calls)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the documentation for all the details to enable your new XiVO
switchboard.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://documentation.xivo.fr/dev/administration/switchboard/switchboard.html"&gt;http://documentation.xivo.fr/dev/administration/switchboard/switchboard.html&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Hacking at the Hackfest</title><link href="http://blog.xivo.io/hacking-at-the-hackfest.html" rel="alternate"></link><updated>2012-11-08T13:45:00-05:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2012-11-08:hacking-at-the-hackfest.html</id><summary type="html">&lt;p&gt;Hello once again XiVO followers ! What's this ? My first blog post has
barely been published and i've already written a second one ! But this
time, i'll be writing about something that will be more interesting for
1337 h@X0r\$ and the like: the Hackfest !&lt;/p&gt;
&lt;h3&gt;Hackfest ? What's a Hackfest ?&lt;/h3&gt;
&lt;p&gt;The &lt;a href="http://www.hackfest.ca" title="Hackfest"&gt;Hackfest&lt;/a&gt; is one of the biggest
events about computer security in the province of Quebec. This year,
more than 400 participants were treated to 2 days full of conferences
and hacking games like Lockpicking, Cyber warfare and Capture The Flag.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Hackfest
cyberwar" src="/public/HackFest2012/.hackfest_cyberwar_m.jpg" title="Hackfest cyberwar, Nov 2012" /&gt;&lt;/p&gt;
&lt;p&gt;XiVO also participated in the Hackfest by giving a conference and
organising the XiVO pwn2own hacking game.&lt;/p&gt;
&lt;h3&gt;What kind of conference ?&lt;/h3&gt;
&lt;p&gt;We gave a conference about the security and future of free
telecommunications, the slides are available in attachment of this post.
The conference was supposed to be given by our colleague &lt;a href="http://twitter.com/nicboul" title="Nicolas Bouliane's twitter feed"&gt;Nicolas
Bouliane&lt;/a&gt;,
but unfortunately, he got sick a few days before the event. Me and my
SCRUM master gave the talk instead. Here's a picture of us during the
conference. As you can see, the room was pretty full !&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.flickr.com/photos/hackfest2k9/8147555929/" title="Hackfest 2012: avencall #hf2012 by hackfest.ca, on Flickr"&gt;&lt;img alt="Hackfest 2012: avencall
#hf2012" src="http://farm9.staticflickr.com/8328/8147555929_6aa0caf977.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;What about the pwn2own ?&lt;/h3&gt;
&lt;p&gt;Hackers were given 48 hours to try and hack a standard XiVO server and
find the most exploits possible. As the game went on, clues were given
out through our twitter feed.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XiVO twitter
feed" src="/public/HackFest2012/.xivo_twitter_feed_m.jpg" title="XiVO twitter feed, Nov 2012" /&gt;&lt;/p&gt;
&lt;p&gt;Once a hacker found an exploit, he could submit it to our scoreboard to
win points. At the end of the game, the top 3 teams with the most points
won cash prizes. Here's a screenshot of the scoreboard at the end of the
game.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XiVO
Scoreboard" src="/public/HackFest2012/.xivo_score_board_m.jpg" title="XiVO Scoreboard, Nov 2012" /&gt;&lt;/p&gt;
&lt;h3&gt;So what happened ? Did you get hacked ?!&lt;/h3&gt;
&lt;p&gt;Yes ! As you can see from the scoreboard, 3 teams were able to find
quite a few exploits in XiVO. What surprised us most was the number of
hacks that were found on the web interface. Since XiVO is first and
foremost a telephony system, we thought that the hackers would
concentrate on hacking the telephone services (For example, control SIP
accounts, create fake telephones through the Provisionning service, DDoS
the Asterisk server) After all, the web interface is only used for
administrative purposes and isn't a critical piece of the XiVO server.
Instead, we got a total of 10 web exploits and only 1 telephone exploit.&lt;/p&gt;
&lt;h3&gt;What happens now ?&lt;/h3&gt;
&lt;p&gt;The XiVO dev team is working on fixing all the exploits found during the
pwn2own. The fixes will be released in version 12.22 at the end of next
week.&lt;/p&gt;
&lt;p&gt;All in all, we had great fun participating in the Hackfest. We're
already thinking about how we can make the game more exciting next year,
like how to encourage people to go explore more of XiVO's telephony
services.&lt;/p&gt;
&lt;p&gt;Thanks again to the 3 teams who participated in XIVO's pwn2own
(RingZer0, Abed&amp;amp;Francis and Bitducks). We look forward to more hacking
next year !&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Astricon 2012</title><link href="http://blog.xivo.io/astricon-2012.html" rel="alternate"></link><updated>2012-11-05T20:02:00-05:00</updated><author><name>nbouliane</name></author><id>tag:blog.xivo.io,2012-11-05:astricon-2012.html</id><summary type="html">&lt;p&gt;&lt;a href="/public/Astricon2012/astricon.JPG" title="astricon.JPG"&gt;&lt;img alt="astricon.JPG" src="/public/Astricon2012/.astricon_m.jpg" title="astricon.JPG, nov. 2012" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For a second year, Avencall was present on the biggest Asterisk
conference in the world: Astricon.This year, the conference was held in
Georgia, Atlanta.&lt;/p&gt;
&lt;p&gt;Like every year, the Monday is the AstriDevCon, a small conference for
developers by the developers to discuss the future and how to improve
Asterisk. It's a very nice place to get to know the other people that
are coding inside Asterisk and also to coordinate with others about what
has to be done.&lt;/p&gt;
&lt;p&gt;You can find a nice resume of the whole day of discussion here:
&lt;a href="https://wiki.asterisk.org/wiki/display/AST/AstriDevCon+2012"&gt;https://wiki.asterisk.org/wiki/display/AST/AstriDevCon+2012&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As you can see, this year we also had a booth (#28). It was a great
experience to expose ourself at Astricon because there is a huge flow of
people interested and interesting. It was a lot of fun to talk about the
XiVO project and the XiVO Open Hardware. All the gizmos we had on our
table really attracted may people, especially the raspberry pi that was
running XiVO.&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/Astricon2012/conf-xav.jpg" title="conf-xav.jpg"&gt;&lt;img alt="conf-xav.jpg" src="/public/Astricon2012/.conf-xav_s.jpg" title="conf-xav.jpg, nov. 2012" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To communicate further about us, we also gave a conference to present
Avencall and the XiVO telephony system.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>A conference with Uncle Bob</title><link href="http://blog.xivo.io/a-conference-with-uncle-bob.html" rel="alternate"></link><updated>2012-11-05T13:35:00-05:00</updated><author><name>gsanderson</name></author><id>tag:blog.xivo.io,2012-11-05:a-conference-with-uncle-bob.html</id><summary type="html">&lt;p&gt;Hello to everyone following the XiVO blog ! My name is Gregory Eric
Sanderson Turcot Temlett MacDonnell Forbes. I've been working on the
XiVO software team for 2 months now and the time has come to publish my
first official blog post. Enjoy ;)&lt;/p&gt;
&lt;p&gt;At the end of last september, the XiVO team had the amazing chance of
attending a talk given by none other than Robert C. Martin himself ! Mr.
Martin, also known as "Uncle Bob", is a highly experienced software
developer with over 30 years of experience. The subject of his talk was
seemingly simple: What should we expect from a professional software
developer ? More that you would think. Uncle bob divided his talk into
about a dozen different expectations. Here is my personal interpretation
for each expectation he gave.&lt;/p&gt;
&lt;h2&gt;You will not ship shit&lt;/h2&gt;
&lt;p&gt;Pretty provocative for a first expectation, eh ?&lt;/p&gt;
&lt;p&gt;Why is this even on the list ? If programmers are professionals, then
they should already be shipping quality code, right ? The reality is
that programmers have to deal with issues that can easily lower the
quality of their software:Tight deadlines, small budget, crappy code,
infuriating clients, overly complex architectures, etc. Bad habits are
hard to break, so when you start shipping shit, it becomes easier to do
so again and again.&lt;/p&gt;
&lt;p&gt;But here's a thought: Software is being found increasingly more often in
critical systems, like pacemakers for example. What happens if a
programmer ships faulty software directly into a person's heart ? When
the software that wedevelop can tip the balance between life and death,
then as professionals, we should never need to "ship shit". At the very
least, we should always aim to never do so.&lt;/p&gt;
&lt;h2&gt;You will ship all the time&lt;/h2&gt;
&lt;p&gt;Stories about unkempt deadlines or missed release dates are all over the
internet. Worse yet, sometimes software is delivered on time, but
upgrades become catastrophic.&lt;/p&gt;
&lt;p&gt;Let's face it, there will always be situations where a client who would
like additional feature X to be ready within 2 weeks, but in the end it
takes 2 months to develop. So what can you do to make the situation
better ? Well, by making sure you're always being ready to ship at a
moment's notice. Shipping all the time might seem impossible the first
time you consider it, but it forces you to develop certain habits that
make your software more stable. Namely,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Easier deployments&lt;/strong&gt;. Your deployment strategy needs to be simple,
    fast, and automated. Once that's in place, you no longer need to
    plan your upgrades since you can re-use your automated procedure&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Client satisfaction&lt;/strong&gt;. The client no longer needs to wait to get
    the latest version of your software&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Less time wasted&lt;/strong&gt;. Less time spent on shipping and upgrades means
    more time to work on more important stuff&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How do you ship all the time ? One way is through Continuous
Integration, but it isn't the only approach. What's important is to find
a way that works well with your software and your team.&lt;/p&gt;
&lt;h2&gt;Inexpensive Adaptability&lt;/h2&gt;
&lt;p&gt;The concept of evolution is key here. Code that doesn't evolve is prone
to stagnation and becomes harder to adapt, leading to technical debt.
How do you make sure your code doesn't stagnate ? As Uncle Bob would
say: "you need to flex your code" You can test the adaptability of your
software by looking at how complex it would be to suddenly change a
major component of the system. For example: try changing the database,
use another protocol, redesign the UI. The less changes that are needed,
the more adaptive your code becomes. One example of potential
adaptability that you might consider is the SQL vs NoSQL debate. If you
suddenly needed to change from one to the other, how much effort and how
much code would you need to change ? The less there is, the better.&lt;/p&gt;
&lt;h2&gt;Extreme Quality&lt;/h2&gt;
&lt;p&gt;As professionals, we should always aim to produce the best work that we
can. Here's my personal list of what I consider to be quality work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clean code&lt;/li&gt;
&lt;li&gt;Code that is easy to modify&lt;/li&gt;
&lt;li&gt;Clear and concise documentation&lt;/li&gt;
&lt;li&gt;Simple architecture designs&lt;/li&gt;
&lt;li&gt;Tests that cover all known use cases&lt;/li&gt;
&lt;li&gt;Reasonnable and honest estimates&lt;/li&gt;
&lt;li&gt;Calm Attitude&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Quality also means dealing with our mistakes. Some mistakes can be
simple to fix, others might be impossible to re-mediate. What's most
important, is that we always ask ourselves "What can I do so that I
don't repeat the same mistake next time ? "At the end of the day, we
should be proud of our job and the work we have done, knowing that we
have accomplished the best that was possible.&lt;/p&gt;
&lt;h2&gt;QA will find nothing&lt;/h2&gt;
&lt;p&gt;Programmers are responsible for the quality of the code they develop.
Therefore, they should also be responsible for making sure that there
are no bugs in what they give to QA. Using QA as a fallback for writing
more code without checking for bugs is a bad habit to take. Small bugs
from time to time is an acceptable limit, but if QA comes back with a
list of bugs every time, then it's probably a sign that the programmer
isn't taking the quality of his code seriously. As Uncle Bob said during
the conference, "QA should find nothing. They should even ask themselves
why they exist"&lt;/p&gt;
&lt;h2&gt;We cover for each other&lt;/h2&gt;
&lt;p&gt;Teamwork isn't just about cooperation with other teammates, it's also
about sharing knowledge. When you have people in a team that specialize
in a certain domain, you risk losing all the experience that he's
acquired if ever he suddenly disappears. To make sure a team can
continue going forwards, even in unexpected situations, there should
always be more that one person who has the know how for any and every
Class or module in your code. How do you go about sharing that
experience ? One way is through pair programming, but it certainly isn't
the only way. Try finding what works best with all the members of your
team.&lt;/p&gt;
&lt;h2&gt;Honest estimates&lt;/h2&gt;
&lt;p&gt;Programmers estimate their tasks everyday, but how many of those
estimates are "honest" ? Honest estimates means giving a straight answer
instead of changing numbers to fit time constraints or a budget. It
means giving a time range (for example: 1 to 3 weeks) instead of a time
limit that will probably be busted. It also means readjusting an
estimate the moment you realize the first one won't work anymore.
Keeping estimates honest shows that you are commited to your work. It
also gives decision makers a better picture of the complexity of the
work at hand.&lt;/p&gt;
&lt;h2&gt;Automation&lt;/h2&gt;
&lt;p&gt;One of the things Uncle Bob said that really struck me was "As people
whose job is to automate things, I can't believe how much time
programmers spend repeating the same mundane tasks". I have to admit, he
has a point. The time we spend writing code compared to the time we take
to test it can boggle the mind. That time that could be well spent
working on other tasks equally as important, like improving code
structure for example. Although tests can be automated through
techniques like TDD or BDD, the principle of automation can also apply
to any recurrent task that's part of your daily development tasks.&lt;/p&gt;
&lt;p&gt;Let me give you an example from my team leader: At the beginning of
every sprint, he needs to generate a series of charts showing various
statistics about the project. Before, he would manually copy numbers in
a spreadsheet and generate the chart every week. Now that he's automated
the chart generation, he can spend more time with his team.&lt;/p&gt;
&lt;h2&gt;Continuous aggressive learning&lt;/h2&gt;
&lt;p&gt;"As programmers, we must learn to learn." Here are a few things that a
programmer needs to keep up with in order to do his job: hardware,
software, programming languages, operating systems, libraries,
frameworks. The speed at which these things can evolve is so quick that
it becomes ever more important to take the time to learn about changes
and keep up to date. Uncle Bob even suggested that the time you take to
learn these things should be separate from the time spent at work since
this represents a personal investment that enables you to stay
professional. Continuous learning is a key skill in our ever-evolving
profession. Those who fail to adapt risk falling behind.&lt;/p&gt;
&lt;h2&gt;Mentoring&lt;/h2&gt;
&lt;p&gt;Another approach to continuous learning is to teach. Mentoring is a way
of checking if you have a mastery of your knowledge since you need to be
proficient with your subject to teach successfully. It is also a way of
guiding other people on the path to professional software development.
Finally, mentoring can also be seen as a form of team work: there will
be more people who share the same knowledge (see "We cover for each
other" above)&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I really enjoyed listening to Robert C. Martin's conference. I still
consider myself as a young programmer, and this talk has convinced me of
the importance of taking some personal time to investigate what I
personally need to change in order to, one day, proudly proclaim myself
as a "professional programmer". What I also appreciated from the talk
was Uncle Bob's focus on goals instead of techniques. In other words, no
matter what methodology or technology you prefer using (TDD, BDD, Agile,
Waterfall, C++, python, .net, java, or whatever else) we should never
lose sight of what we should be doing to stay proud about the best job
out there: programming.&lt;/p&gt;
&lt;p&gt;That's it for my first blog post folks ! I hope you enjoyed it and look
forward to my next one. If you'd like to discuss more about what i've
written, you're more than welcome to leave comments.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Hello XiVO, Add Your Web Page to XiVO Web Interface</title><link href="http://blog.xivo.io/hello-xivo-add-your-web-page-to-xivo-web-interface.html" rel="alternate"></link><updated>2012-10-29T08:33:00-04:00</updated><author><name>jylebleu</name></author><id>tag:blog.xivo.io,2012-10-29:hello-xivo-add-your-web-page-to-xivo-web-interface.html</id><summary type="html">&lt;p&gt;XiVO can be managed using a web interface. This interface is developed
in PHP language using a XiVO specific framework.&lt;/p&gt;
&lt;p&gt;The idea of this post is to begin to demystify XiVO web interface
development.&lt;/p&gt;
&lt;h4&gt;Setting The Development Environment&lt;/h4&gt;
&lt;p&gt;First of all, we are going to set up of development environment. The
best is to enable nfs mount on your development workstation and to mount
the web interface development directory onto your XiVO virtual
machine.If your development projects is located in /projects/xivo-skaro,
the mount command can be :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mount -t nfs devipaddress:/projects/xivo-skaro/web-interface/src /usr/share/pf-xivo-web-interface
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now each time you will modify a file within the web-interface directory,
you can check your update by refreshing your browser.&lt;/p&gt;
&lt;h4&gt;XiVO Hello World Page&lt;/h4&gt;
&lt;p&gt;So let's start by writing a simple web page to display "Hello XiVO
world", doesn't remind you something ?&lt;/p&gt;
&lt;h4&gt;XiVO Actions, Applications and Objects.&lt;/h4&gt;
&lt;p&gt;&lt;img alt="webi_src.png" src="/public/xivosoft/webi_src.png" title="webi_src.png, oct. 2012" /&gt;XiVO
web interface is mainly composed of three types of elements :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;actions, this is kind of controller, and will route the action to be
    done (list, create, edit) to the proper application&lt;/li&gt;
&lt;li&gt;applications, to be considered as the business layer, contains the
    algorithm to be applied&lt;/li&gt;
&lt;li&gt;objects, mainly where the persistence takes place.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many other components, but let's start first be this simple
view.&lt;/p&gt;
&lt;p&gt;So if we need to display something, we have to follow these necessary
steps :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write a simple PHP page as an action&lt;/li&gt;
&lt;li&gt;Add this action in the authorized control list&lt;/li&gt;
&lt;li&gt;Add it to the proper menu&lt;/li&gt;
&lt;li&gt;Link the menu generated URL to the proper URL&lt;/li&gt;
&lt;li&gt;Add necessary translations to XiVO translation files&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Writing The Page&lt;/h3&gt;
&lt;p&gt;Let's start with a simple page that we want to be displayed in the menu
"services -&amp;gt; IPBX -&amp;gt; Call management", edit a file
xivo-skaro/web-interface/src/action/www/service/ipbx/asterisk/call_management/hellowivo.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello XiVO world !&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;XiVO Authorization Framework&lt;/h3&gt;
&lt;p&gt;You cannot still browse this new page because this page is not declared
within XiVO authorization framework. The list of available pages is
located in the file
xivo-skaro/web-interface/src/object/objectconf/acl/user.inc.Edit this
file and add this new action.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;....&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="x"&gt;[&amp;#39;tree&amp;#39;][&amp;#39;service&amp;#39;][&amp;#39;ipbx&amp;#39;][&amp;#39;call_management&amp;#39;][&amp;#39;pickup&amp;#39;] = true;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="x"&gt;[&amp;#39;tree&amp;#39;][&amp;#39;service&amp;#39;][&amp;#39;ipbx&amp;#39;][&amp;#39;call_management&amp;#39;][&amp;#39;schedule&amp;#39;] = true;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="x"&gt;[&amp;#39;tree&amp;#39;][&amp;#39;service&amp;#39;][&amp;#39;ipbx&amp;#39;][&amp;#39;call_management&amp;#39;][&amp;#39;cel&amp;#39;] = true;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="x"&gt;[&amp;#39;tree&amp;#39;][&amp;#39;service&amp;#39;][&amp;#39;ipbx&amp;#39;][&amp;#39;call_management&amp;#39;][&amp;#39;helloxivo&amp;#39;] = true;&lt;/span&gt;
&lt;span class="x"&gt;.....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you can browse the page https://&amp;lt;your xivo
host&amp;gt;/service/ipbx/index.php/call_management/helloxivo.&lt;/p&gt;
&lt;p&gt;Create a XiVO user (menu Configuration-&amp;gt; Management -&amp;gt; Users) and
check the authorizations for this user (click on the small key icon next
to the user) and you will see that a new item appears under call
management.&lt;img alt="webi_acl.png" src="/public/xivosoft/.webi_acl_m.jpg" title="webi_acl.png, oct. 2012" /&gt;&lt;/p&gt;
&lt;h3&gt;Translation&lt;/h3&gt;
&lt;p&gt;You can also note that an error message 'missing translation' is
displayed. This is a special marker to be sure that nobody forget to
write the translation strings. These translations are located in
directory src/i18n were a directory per language can be find.&lt;/p&gt;
&lt;p&gt;Edit the file en_US/conf/acl.i18n and add the translation
service-ipbx-call_management-helloxivo and to not forget to add the
french translation, as in XiVO we always complete the french and english
translation.&lt;/p&gt;
&lt;p&gt;Now we can display the new page, and can authorize a user to use this
new page, still to do is to be able to use this new page using XiVO
menu.&lt;/p&gt;
&lt;h3&gt;XiVO Menu Entries&lt;/h3&gt;
&lt;p&gt;Edit
xivo-skaro/web-interface/src/tpl/www/bloc/menu/left/service/ipbx/asterisk.php,
add the menu entry :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;........
        if(xivo_user::chk_acl(&amp;#39;call_management&amp;#39;,&amp;#39;cel&amp;#39;) === true):
            echo    &amp;#39;&lt;span class="nt"&gt;&amp;lt;dd&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mn-call_management--cel&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;#39;,
                $url-&amp;gt;href_html($this-&amp;gt;bbf(&amp;#39;mn_left_callmanagement-cel&amp;#39;),
                        &amp;#39;service/ipbx/call_management/cel&amp;#39;),
                &amp;#39;&lt;span class="nt"&gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;&amp;#39;;
        endif;
        if(xivo_user::chk_acl(&amp;#39;call_management&amp;#39;,&amp;#39;helloxivo&amp;#39;) === true):
            echo    &amp;#39;&lt;span class="nt"&gt;&amp;lt;dd&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mn-call_management--helloxivo&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;#39;,
                $url-&amp;gt;href_html($this-&amp;gt;bbf(&amp;#39;mn_left_callmanagement-helloxivo&amp;#39;),
                        &amp;#39;service/ipbx/call_management/helloxivo&amp;#39;),
                &amp;#39;&lt;span class="nt"&gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;&amp;#39;;
        endif;
        echo    &amp;#39;&lt;span class="nt"&gt;&amp;lt;/dl&amp;gt;&lt;/span&gt;&amp;#39;;
    endif;

........
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fix the translation by adding in
xivo-skaro/web-interface/src/i18n/en_US/tpl/www/bloc/menu/left/service/ipbx/asterisk.i18n
the translation to mn_left_callmanagement-helloxivo&lt;/p&gt;
&lt;p&gt;The menu is now correctly displayed, but you still cannot click on it to
display your new page. We must now register the menu URL within the XiVO
framework.&lt;/p&gt;
&lt;h3&gt;XiVO URL Routing&lt;/h3&gt;
&lt;p&gt;Edit xivo-skaro/web-interface/src/object/objectconf/url.inc and add the
URL translation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;.......&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="x"&gt;[&amp;#39;service/ipbx/call_management/schedule&amp;#39;] = &amp;#39;service/ipbx/index.php/call_management/schedule/&amp;#39;;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="x"&gt;[&amp;#39;service/ipbx/call_management/voicemenu&amp;#39;] = &amp;#39;service/ipbx/index.php/call_management/voicemenu/&amp;#39;;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="x"&gt;[&amp;#39;service/ipbx/call_management/cel&amp;#39;] = &amp;#39;service/ipbx/index.php/call_management/cel/&amp;#39;;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="x"&gt;[&amp;#39;service/ipbx/call_management/helloxivo&amp;#39;] = &amp;#39;service/ipbx/index.php/call_management/helloxivo/&amp;#39;;&lt;/span&gt;

&lt;span class="x"&gt;.......&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you may click on the new menu entry and display the Hello XiVO world
page&lt;/p&gt;
&lt;p&gt;&lt;img alt="webi_hello_menu.png" src="/public/xivosoft/webi_hello_menu.png" title="webi_hello_menu.png, oct. 2012" /&gt;As
you may notice this page is not displayed using XiVO look and feel, but
that's another story.&lt;/p&gt;
&lt;/p&gt;</summary><category term="development"></category><category term="i18n"></category><category term="web-interface"></category></entry><entry><title>Visualizing asterisk deadlocks</title><link href="http://blog.xivo.io/visualizing-asterisk-deadlocks.html" rel="alternate"></link><updated>2012-10-24T13:56:00-04:00</updated><author><name>hexanol</name></author><id>tag:blog.xivo.io,2012-10-24:visualizing-asterisk-deadlocks.html</id><summary type="html">&lt;p&gt;It has recently come to our attention that a freeze would sometimes
occur in the asterisk application shipped with XiVO.&lt;/p&gt;
&lt;p&gt;When the freeze happened, no new calls would be accepted and most of the
current calls would freeze. A manual restart of the asterisk process
would then be required for the situation to get back to normal.&lt;/p&gt;
&lt;p&gt;As you can understand, that's quite an unpleasant situation for a
telephony system like XiVO.&lt;/p&gt;
&lt;p&gt;So we began investigating on what was causing the freeze, knowing it was
probably some deadlocks occuring in the asterisk process.Fortunately for
us, asterisk provides some compile time flags that help with debugging
such conditions. This is documented &lt;a href="https://wiki.asterisk.org/wiki/display/AST/Getting+a+Backtrace"&gt;on the asterisk
wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After recompiling the XiVO version of asterisk with the DEBUG_THREADS
and DONT_OPTIMIZE flags, and with the help of some other people, we
were able to reproduce the freeze and get some information about the
various locks held by the various threads of the frozen asterisk process
via the "coreshow locks" command.&lt;/p&gt;
&lt;p&gt;The output of the "core show locks" command looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;=======================================================================&lt;/span&gt;
&lt;span class="gh"&gt;=== Currently Held Locks ==============================================&lt;/span&gt;
&lt;span class="gh"&gt;=======================================================================&lt;/span&gt;
===
=== &amp;lt;pending&amp;gt; &amp;lt;lock#&amp;gt; (&amp;lt;file&amp;gt;): &amp;lt;lock type&amp;gt; &amp;lt;line num&amp;gt; &amp;lt;function&amp;gt; &amp;lt;lock name&amp;gt; &amp;lt;lock addr&amp;gt; (times locked)
=== Thread ID: 0xb71ffb70 (tps_processing_function started at [  457] taskprocessor.c ast_taskprocessor_get())
=== ---&amp;gt; Lock #0 (event.c): RDLOCK 1488 handle_event &amp;amp;(&amp;amp;ast_event_subs[event_types[i]])-&amp;gt;lock 0x822aa78 (1)
    /usr/sbin/asterisk(ast_bt_get_addresses+0x19) [0x812a024]
    /usr/sbin/asterisk(__ast_rwlock_rdlock+0xae) [0x8125263]
    /usr/sbin/asterisk() [0x80ef7a5]
    /usr/sbin/asterisk() [0x8194305]
    /usr/sbin/asterisk() [0x81a5939]
    /lib/i686/cmov/libpthread.so.0(+0x5955) [0xb7324955]
    /lib/i686/cmov/libc.so.6(clone+0x5e) [0xb75361de]
=== ---&amp;gt; Lock #1 (chan_agent.c): MUTEX 421 device_state_cb &amp;amp;(&amp;amp;agents)-&amp;gt;lock 0xb64fab48 (1)
    /usr/sbin/asterisk(ast_bt_get_addresses+0x19) [0x812a024]
    /usr/sbin/asterisk(__ast_pthread_mutex_trylock+0xae) [0x8123886]
    /usr/lib/asterisk/modules/chan_agent.so(+0x2f8b) [0xb64e7f8b]
    /usr/sbin/asterisk() [0x80ef81d]
    /usr/sbin/asterisk() [0x8194305]
    /usr/sbin/asterisk() [0x81a5939]
    /lib/i686/cmov/libpthread.so.0(+0x5955) [0xb7324955]
    /lib/i686/cmov/libc.so.6(clone+0x5e) [0xb75361de]
=== ---&amp;gt; Waiting for Lock #2 (chan_agent.c): MUTEX 430 device_state_cb &amp;amp;p-&amp;gt;lock 0x96a1a60 (1)
    /usr/sbin/asterisk(ast_bt_get_addresses+0x19) [0x812a024]
    /usr/sbin/asterisk(__ast_pthread_mutex_lock+0xae) [0x812351e]
    /usr/lib/asterisk/modules/chan_agent.so(+0x2fea) [0xb64e7fea]
    /usr/sbin/asterisk() [0x80ef81d]
    /usr/sbin/asterisk() [0x8194305]
    /usr/sbin/asterisk() [0x81a5939]
    /lib/i686/cmov/libpthread.so.0(+0x5955) [0xb7324955]
    /lib/i686/cmov/libc.so.6(clone+0x5e) [0xb75361de]
=== --- ---&amp;gt; Locked Here: chan_agent.c line 516 (agent_lock_owner)
&lt;span class="gh"&gt;=== -------------------------------------------------------------------&lt;/span&gt;
&lt;span class="gh"&gt;===&lt;/span&gt;
=== Thread ID: 0xb6cffb70 (do_devstate_changes  started at [  726] devicestate.c ast_device_state_engine_init())
=== ---&amp;gt; Lock #0 (astobj2.c): MUTEX 661 internal_ao2_callback c 0x9551498 (1)
    /usr/sbin/asterisk(ast_bt_get_addresses+0x19) [0x812a024]
    /usr/sbin/asterisk(__ast_pthread_mutex_lock+0xae) [0x812351e]
    /usr/sbin/asterisk(__ao2_lock+0x48) [0x8087fe4]
    /usr/sbin/asterisk() [0x8088b19]
    /usr/sbin/asterisk(__ao2_callback+0x56) [0x8088fa4]
    /usr/sbin/asterisk(__ao2_find+0x29) [0x80890c0]
    /usr/sbin/asterisk() [0x80afe6c]
    /usr/sbin/asterisk(ast_channel_get_by_name_prefix+0x28) [0x80aff2c]
    /usr/sbin/asterisk(ast_parse_device_state+0x43) [0x80dfc3e]
    /usr/sbin/asterisk() [0x80dff2d]
    /usr/sbin/asterisk() [0x80e03ac]
    /usr/sbin/asterisk() [0x80e0702]
    /usr/sbin/asterisk() [0x81a5939]
    /lib/i686/cmov/libpthread.so.0(+0x5955) [0xb7324955]
    /lib/i686/cmov/libc.so.6(clone+0x5e) [0xb75361de]
=== ---&amp;gt; Waiting for Lock #1 (channel.c): MUTEX 1703 ast_channel_cmp_cb chan 0xae044858 (1)
    /usr/sbin/asterisk(ast_bt_get_addresses+0x19) [0x812a024]
    /usr/sbin/asterisk(__ast_pthread_mutex_lock+0xae) [0x812351e]
    /usr/sbin/asterisk(__ao2_lock+0x48) [0x8087fe4]
    /usr/sbin/asterisk() [0x80afa11]
    /usr/sbin/asterisk() [0x8088bdf]
    /usr/sbin/asterisk(__ao2_callback+0x56) [0x8088fa4]
    /usr/sbin/asterisk(__ao2_find+0x29) [0x80890c0]
    /usr/sbin/asterisk() [0x80afe6c]
    /usr/sbin/asterisk(ast_channel_get_by_name_prefix+0x28) [0x80aff2c]
    /usr/sbin/asterisk(ast_parse_device_state+0x43) [0x80dfc3e]
    /usr/sbin/asterisk() [0x80dff2d]
    /usr/sbin/asterisk() [0x80e03ac]
    /usr/sbin/asterisk() [0x80e0702]
    /usr/sbin/asterisk() [0x81a5939]
    /lib/i686/cmov/libpthread.so.0(+0x5955) [0xb7324955]
    /lib/i686/cmov/libc.so.6(clone+0x5e) [0xb75361de]
=== --- ---&amp;gt; Locked Here: channel.c line 3767 (__ast_read)
=== --- ---&amp;gt; Locked Here: chan_agent.c line 515 (agent_lock_owner)
&lt;span class="gh"&gt;=== -------------------------------------------------------------------&lt;/span&gt;
&lt;span class="gh"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and it continues this way for a total of 363 lines.&lt;/p&gt;
&lt;p&gt;The big advantage of this representation is that you have a lot of info
to help with precise diagnostics and debugging. But there is a downside
to this:it is quite hard to quickly get the "big picture" of which
thread is waiting for which other thread, etc.&lt;/p&gt;
&lt;p&gt;Since it seemed like there were no tools to help us with getting the big
picture, we wrote a really simple python script that takes the output of
the "core show locks" command and outputs a directed graph in &lt;a href="http://www.graphviz.org/content/dot-language"&gt;DOT
language&lt;/a&gt; of the relations
between the threads. The generated graph is then fed to
&lt;a href="http://www.graphviz.org/Home.php"&gt;graphviz&lt;/a&gt; to generate an image like
this:&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/graph-locks.png" title="Asterisk Deadlock"&gt;&lt;img alt="Asterisk
Deadlock" src="/public/.graph-locks_m.jpg" title="Asterisk Deadlock, oct. 2012" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Each node represents a thread, labeled with its thread ID, and edges
represent a "is waiting for" relation.&lt;/p&gt;
&lt;p&gt;From the above image, we clearly see that there's a deadlock between
thread 0xaeb2db70 and thread 0xb6cffb70 since both are waiting for each
other. We also see a bunch of other threads waiting directly or
indirectly on the deadlocked threads, showing the generalized freeze of
the asterisk process.&lt;/p&gt;
&lt;p&gt;The script, which is named graph_ast_locks.py, can be found in &lt;a href="https://gitorious.org/xivo/xivo-tools/trees/master/scripts"&gt;the
xivo-tools
repository&lt;/a&gt;.
Given you have the output of a "core show locks" invocation, and that
you have graphviz installed, you can then run the following command to
generate a graph in svg format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;graph_ast_locks.py core-show-locks.txt | circo -Tsvg -o graph-locks.svg
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary></entry><entry><title>Test vectors for SMBus Packet Error Checking (PEC) CRC-8</title><link href="http://blog.xivo.io/test-vectors-for-smbus-packet-error-checking-pec-crc-8.html" rel="alternate"></link><updated>2012-10-09T17:26:00-04:00</updated><author><name>xilun</name></author><id>tag:blog.xivo.io,2012-10-09:test-vectors-for-smbus-packet-error-checking-pec-crc-8.html</id><summary type="html">&lt;p&gt;While implementing the SMBus on the MSP430 (see also the post "&lt;a href="index.php?post/2012/09/29/An-engineering-story"&gt;An
engineering story&lt;/a&gt;"), I
have been looking for SMBus
&lt;a href="http://en.wikipedia.org/wiki/System_Management_Bus#Packet_Error_Checking" title="PEC"&gt;&lt;abbrev title="Packet Error Checking"&gt;PEC&lt;/abbrev&gt;&lt;/a&gt;
CRC-8 test vectors but could not find any.&lt;/p&gt;
&lt;p&gt;A CRC is a &lt;a href="http://en.wikipedia.org/wiki/Cyclic_redundancy_check"&gt;Cyclic Redundancy
Check&lt;/a&gt;. It is a
little piece of data typically added at the end of a packet and used to
check with an high reliability that no unintended error occurred during
transmission (or storage). The math to do the computation and the check
of a CRC is not very complicated and can be explained to anybody who
knows how to do a &lt;a href="http://en.wikipedia.org/wiki/Long_division"&gt;long
division&lt;/a&gt;. The polynomial
for the SMBus PEC CRC-8 is x**8+x**2+x**1+1 -- this is a
polynomial in GF(2), but you don't really have to understand that part
to be able to use CRCs in practice. It corresponds to the binary number
100000111, to be used in a particular way. The following text explains
it better than I could:
&lt;a href="http://www.ross.net/crc/download/crc_v3.txt" title="http://www.ross.net/crc/download/crc_v3.txt"&gt;http://www.ross.net/crc/download/cr...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I made my own SMBus PEC CRC-8 test vectors (attached to this post). The
format is one test vector per line, like:&lt;/p&gt;
&lt;p&gt;TV(616263, 5F)&lt;/p&gt;
&lt;p&gt;616263 is the 3-byte message in hexadecimal ("abc" in ASCII). The
resulting one byte CRC-8 in hex is 5F.&lt;/p&gt;
&lt;p&gt;The test vectors are checked with an official &lt;a href="http://smbus.org/faq/crc8Applet.htm"&gt;Java applet from
smbus.org&lt;/a&gt;. They include at the
beginning the result for each one byte packet, which is also the table
for the fast byte based implementation: CRC = table[CRC \^ byte]
(because the initial value to use for CRC is zero), On the MSP430, this
implementation should run in something like 9 cycles per byte when
dropped in the right place. (xor CRC, Rm /* 3 cycles */; mov
table[Rm], CRC; /* 6 cycles */)&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>An engineering story</title><link href="http://blog.xivo.io/an-engineering-story.html" rel="alternate"></link><updated>2012-09-29T16:12:00-04:00</updated><author><name>xilun</name></author><id>tag:blog.xivo.io,2012-09-29:an-engineering-story.html</id><summary type="html">&lt;p&gt;To be able to track interesting quality metrics of our upcoming XiVO
Office product (XiVO IPBX Open Hardware project), we have decided to add
temperature sensors to our current XIOH pcb.&lt;/p&gt;
&lt;p&gt;In computers, the typical way to report the temperature to the main
operating system is through SMBus. This is suitable in our case: we
already have an MSP430 microcontroller that handles the power sequence
and is connected to the SMBus of the board. We will connect some diodes
to the MSP430 to measure the temperature. So the time has come to make
use of the SMBus between the MSP and the EP80579 (our main System On
Chip), for temperature measurements and also other purposes.&lt;/p&gt;
&lt;p&gt;The MSP430 does not have a full featured SMBus controller, only a
generic I2C one. SMBus is a variant of I2C, with additional electrical
and timing constraints in the physical layer and definition of the
messages at the network layer level.&lt;/p&gt;
&lt;p&gt;Although formatting and parsing SMBus messages is easy, properly using
the I2C controller of the MSP430 in a multi-master environment is not
without pitfalls, even if we did not care about the SMBus timing
constraints. To do it with the needed reliability, it is necessary to
have a detailed knowledge of the whole system and to take into
consideration all kind of interactions on the bus and in the chips. In
our business, the reliability wanted by the customers is typically high
enough that it makes sense to build robust systems instead of rushing a
collapsing sandcastle to market. Plus, in that particular case, we are
dealing with the subsystem that brings and keeps the whole board
running, and for which the cost to debug in the field is absurdly high.&lt;/p&gt;
&lt;p&gt;All complex chips come with various design errors, and the MSP430 is no
exception. On the exact version that we use, there are 6 documented
errors affecting the I2C controller, of which 4 clearly apply to our
board, 1 clearly does not apply, and one required careful system
analysis to determine that the preconditions to this erroneous behavior
could not happen in our system.&lt;/p&gt;
&lt;p&gt;On top of the 4 errata applying to the I2C controller, we have to deal
with errata for other parts of the MSP430, plus some detailled aspects
that are not errata but are also limiting the way we can make a reliable
use of the chip for the tasks we want.Failure to properly take all those
details into consideration would lead to eventual faults of various
natures, probably including MSP430 crashes impossible to diagnose and
leading to spurious shutdowns, systems stuck in the powered state, or
any random behavior and degradation of system functions.&lt;/p&gt;
&lt;p&gt;The impact could be full-scale, with potential consequences on:
availability, maintainability, safety, security, and reliability!&lt;/p&gt;
&lt;p&gt;It is worthwhile to note that one of the errata that could have the
biggest consequences can only be handled by using one specific software
architecture to drive the I2C controller, and that specific software
architecture is not the first thing that comes to mind in our
preexisting firmware. This is a case where iteration on the design of
the I2C code would have meant its complete rewrite.&lt;/p&gt;
&lt;p&gt;Complex systems, even moderately so, need a careful design, especially
on components that are critical for business or technical reasons.
Wishful thinking never produces high reliability and neither does
excessive reliance on luck. Modeling, even informally, sometimes pays.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Let us cross rivers or how the dev team learns to bring about major changes to XiVO's architecture, the agile way.</title><link href="http://blog.xivo.io/let-us-cross-rivers-or-how-the-dev-team-learns-to-bring-about-major-changes-to-xivos-architecture-the-agile-way.html" rel="alternate"></link><updated>2012-09-17T19:24:00-04:00</updated><author><name>jpgelinas</name></author><id>tag:blog.xivo.io,2012-09-17:let-us-cross-rivers-or-how-the-dev-team-learns-to-bring-about-major-changes-to-xivos-architecture-the-agile-way.html</id><summary type="html">&lt;p&gt;XiVO has been around for over five years now and its use has greatly
evolved since then. From small installations of a few users, XiVO
evolved to support installations of hundreds of users and more recently
major contact centers. We now see XiVO installations with a few
thousands of users, multiple agents, queues and contexts and call
volumes ever increasing. This growth has brought the XiVO dev team new
challenges concerning the architecture of XiVO as not all parts of XiVO
were ready for this kind of sollicitation. We knew it. We knew there
were some bottlenecks we would need to adress.&lt;/p&gt;
&lt;p&gt;We are agile and this means, among other things, that we do not build
bridges before we need to cross rivers. Now we're there. We need a
bridge! The XiVO dev team has been working hard in the last months to
overcome some of the major challenges of XiVO.&lt;/p&gt;
&lt;p&gt;One of these challenges is linked with the decentralized/multi-component
nature of XiVO. Indeed as you can read in an &lt;a href="/index.php?post/2012/06/11/XiVO-Architecture"&gt;older
post&lt;/a&gt;, XiVO is a rich
multi-component ecosystem with way too many inter-relations. This has
been a work in progress for a while now were the mission is to reduce
the number of inter-relations as much as possible by better defining
each component's jurisdiction.&lt;/p&gt;
&lt;p&gt;We recently had to tackle a very specific challenge where XiVO's use of
Asterisk's AMI could disrupt basic telephony (A calls B). For people who
don't know, AMI stands for Asterisk Manager Interface and is an Asterisk
component allowing custom clients to connect and interact with Asterisk
via a socket. In the XiVO ecosystem, the CTI daemon (CTId) is the major
consumer of Asterisk's AMI. The CTId is a monothreaded python daemon
responsible of handling XiVO client connections. The more users on a
given XiVO installation, the more XiVO clients can potentially connect
to the CTId and thus, the more traffic the CTId exchanges with the AMI.
This traffic can be quite impressive when considering a XiVO
installation under heavy telephony load. The CTId's event loop is a
synchronous blocking loop and while in this loop, the CTId cannot handle
any other jobs. This weakness would not be so terrible if the CTId
wasn't doing anything else than handling XiVO clients connections as it
would only impact those connections and nothing else. This specific
issue is still a major one and we'll adress how we handled it in a later
post.&lt;/p&gt;
&lt;p&gt;Now if you remember the &lt;a href="/public/xivosoft/xivo_architecture.png"&gt;schema of XiVO's
architecture&lt;/a&gt; in our &lt;a href="/index.php?post/2012/06/11/XiVO-Architecture"&gt;previously
cited post&lt;/a&gt;, you can see
an interconnection between the CTId and the AGI. This relation handled
mainly the reverse directory lookups, used to display a callerID of
incoming call matching a number in a directory. Now this was a major
issue as it meant that any calls passed while the CTId was 'blocked' at
handling AMI traffic would not go through: A cannot call B anymore!&lt;/p&gt;
&lt;p&gt;This was not much of an issue when a typical XiVO installation was
populated with a few users as it almost never happened that calls would
be blocked because of reverse directory lookups (or happened not often
enough for users to even notice and signal the issue). With growing XiVO
installations, it became obviously disruptive.&lt;/p&gt;
&lt;p&gt;The solution was to remove anything from the CTId that could impact
telephony. From this perspective, any calls to the AGI in the CTId where
moved to nothing else than the AGId, the daemon responsible for handling
communications with Asterisk's AGI. It seems quite obvious when you
think of it and one might ask Why oh why was it not already that way? An
ever evolving XiVO dev team with five years at developping XiVO,
learning a whole lot along the way has to be the only responsible
answer.&lt;/p&gt;
&lt;p&gt;XiVO is becoming more mature every day and so is its development team,
producing a software ecosystem always stronger, more mature and more
robust. We love building bridges, bring in the rivers!&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Showing off XIOHv5 prototype PCB in its laser cut acrylic case</title><link href="http://blog.xivo.io/showing-off-xiohv5-prototype-pcb-in-its-laser-cut-acrylic-case.html" rel="alternate"></link><updated>2012-09-03T20:39:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2012-09-03:showing-off-xiohv5-prototype-pcb-in-its-laser-cut-acrylic-case.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Please dear XIOH followers, as we approach the production of our final
PCB, we have tried the PCB in an orange laser cut acrylic case.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Below you can discover the front view of the casing with our famous
analog vintage Socotel S63 phone&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOHv5 orange case
front" src="/public/XIOHv5/.20120903_194503_m.jpg" title="XIOHv5 orange case front, sept. 2012" /&gt;&lt;/p&gt;
&lt;p&gt;You can discover also the back view with all the interfaces of our
appliance (2 usb, 3 GbE, 4 ISDN T0, FXS, FXO) :&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOHv5_orange_case_back" src="/public/XIOHv5/.20120903_194314_m.jpg" title="XIOHv5_orange_case_back, sept. 2012" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For those who are willing to discover our latest prototype during
live-demos, we will be at :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Astricon2012 (Atlanta - 23-25/10/2012) : presenting XiVO Software
    and hosting a booth&lt;/li&gt;
&lt;li&gt;Hackfest 2012 (http://www.hackfest.ca/) : we will be using our XiVO
    IPBX OpenHardware during some hacking contest related to VoIP&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>XIOH prototype version 5: back from factory</title><link href="http://blog.xivo.io/xioh-prototype-version-5-back-from-factory.html" rel="alternate"></link><updated>2012-08-22T10:43:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2012-08-22:xioh-prototype-version-5-back-from-factory.html</id><summary type="html">&lt;h2&gt;Feedback of the factory&lt;/h2&gt;
&lt;p&gt;In order to load the factory's pick-and-place machines (2 distinct ones
were used to assemble bottom, then top, then throug-hole components), we
needed an efficient way of sorting the components. Therefore, we created
a database of the correspondence between our BOM and the stickers used
by the factory to load the feeders. See below for an example of one
sticker for one reference used on the top layer.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOHV5_PCB_STICK_EX" src="/public/XIOHv5/.P1050993_m.jpg" title="XIOHV5_PCB_STICK_EX, août 2012" /&gt;&lt;/p&gt;
&lt;p&gt;Once all the components were ready and sorted out, they were ready to be
carried at the factory for loading and assembling.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOHV5_COMPONANTS_READY" src="/public/XIOHv5/.20120723_001_m.jpg" title="XIOHV5_COMPONANTS_READY, août 2012" /&gt;&lt;/p&gt;
&lt;p&gt;As an automatic machine geek, the best part was the loading and
pick-and-place of the several ICs on the board. This part is quite
impressive because of the efficiency of the placing. Afterwards, the PCB
goes through an oven for 10minutes for the final soldering, then cools
down prior to the manual assembly of the through-holes components.&lt;/p&gt;
&lt;p&gt;Below is a picture with the various IC packages we are using (CPU, ISDN,
FXO/FXS, micro-controllers...)&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOHV5_LOADING_ICS" src="/public/XIOHv5/.20120725_005_m.jpg" title="XIOHV5_LOADING_ICS, août 2012" /&gt;&lt;/p&gt;
&lt;p&gt;We then prepared the through-holes to be manually assembled by the
factory operators, with a schematic of each component in the best order
to respect the mechanical constraints.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOHV5_THROUGH_HOLES" src="/public/XIOHv5/.20120725_013_m.jpg" title="XIOHV5_THROUGH_HOLES, août 2012" /&gt;&lt;/p&gt;
&lt;p&gt;The assembling of those throug-holes components can take up to 30minutes
for complex boards. It has to be checked when there are a lot of
connectors (for instance) on a board. The ready-to-test boards were then
placed on shelves for us to start our debugging.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOHV5_MOUNTING_THOLES" src="/public/XIOHv5/.20120725_012_m.jpg" title="XIOHV5_MOUNTING_THOLES, août 2012" /&gt;&lt;/p&gt;
&lt;p&gt;The first batch of tests was done with 5 of the 50 PCBs in order for us
to start the debugging in our lab.&lt;/p&gt;
&lt;h2&gt;Debugging the PCBs&lt;/h2&gt;
&lt;p&gt;Back to our lab, we were able to start the testing our boards. We did
the following steps in-order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;smoke test: testing the power-supply using current-limited power
    supplies for each voltage level, on a special board without the CPU
    assembled (in order to save one in case of short-circuit on
    the board.)&lt;/li&gt;
&lt;li&gt;flashing the board with our firmwares (programming the
    power-sequence in an MSP430 and a BIOS in an SPI flash.) This
    validates the flashing method and flashing tools/cables.&lt;/li&gt;
&lt;li&gt;booting-up the CPU and testing the serial console&lt;/li&gt;
&lt;li&gt;RAM testing: this validates the calibration and initialization of
    the DDR2 controller by our custom firmware.&lt;/li&gt;
&lt;li&gt;SATA testing: to be able to start the hard drive and the kernel
    image after the complete BIOS boot sequence&lt;/li&gt;
&lt;li&gt;testing the telco interfaces and phone call features.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="XIOHV5_DEBUG_BOARD" src="/public/XIOHv5/.P1050995_m.jpg" title="XIOHV5_DEBUG_BOARD, août 2012" /&gt;&lt;/p&gt;
&lt;p&gt;Above is our main whiteboard listing the issues we have on each PCB, and
how to fix those. This is the most exciting (though stressful) part of
hardware development, as we were able to make progress and get results
in a very short time. We were extastic when we got the first board fully
working with the XiVO software running on it!&lt;/p&gt;
&lt;h2&gt;Final tests&lt;/h2&gt;
&lt;p&gt;The rest is mainly software: we got XiVO running with our kernel drivers
and plan to do some stress testing to see how well our boards fare with
time and use.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOHV5_FULL_RUNNING" src="/public/XIOHv5/.20120802_001_m.jpg" title="XIOHV5_FULL_RUNNING, août 2012" /&gt;&lt;/p&gt;
&lt;h2&gt;Next steps&lt;/h2&gt;
&lt;p&gt;The next steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;finishing the production of the the first 50 PCB batch and start a
    full 4-weeks time period of stress testing on our board to identify
    potential hardware/software bugs,&lt;/li&gt;
&lt;li&gt;validating the hardware and software,&lt;/li&gt;
&lt;li&gt;optimizing the production process for the next batches&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To be continued soon...&lt;/p&gt;
&lt;p&gt;The XiVO Open Hardware team.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO Call Center Reporting Revamp</title><link href="http://blog.xivo.io/xivo-call-center-reporting-revamp.html" rel="alternate"></link><updated>2012-08-02T15:17:00-04:00</updated><author><name>pcadotte</name></author><id>tag:blog.xivo.io,2012-08-02:xivo-call-center-reporting-revamp.html</id><summary type="html">&lt;p&gt;One of the main feature of XiVO 1.2 is the call center reporting.&lt;/p&gt;
&lt;p&gt;Motivation&lt;/p&gt;
&lt;p&gt;The first draft of this new feature proved to be hard to maintain and
slow to generate statistics. Furthermore, the format of the cache (files
containing one month of statistics in JSON format) was not easy to
exploit and required more work while viewing daily statistics that would
use raw data instead of the pre generated cache for speed reasons.&lt;/p&gt;
&lt;p&gt;&lt;img alt="statistic_queue.png" src="/public/.statistic_queue_m.jpg" title="statistic_queue.png, août 2012" /&gt;&lt;/p&gt;
&lt;p&gt;To fix the problems we had with this first version, we decided to
rewrite the cache generation that is not dependent on statistic
configuration, avoiding the need to regenerate the cache every time a
configuration is changed.&lt;/p&gt;
&lt;p&gt;The new cache format uses tables in the asterisk database to store
pre-analyzed data. These tables contains call related information (table
stat_call_on_queue) and statistic for each hours of statistic
(stat_queue_periodic).&lt;/p&gt;
&lt;p&gt;This new format make it a lot faster to generate the cache and easier to
generate tables and graphics in the web interface. Using an hour as the
base time for an entry also fix the problem of overlapping time range
that we had to solve with month based cache, where a week could start in
month n and end in month n + 1.&lt;/p&gt;
&lt;p&gt;Difference from the first version for the user&lt;/p&gt;
&lt;p&gt;The cache is only generated for complete hours. This means that if you
generate the cache at 12h15 the cache will end at 11h59 and the next
time the cache is generated, it will start at 12h00. The cache is also
continuously generated (once a day) and since the cache is independent
of the configuration, it does not have to be generated each time a
change is made to the configuration.&lt;/p&gt;
&lt;p&gt;The way to generate the cache manually at this moment is to run
xivo-stat fill_db from the command line on the XiVO. The generate cache
option of the web interface will run this action when the old cache
won't be required anymore.&lt;/p&gt;
&lt;p&gt;What is done&lt;/p&gt;
&lt;p&gt;Currently (version 12.14) all queue counters are now computed using the
new cache. Some errors are still shown on some page that we could not
port to the new system in time but most should be fixed in the next
version.&lt;/p&gt;
&lt;p&gt;We are also working on the first agent counter that should be available
in version (12.15) and all other agents counters should be added in the
next 2 versions.&lt;/p&gt;
&lt;p&gt;Some changes to the configuration are to expected when our work will be
done with the counters to reflect the new cache generation, but these
changes should be minor and all migration will be handled automatically
as usual.&lt;/p&gt;
&lt;p&gt;Work methodology&lt;/p&gt;
&lt;p&gt;A second aspect of this second version that was not present in the first
one is that we are also developing tools to generate calls and check the
generated statistics to avoid any regressions in future versions. This
process has been more time consuming than developing the counters
themselves but is a step to better test automation for XiVO.&lt;/p&gt;
&lt;p&gt;Documentation&lt;/p&gt;
&lt;p&gt;The documentation for call center statistics is
available&lt;a href="http://documentation.xivo.fr/dev/contact_center/statistics/statistics.html" title="Call center statistics"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The code&lt;/p&gt;
&lt;p&gt;xivo-stat is available at git://git.xivo.fr/official/xivo-stat.git&lt;/p&gt;
&lt;p&gt;xivo-callgen is available at git://git.xivo.fr/official/xivo-callgen.git&lt;/p&gt;
&lt;/p&gt;</summary><category term="xivo 1.2"></category><category term="xivo"></category><category term="software"></category><category term="reporting"></category></entry><entry><title>Preparing the production of our newer prototype (XIOHv5)</title><link href="http://blog.xivo.io/preparing-the-production-of-our-newer-prototype-xiohv5.html" rel="alternate"></link><updated>2012-07-11T10:16:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2012-07-11:preparing-the-production-of-our-newer-prototype-xiohv5.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;The current version of prototype is named XIOHv5&lt;/strong&gt; (XiVO IPBX
OpenHardware version5) and is still developed using 10-layers BRD file
and 30+ pages of SCH (schematics) to handle the different blocks of the
design and assemble them in one PCB. &lt;strong&gt;We have been doing several
optimizations and features adding :&lt;/strong&gt;-removing one DIMM of DDR2-using a
MSP430 micro-controller to handle the power-sequence (critical feature
for the boot of the CPU EP80579)-space optimization for the power supply
and connectors-changing the format of certain connectors (i.e. UART
RS232 to an RJ45 connector)&lt;/p&gt;
&lt;p&gt;Please find below a screenshot of our BRD file (board file in Eagle 6.2)
showing the PCB and displaying the polygons for certain layers&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOHv5-BRD-Polygons" src="/public/XIOHv5/.XIOHv5_PCB_m.jpg" title="XIOHv5-BRD-Polygons, juil. 2012" /&gt;&lt;/p&gt;
&lt;p&gt;Polygons are signal, power and ground wires that assemble zone of wire
to simplify the design and have wires to handle some currents needs on
some power rails that we have. The power rails are numerous on the board
and they should respect the current level needed by each block diagram
(we will make an up-coming on the power rail organization) and namely
the SoC that carries different functionnal block such as MAC, USB, RAM,
UART, and TDM controller.&lt;/p&gt;
&lt;p&gt;The design of these polygons take some times and should checked to be
sure that we don't multiply signals by making polygons of the same
signal with different names. For instance, all GND (ground) polygons
should be connected and named the same.&lt;/p&gt;
&lt;p&gt;Once the board and schematics had been finalized and checked (and
double-checked), we did process FAB files for the PCB manufacturing and
below you can see the picture of our PCB on top of a stack of PCBs ready
to be assembled with the 1000+ components and 150+ different references
of parts.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOHv5-PCB-Stickers" src="/public/XIOHv5/.P1050963_m.jpg" title="XIOHv5-PCB-Stickers, juil. 2012" /&gt;&lt;/p&gt;
&lt;p&gt;Prior to do the assembling in factory, we need check the package for
each of our references and do a BoM (Bill of Materials) optimization to
handle nicely our stock.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Speaking about OpenHardware at SolutionsLinux2012</title><link href="http://blog.xivo.io/speaking-about-openhardware-at-solutionslinux2012.html" rel="alternate"></link><updated>2012-07-11T09:41:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2012-07-11:speaking-about-openhardware-at-solutionslinux2012.html</id><summary type="html">&lt;p&gt;The last &lt;strong&gt;"SolutionsLinux2012"&lt;/strong&gt; fair in Paris was the occasion once
again (as we keep the tradition to have a booth there) to present our
latest developments for XiVO and the current deployments we have in
France and elsewhere. This year, &lt;strong&gt;the local web TV&lt;/strong&gt; was giving many
interesting interviews of OpenSource people (you can follow the Flo2sTV
channel &lt;a href="http://www.youtube.com/user/Flo2sTV" title="here"&gt;here&lt;/a&gt; and the
twitter of Philippe Scoffoni
&lt;a href="https://twitter.com/pscoffoni" title="Philippe Scoffoni twitter"&gt;there&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We had the opportunity to give an &lt;strong&gt;interview about the OpenHardware
movement current status&lt;/strong&gt; (sorry the interview is in french) and some
insights of the projects and products that are available out-there, as
well as the description of an OpenHardware.&lt;/p&gt;
&lt;div class="external-media"
style="margin: 1em auto; text-align: center;"&gt;

&lt;iframe width="640" height="360" src="http://www.youtube.com/embed/QyiHHfr_1zQ?fs=1&amp;amp;feature=oembed" frameborder="0" allowfullscreen&gt;
&lt;/iframe&gt;

[Ou en est-on sur
l'OpenHardware](http://www.youtube.com/watch?v=QyiHHfr_1zQ&amp;list=UUwuwOISdsHyANAgCcykw4UA&amp;index=1&amp;feature=plcp)

&lt;/div&gt;

&lt;/p&gt;</summary></entry><entry><title>Think about XiVO ...</title><link href="http://blog.xivo.io/think-about-xivo.html" rel="alternate"></link><updated>2012-07-09T14:30:00-04:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2012-07-09:think-about-xivo.html</id><summary type="html">&lt;p&gt;... for your holiday ! Have fun for this summer and keep eyes on XiVO.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/public/.20120707_175714_m.jpg" title="20120707_175714.jpg, juil. 2012" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Association Asterisk France</title><link href="http://blog.xivo.io/association-asterisk-france.html" rel="alternate"></link><updated>2012-07-03T19:54:00-04:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2012-07-03:association-asterisk-france.html</id><summary type="html">&lt;p&gt;The association Asterisk France is continuing. Please reading the press
document (in french).&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/info_presse_asterisk-france.pdf"&gt;info_presse_asterisk-france.pdf&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Multicloning with Clonezilla - part 1</title><link href="http://blog.xivo.io/multicloning-with-clonezilla-part-1.html" rel="alternate"></link><updated>2012-06-29T12:12:00-04:00</updated><author><name>bligneul</name></author><id>tag:blog.xivo.io,2012-06-29:multicloning-with-clonezilla-part-1.html</id><summary type="html">&lt;p&gt;First step, you need to boot on Clonezilla from the usb drive.Choose
"Default settings: 800x600", use English language, and select "don't
touch keymap".  &lt;/p&gt;
&lt;p&gt;Then, « Start Clonezilla »&lt;br /&gt;
Select the first option « work with disks or partitions using images »
and « local_dev : use local device »&lt;br /&gt;
Enter  &lt;/p&gt;
&lt;p&gt;Choose the right external hard disk drive in the list (size of HDD can
help you).&lt;br /&gt;
Select « Beginner » mode (you can choose expert mode if want more
options).&lt;br /&gt;
Select « 1-2-mdisks » to restore the XiVO iso file.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Clonezilla-mode-select" src="/public/.clonezilla-select-mode_m.jpg" title="Clonezilla-mode-select, juin 2012" /&gt;&lt;br /&gt;
Use the image to restore and select drives that you want to clone.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="clonezilla-add-hdd" src="/public/.clonezilla-add-hdd_m.jpg" title="clonezilla-add-hdd, juil. 2012" /&gt;&lt;br /&gt;
To finish : y (for yes) and y (yes)  &lt;/p&gt;
&lt;p&gt;After waiting, (5-20min) it's finished : drives are cloned.&lt;br /&gt;
You can « Poweroff » your computer and use your new hdds with XiVO.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO Architecture</title><link href="http://blog.xivo.io/xivo-architecture.html" rel="alternate"></link><updated>2012-06-11T14:56:00-04:00</updated><author><name>cedric</name></author><id>tag:blog.xivo.io,2012-06-11:xivo-architecture.html</id><summary type="html">&lt;p&gt;The architecture of XiVO is still too complicated. As you can see, the
components are virtually all related to each other.&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/xivosoft/xivo_architecture.png" title="XiVO Architecture"&gt;&lt;img alt="XiVO
Architecture" src="/public/xivosoft/.xivo_architecture_m.jpg" title="XiVO Architecture, juin 2012" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We especially have too many requests from different services to the DB.
Since so many components have direct access to the database, there are
risks of data corruption. We currently are doing our best to simplify
this architecture and to give each component its true purpose. A good
example is CONFGEND which was developed to generate the Asterisk
configuration by getting the information from the DB. It does one single
task and it does it well.&lt;/p&gt;
&lt;p&gt;There are many challenges with current XiVO's architecture that we are
adressing or will be working on in the near future. Asterisk's AGI
should not make requests to the CTID. This is why we removed since XiVO
1.2.11 all AGI interraction in the CTID (notice the link between the
CTID and the AGI on the architecture's schema does not exist anymore).
In the same vein, the AGID should have read-only access to the DB and
the CTID should not interact directly with WebServices.&lt;/p&gt;
&lt;p&gt;A bunch of bad practices which we are aware of. We are up to the
challenge and integrating this architecture evolution in our 2-weeks
iterations makes it all even more exiting.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Journée portes ouvertes</title><link href="http://blog.xivo.io/journee-portes-ouvertes.html" rel="alternate"></link><updated>2012-06-11T14:18:00-04:00</updated><author><name>nbouliane</name></author><id>tag:blog.xivo.io,2012-06-11:journee-portes-ouvertes.html</id><summary type="html">&lt;p&gt;&lt;a href="/public/portes_ouvertes-1.png" title="portesouvertes"&gt;&lt;img alt="portesouvertes" src="/public/.portes_ouvertes-1_m.jpg" title="portesouvertes, juin 2012" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Using Reverse Look-ups to Replace Caller IDs</title><link href="http://blog.xivo.io/using-reverse-look-ups-to-replace-caller-ids.html" rel="alternate"></link><updated>2012-06-11T11:04:00-04:00</updated><author><name>pcadotte</name></author><id>tag:blog.xivo.io,2012-06-11:using-reverse-look-ups-to-replace-caller-ids.html</id><summary type="html">&lt;p&gt;XiVO directories are a way to store contact information to be able to do
directory look-ups from the XiVO client and from supported phones.
Another useful feature of directories, is the ability to set a reverse
directory and replace incoming caller IDs with information from the
directory.&lt;/p&gt;
&lt;p&gt;This article will show you how to setup reverse look-up on your XiVO. It
is assumed that you already have a working directory setup on your XiVO.&lt;/p&gt;
&lt;p&gt;The first step is to set the reverse match fields in your directory
configuration. These fields are the one that will be used to search
against the incoming number. Interesting fields for reverse look-up are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;phonebooknumber.home.number&lt;/li&gt;
&lt;li&gt;phonebooknumber.mobile.number&lt;/li&gt;
&lt;li&gt;phonebooknumber.office.number&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="reverse_1.png" src="/public/.reverse_1_m.jpg" title="reverse_1.png, juin 2012" /&gt;&lt;/p&gt;
&lt;p&gt;The second step is to setup the field that will be shown in response to
a reverse look-up. This field is configured in the Mapped fields list.
All you have to do is add a field with the name &lt;strong&gt;reverse&lt;/strong&gt; and the
value will be used as the caller ID name of incoming calls.&lt;/p&gt;
&lt;p&gt;The last step is to add the configured directory to the list of reverse
directories available for look up. Under reverse directories, in the
related directories section add each directory you want to be able to
access using reverse look-ups. It is usually not interesting to include
internal directory in reverse look-ups since internal users already have
a caller ID.&lt;/p&gt;
&lt;p&gt;&lt;img alt="reverse_2.png" src="/public/.reverse_2_m.jpg" title="reverse_2.png, juin 2012" /&gt;&lt;/p&gt;
&lt;p&gt;Note that reverse look-up will work as described in version 1.2.10 and
later, another good reason to do a xivo-upgrade.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO is a free software and YES you can contribute !</title><link href="http://blog.xivo.io/xivo-is-a-free-software-and-yes-you-can-contribute.html" rel="alternate"></link><updated>2012-06-04T12:31:00-04:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2012-06-04:xivo-is-a-free-software-and-yes-you-can-contribute.html</id><summary type="html">&lt;p&gt;One of our customers Medes has contributed an external script for XiVO.
They have enhanced the features (eg. do not disturb, call forward ...)
by creating a new python script. They released the script under the
GPLv3 license. The result of this script is :&lt;/p&gt;
&lt;p&gt;&lt;img alt="aastra_resultat.jpg" src="/public/.aastra_resultat_m.jpg" title="aastra_resultat.jpg, juin 2012" /&gt;&lt;/p&gt;
&lt;p&gt;To activate this new function, simply change the aastra template in your
provisioning server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;xml status scroll delay: 2&lt;/span&gt;
&lt;span class="x"&gt;action uri registered: https://&amp;lt;YOUR_URL&amp;gt;/?identity=&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;DISPLAYNAME&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;action uri onhook: https://&amp;lt;YOUR_URL&amp;gt;/?identity=&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;DISPLAYNAME&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;action uri poll: https://&amp;lt;YOUR_URL&amp;gt;/?identity=&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;DISPLAYNAME&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;action uri poll interval: 60&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more information about the template go to : &lt;a href="http://documentation.xivo.fr/production/administration/provisioning/adv_configuration.html#creating-custom-templates"&gt;creating custom
templates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The code is available on
&lt;a href="https://gitorious.org/xivo/xivo-experimental/trees/master/xivoaastrafrommedes"&gt;gitorious&lt;/a&gt;
in our xivo-experimental repository.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Around XiVO - pxe and preseeding</title><link href="http://blog.xivo.io/around-xivo-pxe-and-preseeding.html" rel="alternate"></link><updated>2012-05-30T19:47:00-04:00</updated><author><name>atarakt</name></author><id>tag:blog.xivo.io,2012-05-30:around-xivo-pxe-and-preseeding.html</id><summary type="html">&lt;p&gt;Now that we have a functional PXE installation, we want to fully
automatise the installation process. Debian have a useful solution
called 'preseeding'. Preseeding provides a way to set answers to
questions asked during the installation process.&lt;/p&gt;
&lt;p&gt;You can find Debian documentation about preseeding on Debian wiki :
http://wiki.debian.org/DebianInstaller/Preseed&lt;/p&gt;
&lt;p&gt;We are going to be using the default Debian preseed file. We are going
to configure an HTTP server to serve this file to the Debian installer
using nginx.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ apt-get install nginx

$ cat /etc/nginx/sites-enabled/myhost
    server &lt;span class="o"&gt;{&lt;/span&gt;
      listen 80&lt;span class="p"&gt;;&lt;/span&gt;
      server_tokens off&lt;span class="p"&gt;;&lt;/span&gt;
      server_name myhost.mydomain.com&lt;span class="p"&gt;;&lt;/span&gt;
      root /data&lt;span class="p"&gt;;&lt;/span&gt;

      location / &lt;span class="o"&gt;{&lt;/span&gt;
        autoindex on&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and restart the server.&lt;/p&gt;
&lt;p&gt;First, we need to create /data directory and get the preseed file from
this directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir /data &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; /data
$ wget http://www.debian.org/releases/squeeze/example-preseed.txt -O preseed.cfg
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We only do some small changes in the default file to perform a fully
auto installation :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* do not create a user account

    d-i passwd/make-user boolean false

* add the root password (will be changed after the install process

    d-i passwd/root-password password r00tme
    d-i passwd/root-password-again password r00tme

* change the disk path for using in a virtual machine

    d-i partman-auto/disk string /dev/vda

* install a minimal system (without X)

    tasksel tasksel/first multiselect standard
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, we have to modify
/usr/lib/debian-installer/images/i386/text/boot-screens/menu.cfg to
specify to the installer that it must use a preseed file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;label squeeze-i386
    menu label squeeze i386
    kernel linux
    append vga=normal initrd=initrd.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;must be&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;label debian-squeeze                                                                                                                                                                           
    menu label Install Auto Debian Squeeze                                                                                                                                                     
    kernel linux                                                                                                                                                                               
    append initrd=initrd.gz rw auto=true priority=critical url=myhost.mydomain.com/./preseed.cfg locale=en_US.UTF-8 interface=auto hostname=squeeze --
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can find some explanations about the different parameters on
http://hands.com/d-i/&lt;/p&gt;
&lt;p&gt;You have to use a specific url in this case (the "/./" is very
important).&lt;/p&gt;
&lt;p&gt;Or if you want to install a XiVO system, you can use this line to use
our preseed&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;label XiVO
       menu label XiVO
       kernel linux
       append initrd=initrd.gz rw auto=true priority=critical url=http://mirror.xivo.fr classes=skaro locale=en_US.UTF-8 interface=auto hostname=xivo --
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, we only have an url. It's because we use a specific structure in
our /data directory (and an entry d-i in our nginx configuration) :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/data
├── d-i
│   ├── lenny
│   │   ├── classes
│   │   └── lib
│   └── squeeze
│       ├── classes
│       ├── docs
│       └── lib
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can find our preseed repository on
git://git.xivo.fr/official/debian-installer.git&lt;/p&gt;
&lt;p&gt;In a next post, I will explain how we use the class to customize our
installation.&lt;/p&gt;
&lt;/p&gt;</summary><category term="PXE"></category></entry><entry><title>XiVO all over the world</title><link href="http://blog.xivo.io/xivo-all-over-the-world.html" rel="alternate"></link><updated>2012-05-25T19:16:00-04:00</updated><author><name>jylebleu</name></author><id>tag:blog.xivo.io,2012-05-25:xivo-all-over-the-world.html</id><summary type="html">&lt;p&gt;From ISO download statistics, you may see that XiVO is used in a lot of
countries over the world :&lt;/p&gt;
&lt;p&gt;&lt;img alt="xivoworld.png" src="/public/xivoworld.png" title="xivoworld.png, mai 2012" /&gt;&lt;/p&gt;
&lt;p&gt;France, Algeria, Argentina, Austria, Belgium, Brazil, Canada, Colombia,
Croatia, Czech Republic, Finland, Germany, Great Britain,
Greece,Hungary, Iceland, Indonesia, Israel, Italy, Lithuania,
Luxembourg, Montenegro, Netherlands, New Caledonia (French), Poland,
PortugalRussian Federation, Slovak Republic, South Africa, Spain,
Switzerland, United Kingdom, United States, Vietnam&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>How is the XiVO-SCCP development going ?</title><link href="http://blog.xivo.io/how-is-the-xivo-sccp-development-going.html" rel="alternate"></link><updated>2012-05-01T15:07:00-04:00</updated><author><name>nbouliane</name></author><id>tag:blog.xivo.io,2012-05-01:how-is-the-xivo-sccp-development-going.html</id><summary type="html">&lt;p&gt;From XiVO 1.2.5 we started to integrate the SCCP management directly
into the web interface.It means that now, people installing a XiVO
server can natively use the SCCP technologywhen creating new lines,
without the need to manually install the sccp channel driver andediting
the configuration file. As the sccp library evolve, the options
available throughthe web interface will also be expanded.&lt;/p&gt;
&lt;p&gt;Lately we've been working on the multi-instance per line, which will be
released with XiVO 1.2.7 this week.Basically the multi-instance per line
is the ability to receive or make many calls at the same time.While only
one call can be active at a time, it is possible to keep the other call
alive but on hold.You can then toggle between the calls to pickup any of
them. Which will put the current active call on hold,and will set the
selected call as active.&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/libsccp/IMG_20120501_092831.jpg" title="7960-multi-instance1"&gt;&lt;img alt="7960-multi-instance1" src="/public/libsccp/.IMG_20120501_092831_s.jpg" title="7960-multi-instance1, mai 2012" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We still have a long list of features we want to write and make
available directly through XiVO.Even though we are still in early
development, I encourage everyone that have CISCO phones to installand
try the SCCP library. Either via XiVO or by manually installing the sccp
channel driver.&lt;/p&gt;
&lt;p&gt;For those having CISCO phones that use the SCCP technology, we've put
online a tutorial to help you get this done:
&lt;a href="http://documentation.xivo.fr/dev/administration/sccp/sccp.html"&gt;http://documentation.xivo.fr/dev/administration/sccp/sccp.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At the bottom of the tutorial, you will also find the list of feature
and telephone type that we actually support.We hope to extend this list
as time goes, but we need your help !&lt;/p&gt;
&lt;p&gt;At this point of development, we need more people that use the SCCP
library. As the number of people using itwill increase, the number of
bugs reported will increase and hence the number of fix and enhancement.
At the end, everbody win.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>1.2.2 1.2.3 1.2.4 1.2.5 here we go</title><link href="http://blog.xivo.io/122-123-124-125-here-we-go.html" rel="alternate"></link><updated>2012-04-13T00:17:00-04:00</updated><author><name>jylebleu</name></author><id>tag:blog.xivo.io,2012-04-13:122-123-124-125-here-we-go.html</id><summary type="html">&lt;p&gt;Last September we started to change our development methodology to use
SCRUM.&lt;/p&gt;
&lt;p&gt;The main objective was to be able to deliver very quickly new XiVO
versions.Our sprints are two weeks long, and at the end of a sprint we
deliver a new release of XiVO that you can use by using the new
&lt;em&gt;xivo-upgrade&lt;/em&gt; tool.Every two weeks on Monday we start with the planning
meeting, where we define what will be done during the sprint. Each bug
or task is written on a post it and put on our white board.&lt;/p&gt;
&lt;p&gt;Every day, at 09h00 we do our daily Scrum, small stand up meeting where
all the team members answer the three scum traditional questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What did I do since yesterday?&lt;/li&gt;
&lt;li&gt;What am I planning to do today?&lt;/li&gt;
&lt;li&gt;Anything blocks me ?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Optionally at the end of the stand up meeting, we can start a small
technical session about software architecture, code review and now that
we moved to a bigger office, we can draw on the walls and do design
review.&lt;/p&gt;
&lt;p&gt;At the middle of the second week, on Wednesday we stop our development,
finish our commits, and build the release. At this time starts the
functional testing period. Today we run more than 350 functional tests
which are described in our test manager
&lt;a href="http://testlink.xivo.fr" title="testlink"&gt;testlink&lt;/a&gt;. These tests are partly
automated, and one of our goal is to be able to automate more and more
tests. Furthermore, every day some of our functional tests are run
automatically using our continuous integration server
&lt;a href="http://jenkins.xivo.fr/" title="jenkins"&gt;&lt;/a&gt; in addition to the unit tests
covering part of XiVO software.Once the tests are ok, the delivery check
list helps us to not forget anything to be sure you will be able to
xivo-upgrade your installation without any pain.&lt;/p&gt;
&lt;p&gt;Last but not least, we do our sprint retrospective to be able to find
ways to improve our process. At the end, it's time for beer !&lt;/p&gt;
&lt;p&gt;Today the main point is to be able to improve XiVO strength, and to
correct and deliver very quickly any problems you may have. New features
will come the second part of 2012 once this objective will be achieved.&lt;/p&gt;
&lt;p&gt;It is very encouraging to see that in 2009 it took us on average &lt;strong&gt;315&lt;/strong&gt;
days to close an issue, in 2010, 295 days, in 2011, 127 days, and &lt;strong&gt;this
year it takes only 28 days&lt;/strong&gt; in average to close an open issue. This is
not finish we still have a long road, but thanks to the great team
working on XiVO, things improve every day.&lt;/p&gt;
&lt;p&gt;So stay tune, every two weeks you will get a new flavor of XiVO, more
and more reliable and with hopefully more and more features.&lt;/p&gt;
&lt;p&gt;If you'd like to participate in this adventure do not hesitate to
contact us,&lt;a href="http://www.avencall.com/index.php?option=com_neorecruit&amp;amp;Itemid=15&amp;amp;lang=en"&gt;we are looking for passionate
people&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>HTTP/TFTP requests processing in provd - part 2</title><link href="http://blog.xivo.io/httptftp-requests-processing-in-provd-part-2.html" rel="alternate"></link><updated>2012-04-12T12:40:00-04:00</updated><author><name>hexanol</name></author><id>tag:blog.xivo.io,2012-04-12:httptftp-requests-processing-in-provd-part-2.html</id><summary type="html">&lt;p&gt;Let's take the same example as we did last time, i.e. let's say we have
a xivo-aastra plugin installed.&lt;/p&gt;
&lt;p&gt;So we plug a brand new Aastra 6731i on our network. The phone then does
the following HTTP request:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;GET&lt;/span&gt; &lt;span class="nn"&gt;/Aastra/aastra.cfg&lt;/span&gt; &lt;span class="kr"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="l"&gt;Aastra6731i MAC:00-11-22-33-44-55 V:3.2.2.1136-SIP&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The "device info extraction" step is then able to extract the following
information:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{&amp;#39;vendor&amp;#39;: &amp;#39;Aastra&amp;#39;, &amp;#39;model&amp;#39;: &amp;#39;6731i&amp;#39;, &amp;#39;version&amp;#39;: &amp;#39;3.2.2.1136&amp;#39;,
 &amp;#39;mac&amp;#39;: &amp;#39;00:11:22:33:44:55&amp;#39;, &amp;#39;ip&amp;#39;: &amp;#39;192.168.1.100&amp;#39;}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This information is then passed to a "device retriever" object. Here's a
pseudo code version of what it looks like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def process_request(request):
    device_info = device_info_extractor.extract(request)
    device = device_retriever.retrieve(device_info)
    ...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A device object can be seen as a superset of a device info object. Both
are dictionaries, but the device object can contain keys that the device
infoobject never will, like an "id", a "plugin" and a "config" key.&lt;/p&gt;
&lt;p&gt;Let's see in more details what happens in this "device retriever"
object:&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/provd/device-retriever.png" title="Device retriever"&gt;&lt;img alt="Device
retriever" src="/public/provd/.device-retriever_m.jpg" title="Device retriever, avr. 2012" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The device retriever will ask one at a time the different other device
retrievers until one returns something. In our example, since the provd
serverdoesn't know yet about our Aastra, the "mac device retriever" will
returns nothing because there is no device with the MAC address
00:11:22:33:44:55 in the device database, then the "SN (serial number)
device retriever" will returns nothing because no SN is used with
Aastra, then the "ip device retriever" will also returns nothing, and
finally, the "add device retriever" will add the new device to the
database and return it.&lt;/p&gt;
&lt;p&gt;On the next requests of our Aastra, the "mac device retriever" will
search for a device with the given MAC and will then return the device
object that was added previously.&lt;/p&gt;
&lt;p&gt;From what we just learned, we can see that it's at this step that
devices are automatically added to provd. That said, the automatic
plugin association and automatic config association (taken from a
"template" config) is not done at this step but later on, which is
something we'll see in more details in my next blog post.&lt;/p&gt;
&lt;p&gt;If provd had to support only Aastra phones, only the "mac device
retriever" and the "add device retriever" would be needed (and some part
of provd would be a whole lot simpler also). That said, the reality is
more complex. Some phones are only doing TFTP requests, which means no
User-Agent header and little information to extract for some requests,
sometimes only the IP address. This is where the "ip device retriever"
comes in handy. It's usually able to find the right device by only using
the IP address. This is possible because provd always try to maintain
the most up to date info about IP address used by devices.&lt;/p&gt;
&lt;p&gt;That said, for some devices, there is some scenarios where the system
just isn't powerful enough:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you power on a new Linksys/Cisco SPA3102, which is given the
    192.168.1.101 IP address by the DHCP server&lt;/li&gt;
&lt;li&gt;the phone then ask the /spa3102.cfg file via TFTP&lt;/li&gt;
&lt;li&gt;provd knows the request came from a Linksys SPA3102 with the
    192.168.1.101 IP address, but doesn't know the MAC address. No
    worry, it still adds it to the device database.&lt;/li&gt;
&lt;li&gt;the phone then ask the /001122334477.xml file, still via TFTP.&lt;/li&gt;
&lt;li&gt;provd is able to retrieve the device by using the IP address, and
    now knows that the device behind the request has the MAC
    00:11:22:33:44:77&lt;/li&gt;
&lt;li&gt;the phone is unplugged from the network&lt;/li&gt;
&lt;li&gt;a couple of days later, the phone is power on again. This time, the
    DHCP server gives it the 192.168.1.102 IP address&lt;/li&gt;
&lt;li&gt;the phone then ask the /spa3102.cfg file via TFTP&lt;/li&gt;
&lt;li&gt;the only information that can used to retrieve the device is the
    IP address. That said, no device in the device database use this
    IP address. provd will then create a new device, believing its a
    new device.&lt;/li&gt;
&lt;li&gt;the phone then ask the /001122334477.xml file&lt;/li&gt;
&lt;li&gt;provd is then able to retrieve the first device by using the
    MAC address. It then updates the IP address information of
    this device. Unfortunately, the previous step created a device in
    the database for nothing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The system still works in these cases. The only problem is that you get
junk devices in provd device's database, and these can only be removed
manually. They are not causing any real harm except then adding some
confusion as to why theses devices are in the database.&lt;/p&gt;
&lt;p&gt;There is a way to get by this problem, and it's called "dhcp
integration". Yes. Just believe me.&lt;/p&gt;
&lt;p&gt;So that's all folks. Next time, if your brain still hasn't suffered from
an epileptic seizure, get ready because we'll be talking about the
"device updating" step.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Two new platforms for the XiVO Client</title><link href="http://blog.xivo.io/two-new-platforms-for-the-xivo-client.html" rel="alternate"></link><updated>2012-04-04T17:10:00-04:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2012-04-04:two-new-platforms-for-the-xivo-client.html</id><summary type="html">&lt;p&gt;Until now, the XiVO Client was released for only two different
platforms : Windows, Debian GNU/Linux and Ubuntu. Yes, that makes three,
but Ubuntu is based upon Debian, and the two versions do not differ.&lt;/p&gt;
&lt;p&gt;However, the Qt framework that is used by the XiVO Client allows
applications to be also built for Mac OS. Furthermore, back in the 1.1
version, the XiVO Client was supported on Mac OS. We then reused the old
building script that were rotting in our Git repository and cleaned them
up to allow us to build a new Mac version of the XiVO Client.&lt;/p&gt;
&lt;p&gt;Here's what it looks like :&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/xivosoft/xivoclient-macos.png" title="XiVO Client Mac OS"&gt;&lt;img alt="XiVO Client Mac
OS" src="/public/xivosoft/.xivoclient-macos_m.jpg" title="XiVO Client Mac OS, avr. 2012" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The stable version will be released at the same time as other platforms,
by the end of the week, with the XiVO 1.2.5 release.&lt;/p&gt;
&lt;p&gt;For hackers who would want to play around with the XiVO Client's source
code on Mac OS (or other platforms), the instructions for building and
coding can be found here :
http://documentation.xivo.fr/dev/developers/xivo_client/xivo_client.html&lt;/p&gt;
&lt;p&gt;Another big news, even though Archers are (unfortunately ;) ) a bit
fewer than Mac users, the XiVO Client package for Archlinux on the AUR
is also being restored, and will soon be available in the AUR. The two
packages already here have not been updated since last year.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Upgrading XiVO with \"xivo-upgrade\"</title><link href="http://blog.xivo.io/upgrading-xivo-with-xivo-upgrade.html" rel="alternate"></link><updated>2012-03-29T15:28:00-04:00</updated><author><name>cedric</name></author><id>tag:blog.xivo.io,2012-03-29:upgrading-xivo-with-xivo-upgrade.html</id><summary type="html">&lt;p&gt;In XiVO version 1.2.2, a new package has been introduced, xivo-upgrade.
This new script must be usedto make sure that upgrades are completed
properly. The objective is to minimize differences between machinesand
to control the environment in case of problems.&lt;/p&gt;
&lt;p&gt;We had many problems to work around:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;questions to answer about replacing packaged files that have been
    modified&lt;/li&gt;
&lt;li&gt;reload services when libraries are modified&lt;/li&gt;
&lt;li&gt;modify the database schema when needed&lt;/li&gt;
&lt;li&gt;showing the current and new version when upgrading&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We decided to put this system in place to keep upgrades simples and
transparent to the end ~~user~~ admin.The goal being to stay as SIMPLE
as possible!&lt;/p&gt;
&lt;p&gt;Too many people are stressed by their IPBX upgrades!&lt;img alt="Stress
Man" src="/public/human_pro/.file0001382919230_s.jpg" title="Stress Man, mar. 2012" /&gt;&lt;/p&gt;
&lt;p&gt;But not with
XiVO!&lt;img alt="Congratulation" src="/public/human_pro/.file6741271974648_s.jpg" title="Congratulation, mar. 2012" /&gt;&lt;/p&gt;
&lt;p&gt;No one should be afraid of the side effects of an upgrade!&lt;/p&gt;
&lt;h2&gt;Technical informations&lt;/h2&gt;
&lt;p&gt;This package allows the administrator to upgrade his XiVO securely and
in a way validated by the dev team.The script executes many steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;xivo-upgrade upgrade, to get the latest modifications to the upgrade
    process&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade confirmation if upgrades are available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the answer is NO, the upgrade is aborted&lt;/li&gt;
&lt;li&gt;If the answer is YES, the script continues to the next step&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pre-upgrade scripts are run.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;XiVO is upgraded&lt;/li&gt;
&lt;li&gt;Post-upgrade scripts are executed.&lt;/li&gt;
&lt;li&gt;All XiVO services are restarted in the right order.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Package architecture:&lt;/p&gt;
&lt;p&gt;Binaries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xivo-upgrade (Update xivo-upgrade package and
    execute real-xivo-upgrade)&lt;/li&gt;
&lt;li&gt;real-xivo-upgrade (Execute upgrade of XiVO and restart services)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Libraries path: /usr/share/xivo-upgrade/&lt;/p&gt;
&lt;p&gt;Directories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pre-upgrade.d (All files in this directory will be executed before
    upgrading XiVO)&lt;/li&gt;
&lt;li&gt;post-upgrade.d (All files in this directory will be executed after
    XiVO upgrade)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Current post-install scripts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update template for device configuration.&lt;/li&gt;
&lt;li&gt;Update all device configurations to integrate the backup_proxy_ip
    from the HA configuration.&lt;/li&gt;
&lt;li&gt;Set default web-interface language to english.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO high availability</title><link href="http://blog.xivo.io/xivo-high-availability.html" rel="alternate"></link><updated>2012-03-14T18:40:00-04:00</updated><author><name>pcadotte</name></author><id>tag:blog.xivo.io,2012-03-14:xivo-high-availability.html</id><summary type="html">&lt;p&gt;High availability is available in XiVO since version 1.2.3. The current
use cases is to be able to get telephony service back in less than 5
minutes in case of a network or power failure on the master XiVO.&lt;/p&gt;
&lt;p&gt;The architecture is pretty simple at the time of this writing. The
configuration database is replicated every hours to a slave XiVO. The
slave XiVO pings the master XiVO every 30 seconds and launches asterisk
if the master is down. The slave will also stop asterisk if the master
is turned back up. The check (a ping) is pretty simple at the moment,
this means that a fail-over will not happen if asterisk or any other
service has crashed, monit should be able to restart the crashed service
in most cases anyway.&lt;/p&gt;
&lt;p&gt;To enable this feature, go to &lt;em&gt;Configuration, High availability&lt;/em&gt;. Choose
master node on the master and enter the slave's IP address in the remote
address field. On the slave, choose slave node and enter the master's IP
address in the remote address field.&lt;/p&gt;
&lt;p&gt;&lt;img alt="ha_master.png" src="/public/.ha_master_m.jpg" title="ha_master.png, mar. 2012" /&gt;&lt;/p&gt;
&lt;p&gt;There is no way to trigger a synchronization between master and slave
from the web interface, a work around is to launch
xivo-master-slave-db-replication &amp;lt;slave-ip&amp;gt; on the master XiVO.
This might be useful if you just finished your configuration and want to
trigger a first replication or for test purposes.&lt;/p&gt;
&lt;p&gt;Some limitations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This solution uses the backup registrar from the phones, see the
    &lt;a href="http://documentation.xivo.fr" title="documentation"&gt;documentation&lt;/a&gt; for
    supported phones.&lt;/li&gt;
&lt;li&gt;Voice mail messages are not replicated between master and slave. A
    solution is to attach the message and to mail it in the notification
    and delete the message from the server when high availability
    is enabled.&lt;/li&gt;
&lt;li&gt;CEL are not replicated between master and slave. Calls on the slave
    are logged on the slave and calls on the master are logged on
    the master.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>Around XiVO - pxe server setup</title><link href="http://blog.xivo.io/around-xivo-pxe-server-setup.html" rel="alternate"></link><updated>2012-03-01T20:07:00-05:00</updated><author><name>atarakt</name></author><id>tag:blog.xivo.io,2012-03-01:around-xivo-pxe-server-setup.html</id><summary type="html">&lt;p&gt;This is the second part of the description of the XiVO installation
process.&lt;/p&gt;
&lt;p&gt;I'm going to describe how to setup a simple pxe server.&lt;/p&gt;
&lt;p&gt;You need to have 2 services enabled on your server, dhcp and tftp.&lt;/p&gt;
&lt;p&gt;Dhcp is used to give ip parameters to join the tftp server from the
client,the tftp server serves the files needed to install a debian
system.&lt;/p&gt;
&lt;p&gt;On debian system, you have to install isc-dhcp-server, here is a
minimaldhcp configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#/etc/dhcp/dhcpd.conf
ddns-update-style none;
option domain-name &amp;quot;mydomain.com&amp;quot;;
option domain-name-servers 10.10.32.1;
default-lease-time 600;
max-lease-time 7200;
log-facility local7;
subnet 10.10.32.0 netmask 255.255.255.0 {
    range 10.10.32.10 10.10.32.20;
    option routers 10.10.32.1;
    next-server 10.10.32.1;
    option tftp-server-name &amp;quot;10.10.32.1&amp;quot;;
    filename &amp;quot;pxelinux.0&amp;quot;;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can test your dhcp configuration by booting a machine on pxe to
ensurethat the dhcp configuration is functionnal :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Mar  1 13:44:16 arkham dhcpd: DHCPDISCOVER from 52:54:00:d3:44:27 via br1
   Mar  1 13:44:17 arkham dhcpd: DHCPOFFER on 10.10.32.10 to 52:54:00:d3:44:27 via br1
   Mar  1 13:44:17 arkham dhcpd: DHCPDISCOVER from 52:54:00:d3:44:27 via br1
   Mar  1 13:44:17 arkham dhcpd: DHCPOFFER on 10.10.32.10 to 52:54:00:d3:44:27 via br1
   Mar  1 13:44:19 arkham dhcpd: DHCPREQUEST for 10.10.32.10 (10.10.32.1) from 52:54:00:d3:44:27 via br1
   Mar  1 13:44:19 arkham dhcpd: DHCPACK on 10.10.32.10 to 52:54:00:d3:44:27 via br1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we have to install and configure a tftp server, we're going to
installtftpd-hpa. You have to install debian-installer-4.0-netboot-i386
too. Thispackage provide all the files used to install a fresh debian
system by pxe.&lt;/p&gt;
&lt;p&gt;You have to modify tftp_directory on /etc/default/tftpd-hpa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TFTP_DIRECTORY=&amp;quot;/usr/lib/debian-installer/images/i386/text&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and restart the tftp server to apply your modification.&lt;/p&gt;
&lt;p&gt;You have to edit 2 files to finish your configuration: menu.cfg and
syslinux.cfg&lt;/p&gt;
&lt;p&gt;You have to modify include and default path in boot-screens/syslinux.cfg&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# D-I config version 2.0
   include boot-screens/menu.cfg
   default boot-screens/vesamenu.c32
   prompt 0
   timeout 0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You have to add to boot-screens/menu.cfg&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;label squeeze-i386
       menu label squeeze i386
       kernel linux
       append vga=normal initrd=initrd.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can now test your modification by booting a computer on your subnet,
herethe screen that you should view if your configuration is ok&lt;/p&gt;
&lt;p&gt;&lt;img alt="pxe_screen.png" src="/public/pxe_screen.png" title="pxe_screen.png, mar. 2012" /&gt;&lt;/p&gt;
&lt;p&gt;In the next post, I will explain an advanced pxe configuration and how
to usepreseeding to execute an automatic installation.&lt;/p&gt;
&lt;/p&gt;</summary><category term="PXE"></category></entry><entry><title>SCCPp and continuous integration</title><link href="http://blog.xivo.io/sccpp-and-continuous-integration.html" rel="alternate"></link><updated>2012-02-20T14:17:00-05:00</updated><author><name>nbouliane</name></author><id>tag:blog.xivo.io,2012-02-20:sccpp-and-continuous-integration.html</id><summary type="html">&lt;p&gt;SCCPp is a small tool that we developed in parallel of our Asterisk sccp
channel. Its main purpose is to imitate a real cisco phone in a pure
virtual way. One of the main goal behind it is to be able to do
continuous integration. By coupling SCCPp with Asterisk testsuite and
Jenkins we are able to automate tests that we would normally do
manually. This way, when a commit is pushed, it trigger a task that
launch the script responsible to update and compile the source, to pass
every test in the list and to report if something went wrong.&lt;/p&gt;
&lt;p&gt;Only basic test are implemented via SCCPp at the present moment. We can
simulate the full protocol exchange involved when a phone connect and
authenticate itself to the server. Another supported option is the
stress test of a configured device. In this mode, SCCPp start two
threads and dial the device at random interval. The goal here is to pass
through as much code as possible and to make sure there is no regression
in the code under known scenarios.&lt;/p&gt;
&lt;p&gt;SCCPp doesn't support the RTP protocol (Real-Time Transport Protocol) at
the present moment. What it mean is that we can't simulate the
transportation of the voice from a device to another. The development of
SCCPp is still at an early stage, and many more features will be added
in the future.&lt;/p&gt;
&lt;p&gt;As the complexity of the libsccp increase, we need more tests to ensure
that a change in the code, such a bug fix, do not introduce new faults.
Functional testing is only one part of the solution, even if it's a
powerful one to ensure that specific cases work well, it says nothing
about the internal. The other half of the solution is to unit test the
code. This is a method by which individual units of source code are
tested to ensure they perform properly. Fortunately, Asterisk has its
own framework that allow us to easily write unit test and to trigger
them to see if they pass correctly. In another post, we will present
what can be done with this Asterisk unit test framework and how it can
help to do TDD (Test Driven Development).&lt;/p&gt;
&lt;p&gt;If you are interested to play with SCCPp, you can get the source code at
this address:
&lt;a href="http://git.proformatique.com/?p=official/sccpp.git;a=summary" title="http://git.proformatique.com/?p=official/sccpp.git;a=summary"&gt;http://git.proformatique.com/?p=off...&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO 1.2</title><link href="http://blog.xivo.io/xivo-12.html" rel="alternate"></link><updated>2012-02-14T19:35:00-05:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2012-02-14:xivo-12.html</id><summary type="html">&lt;p&gt;As we enter 2012, we continue our development to better meet market
expectations allowing XiVO to be deployed in more companies. XiVO is a
real open and free alternative for your business phone system and it
will allow you to go even further. It is with great pleasure that I
announce the arrival of this new major release of XiVO which is also our
last considering that our development model is replaced by the agile
methodology (SCRUM).&lt;/p&gt;
&lt;p&gt;Why do we change ?&lt;/p&gt;
&lt;p&gt;Just because we want to be closer to your requests, be able to stand
out, constantly innovate and for this we need a new vision of
development. It's been several months since we changed our habits, our
ways of building software, our vision of what a software is and we will
continue in that direction. We still have a long way to go but it only
makes XiVO better for everyone.&lt;/p&gt;
&lt;p&gt;&lt;img alt="xivo-web-1-2.png" src="/public/.xivo-web-1-2_m.jpg" title="xivo-web-1-2.png, fév. 2012" /&gt;&lt;/p&gt;
&lt;p&gt;In this new release we have upgraded the operating system from Lenny to
Squeeze, updated Asterisk by installing and using the last “Long Term
Supported” 1.8 version. These major changes are not only naturally
bringing us a bunch of new native functionalities but also better
performance and stability.&lt;/p&gt;
&lt;p&gt;Regarding XiVO, we reviewed our provisioning server which was designed
at the beginning of XiVO and was not suited any more to the big
architectures we are targeting.&lt;/p&gt;
&lt;p&gt;We have refreshed the web interface in terms of functionality and
ergonomics to meet the new functionalities provided by Asterisk. We also
changed the way configuration is done by using a new server dedicated to
configuration management.&lt;/p&gt;
&lt;p&gt;The news also made us realize that we were not sure where we go with
mysql and we chose to use Postgres as a basis to save our
configurations.TDM card drivers are also updated when this new release
is installed.&lt;/p&gt;
&lt;p&gt;CTI server and XiVO client were also mainly rewritten and refactored.&lt;/p&gt;
&lt;p&gt;With this new release we also started to work on refactoring some
features which are not delivered now any more. At first, high
availability and contact center are our current priorities and will be
offered in the next coming releases.Our development method is based on
short iterations of 2 weeks, which will produce a finished and working
product. So every 2 weeks a new release is produced and you will be able
to upgrade and enjoy bug fixes and new features. Do not hesitate to
follow http://projects.xivo.fr and http://documentation.xivo.fr/ to get
a better view.&lt;/p&gt;
&lt;p&gt;We will go through our process in more details in a later post to
describe what we have set up in term of tests, documentation, bug
tracking etc ....&lt;/p&gt;
&lt;p&gt;Below what's new in this release at a glance :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Asterisk 1.8 (New options, SSL authentication, etc ...)&lt;/li&gt;
&lt;li&gt;Web interface&lt;ul&gt;
&lt;li&gt;New way of defining schedules&lt;ul&gt;
&lt;li&gt;Time zones&lt;/li&gt;
&lt;li&gt;More than one time slice per schedule&lt;/li&gt;
&lt;li&gt;More than one action when on closed&lt;/li&gt;
&lt;li&gt;Same schedule can be applied to more than one target
    (incoming calls / internal)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Call pickups groups are more flexible, can include not only
    group of users but also queues and users.&lt;/li&gt;
&lt;li&gt;SSL certificates management&lt;ul&gt;
&lt;li&gt;Can be created, updated and deleted using the interface. Can
    also be associated to different objects ( SIP accounts, CTI
    server ....)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ergonomics improvements&lt;ul&gt;
&lt;li&gt;On session expiration, last page is displayed on reconnect.&lt;/li&gt;
&lt;li&gt;Sort per columns&lt;/li&gt;
&lt;li&gt;Automatic id and password generation for user accounts&lt;/li&gt;
&lt;li&gt;Edited object reference appears on all tabs&lt;/li&gt;
&lt;li&gt;Dynamic search on all objects lists (i.e. group
    members selected)&lt;/li&gt;
&lt;li&gt;Error report on CSV import&lt;/li&gt;
&lt;li&gt;Displays free extensions (add/edit users, groups ...)&lt;/li&gt;
&lt;li&gt;Remembers last search and sort order, per object.&lt;/li&gt;
&lt;li&gt;links &lt;em&gt;create&lt;/em&gt; open in a new tab&lt;/li&gt;
&lt;li&gt;Stay on current tab on page reload&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sip Accounts (lines) are now separated from users&lt;/li&gt;
&lt;li&gt;Provisioning is completely redesigned to incorporate new server.&lt;ul&gt;
&lt;li&gt;New provisioning server integration&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Queue penalty&lt;/li&gt;
&lt;li&gt;MWI remote subscribing&lt;/li&gt;
&lt;li&gt;Outbound calls redesigned&lt;/li&gt;
&lt;li&gt;Paging&lt;/li&gt;
&lt;li&gt;Queue logger daemon removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>HTTP/TFTP requests processing in provd - part 1</title><link href="http://blog.xivo.io/httptftp-requests-processing-in-provd-part-1.html" rel="alternate"></link><updated>2012-02-09T18:35:00-05:00</updated><author><name>hexanol</name></author><id>tag:blog.xivo.io,2012-02-09:httptftp-requests-processing-in-provd-part-1.html</id><summary type="html">&lt;p&gt;Well. Yes. provd ask a "device info extractor" object to extract
information from the HTTP request, and that object returns the
information we were expecting. But what is really happening inside that
"device info extractor" ? Let's see:&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/provd/provd-dev-info-extraction-details.png" title="Device info extraction details"&gt;&lt;img alt="Device info extraction
details" src="/public/provd/.provd-dev-info-extraction-details_m.jpg" title="Device info extraction details, fév. 2012" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The device info extractor object is in fact only merging results from
two others device info extractor.&lt;/p&gt;
&lt;p&gt;The "all plugins device info extractor" ask for each installed plugin to
extract info from the request. In this case, thexivo-aastra plugin is of
course able to extract a lot of information by looking at the User-Agent
header, but the xivo-cisco-sccp plugin is of no help. The results are
then merged and returned.&lt;/p&gt;
&lt;p&gt;The "standard device info extractor" extract the IP address. It's role
is to only extract trivial information from requests.&lt;/p&gt;
&lt;p&gt;From what we learned, we can deduce some properties of device
information extraction in provd.&lt;/p&gt;
&lt;p&gt;First, if no plugins are installed, only IP addresses will ever be
extracted.&lt;/p&gt;
&lt;p&gt;Next, we can ask ourselves what happens when two plugins returns
different information. Well, the "all plugins device info extractor" is
capable of applying different merge strategies. I won't go into more
details for now.&lt;/p&gt;
&lt;p&gt;The last thing we can see is that a bad plugin could make the system
unreliable. You do not want to be in the situation were wrong
information is extracted by a plugin. That is why it's always safer to
only install the plugins you need, and no more.&lt;/p&gt;
&lt;p&gt;Now that we know all that, let's see what happens for a request coming
from a Cisco 7940. One of the first request it does is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TFTP RRQ SEP554433221100.cnf.xml
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;TFTP requests are really simple, especially if you compare them to HTTP
requests. The only interesting information an RRQ (read request) can
have is the filename. But a filename can contains a lot of information.&lt;/p&gt;
&lt;p&gt;TFTP requests take a similar flow as HTTP requests in provd. In our
example, the xivo-aastra plugin will return no information from it, but
the xivo-cisco-sccp plugin will be able to extract both the vendor and
the MAC address. For this request, it's not possible to determine the
model nor the firmware version.&lt;/p&gt;
&lt;p&gt;So provd knows the request came from a Cisco, and that its MAC address
is 55:44:33:22:11:00. That's not much, but it's better than nothing.&lt;/p&gt;
&lt;p&gt;That said, there is a special trick for extracting information about the
model on Cisco 7900 phones. I won't tell you what it is because I'm
getting tired of writing this article, but all I can say is that it's
pretty neat, and it's also useful in some other situation. Well okay,
I'll just say the name: DHCP integration.&lt;/p&gt;
&lt;p&gt;That's all folks. We have both seen the best (Aastra 6731i) and the
worst (Cisco 7940) case concerning device info extraction in provd. That
said, even the worst case doesn't pose a real problem. Next time, if I
don't get too many death threat following this article, I'll talk about
the next step of request processing in provd, device retrieving, which
is quite simpler by the way.&lt;/p&gt;
&lt;/p&gt;</summary><category term="xivo 1.2"></category><category term="provisioning"></category></entry><entry><title>XiVO Documentation Project</title><link href="http://blog.xivo.io/xivo-documentation-project.html" rel="alternate"></link><updated>2012-02-01T01:24:00-05:00</updated><author><name>jylebleu</name></author><id>tag:blog.xivo.io,2012-02-01:xivo-documentation-project.html</id><summary type="html">&lt;p&gt;Documentation is often a touchy subject on many projects, and for XiVO
in this respect, it is also an important matter.&lt;/p&gt;
&lt;p&gt;Retrospective, over retrospective, documentation organization and tools
comes often to the surface. Maybe some of you already noticed that XiVO
development cycle has changed and that we are now producing a release
every two weeks. In fact we started to use SCRUM six months ago, and in
this respect, we do not forget to do our 'inspect and adapt' meeting,
not so many often as we should but this is an other story !&lt;/p&gt;
&lt;p&gt;Anyway, XiVO documentation is currently done using a
&lt;a href="http://wiki.xivo.fr" title="wiki"&gt;wiki&lt;/a&gt;, but this wiki is hard to maintain
and to structure, information is also difficult to find. We tried also
to use other type of wikis, but nothing was very satisfying.&lt;/p&gt;
&lt;p&gt;We looked over some other projects, to check how the documentation was
done, and it comes to us that some of them are using
&lt;a href="http://sphinx.pocoo.org/" title="sphinx"&gt;sphinx&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“a tool that makes it easy to create intelligent and beautiful
documentation, written by Georg Brandl and licensed under the BSD
license”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;One of the item of our &lt;em&gt;Definition of Done&lt;/em&gt; is documentation, it has to
be done by the development team. It is so natural to us to edit
restructured text, using GIT to push modification to a repository that
all the team was enthusiast to use these tools for improving XiVO
documentation. It was also an opportunity for us to try to use an
external Git repository, we chose
&lt;a href="https://gitorious.org/xivo-doc" title="Gitorious"&gt;Gitorious&lt;/a&gt; to start with
XiVO documentation project. This is also a way to open it to a larger
community.&lt;/p&gt;
&lt;p&gt;Do not hesitate to clone the project and submit documentation patches
!!!&lt;/p&gt;
&lt;p&gt;Last but not least, documentation production is now integrated in our
tool chain, using &lt;a href="http://jenkins.xivo.fr" title="jenkins"&gt;jenkins&lt;/a&gt; as
integration server, files are pulled from Gitorious automatically to
produce the &lt;a href="http://documentation.xivo.fr" title="XiVO documentation site"&gt;XiVO documentation
site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You will find how to contribute
&lt;a href="http://documentation.xivo.fr/developers/contributes/index.html" title="here"&gt;here&lt;/a&gt;
Have fun !!&lt;/p&gt;
&lt;p&gt;&lt;img alt="XiVO documentation tool
chain" src="/public/xivosoft/.doc_process_m.jpg" title="XiVO documentation tool chain, fév. 2012" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Automatic tests now extend to XiVO Client</title><link href="http://blog.xivo.io/automatic-tests-now-extend-to-xivo-client.html" rel="alternate"></link><updated>2012-01-19T16:00:00-05:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2012-01-19:automatic-tests-now-extend-to-xivo-client.html</id><summary type="html">&lt;p&gt;For months now, we have had our continuous integration tool
&lt;a href="http://jenkins.xivo.fr/" title="Jenkins"&gt;Jenkins&lt;/a&gt; running automatic tests to
detect regression bugs on the XiVO web interface. But the web interface
is not the only interface XiVO offers ; there is a XiVO Client, running
as a stand-alone Qt application on other machines.&lt;/p&gt;
&lt;p&gt;Until now, we were running tests on the XiVO Client by hand at the end
of each development iteration. Well, we will still run some of them by
hand for a time, but we now can make most of them run automatically. We
just have to code the tests :-)&lt;/p&gt;
&lt;p&gt;Here's what a Lettuce test look like :  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Scenario&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Enable&lt;/span&gt; &lt;span class="n"&gt;XiVO&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;
       &lt;span class="n"&gt;Given&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt; &lt;span class="n"&gt;logged&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
       &lt;span class="n"&gt;Given&lt;/span&gt; &lt;span class="n"&gt;there&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Charles&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Magne&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;edit&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Charles&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Magne&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;uncheck&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Enable XiVO Client&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;submit&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;XiVO&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;
       &lt;span class="n"&gt;Then&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;XiVO&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;charles&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;magne&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;edit&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Charles&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Magne&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Enable XiVO Client&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Password&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;submit&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;charles&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Password&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;magne&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;submit&lt;/span&gt;
       &lt;span class="n"&gt;Then&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;XiVO&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;charles&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;magne&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's get a bit more technical to explain how this works.The main
problem was to make our
&lt;a href="http://lettuce.it/" title="Lettuce/Selenium"&gt;Lettuce/Selenium&lt;/a&gt; automatic
tests in Python communicate with a running instance of the XiVO Client
in C++.&lt;/p&gt;
&lt;p&gt;Our first attempt got us to embed the XiVO Client in a C++ library, to
wrap this library into a Python module with
&lt;a href="SWIG" title="http://www.swig.org/"&gt;SWIG&lt;/a&gt;, load this module when running
automatic tests and call some module functions to make the XiVO Client
do what we wanted, for example click on this button or fill that text
field. Of course, &lt;a href="http://en.wikipedia.org/wiki/Friend_class" title="C++ classes friendship"&gt;C++ classes
friendship&lt;/a&gt;
was mandarory to avoid coding getters and setters everywhere. We got the
XiVO Client running within a Python module, but it was blocking the
execution of automatic tests. We then tried to make the XiVO Client run
in its own thread, while automatic tests were running in another.
Unfortunately, the Qt library we use to develop the XiVO Client does not
support running in a secondary thread as far as GUI is involved (and the
XiVO Client is almost only about GUI).&lt;/p&gt;
&lt;p&gt;Our second attempt was greatly inspired from the first one, but we tried
to run the XiVO Client in its own process. We replaced calls to the
Python module by an IPC protocol through local domain UNIX sockets.
Basically, the Lettuce process sends the name of the function it is
executing along with its arguments and the XiVO Client reads them,
execute the given function and returns whether the function failed or
succeeded.&lt;/p&gt;
&lt;p&gt;This is no more no less than the behavior of a remote control for the
XiVO Client. It does not have many buttons for now, but they are
functional and their number is growing.&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/xivosoft/xivoclient-remotecontrol.png" title="XiVO Client remote control"&gt;&lt;img alt="XiVO Client remote
control" src="/public/xivosoft/.xivoclient-remotecontrol_m.jpg" title="XiVO Client remote control, janv. 2012" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Of course this remote control "feature" is not released with official
XiVO Client versions. It is only activated when the XiVO Client is
compiled specifically for automatic tests.&lt;/p&gt;
&lt;p&gt;For now, we only test the GNU/Linux version of the XiVO Client, even
though it is not the most used version. Ideally, we shoud test all
platform versions. But unless we stumble upon major differences between
different platform versions, we can rely on the &lt;a href="http://qt.nokia.com/" title="Qt framework"&gt;Qt
framework&lt;/a&gt; quality and its platform
abstraction features.&lt;/p&gt;
&lt;p&gt;There is a &lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.2-Skaro/CTI_XiVO_Client_Qt_Tester" title="documentation page"&gt;documentation
page&lt;/a&gt;
that explains how to use the remote control feature.&lt;/p&gt;
&lt;p&gt;Links :&lt;br /&gt;
&lt;a href="https://git.proformatique.com/?p=official/xivo-acceptance.git;a=tree;f=web-interface/features;h=239ee123d5bfabb313efd1f787bb5a7638217396;hb=HEAD" title="Our Lettuce tests"&gt;Our Lettuce
tests&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://git.proformatique.com/?p=official/xivo-client-qt.git;a=summary" title="the XiVO Client git repository"&gt;the XiVO Client git
repository&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary><category term="xivo 1.2"></category><category term="xivo"></category><category term="software"></category><category term="skaro"></category><category term="client"></category></entry><entry><title>XiVO GIT Architecture is evolving</title><link href="http://blog.xivo.io/xivo-git-architecture-is-evolving.html" rel="alternate"></link><updated>2012-01-17T19:10:00-05:00</updated><author><name>cedric</name></author><id>tag:blog.xivo.io,2012-01-17:xivo-git-architecture-is-evolving.html</id><summary type="html">&lt;p&gt;The &lt;a href="https://twitter.com/#!/Xivodevteam" title=" # xivodevteam"&gt;#
xivodevteam&lt;/a&gt;
decided to change the architecture of the git repository of
&lt;a href="/index.php?tag/XiVO"&gt;XiVO&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Why do we wanted to do this change ?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's easier for the community to work on small component rather than
    on a big git repository&lt;/li&gt;
&lt;li&gt;Each component can be independent&lt;/li&gt;
&lt;li&gt;Allows usage of XiVO components in third-party systems&lt;/li&gt;
&lt;li&gt;Simplify and unify the names of the services&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Diagram of the migration of the git repository:&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/git/xivo-git-architecture.png" title="XiVO REPOSITORY GIT ARCHITECTURE"&gt;&lt;img alt="XiVO REPOSITORY GIT
ARCHITECTURE" src="/public/git/.xivo-git-architecture_m.jpg" title="XiVO REPOSITORY GIT ARCHITECTURE, janv. 2012" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The large circle on the left is our warehouse with all the components
together.&lt;/p&gt;
&lt;p&gt;Each component will become an independent &lt;a href="http://git.proformatique.com/" title=" git repository "&gt;git
repository&lt;/a&gt;
http://git.proformatique.com/&lt;/p&gt;
&lt;/p&gt;</summary><category term="XiVO"></category></entry><entry><title>Around XiVO - describe industrial installation process</title><link href="http://blog.xivo.io/around-xivo-describe-industrial-installation-process.html" rel="alternate"></link><updated>2012-01-06T18:19:00-05:00</updated><author><name>atarakt</name></author><id>tag:blog.xivo.io,2012-01-06:around-xivo-describe-industrial-installation-process.html</id><summary type="html">&lt;p&gt;There are four possibilities to install Xivo software :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;By hand ;)&lt;/li&gt;
&lt;li&gt;Using an installation script (only for gallifrey and skaro-dev at
    the moment)&lt;/li&gt;
&lt;li&gt;Using an installation cd (available on http://mirror.xivo.fr/iso)&lt;/li&gt;
&lt;li&gt;Using pxe&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We use
&lt;a href="http://en.wikipedia.org/wiki/Preboot_Execution_Environment" title="pxe"&gt;&lt;/a&gt;pxe
for our installations.It is easier, we boot our client on pxe, the rest
of the installation process is automatic&lt;/p&gt;
&lt;p&gt;We have 3 sites, 2 in France and 1 in Canada. The easier way for us is
to centralize pxe configuration.&lt;/p&gt;
&lt;p&gt;Here is our architecture :&lt;/p&gt;
&lt;p&gt;&lt;img alt="xivo_pxe_arch" src="/public/.pxe_arch_s.jpg" title="xivo_pxe_arch, janv. 2012" /&gt;.&lt;/p&gt;
&lt;p&gt;You can find debian pxe documentation on
http://d-i.alioth.debian.org/manual/en.i386/ch04s05.html, however you
can find a lot of online (possibly outdated) documentation.&lt;/p&gt;
&lt;p&gt;You may find our pxe configuration on our git repositories :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;our pxe configuration on
    http://git.xivo.fr/?p=official/debian-pxelinux.git;a=summary&lt;/li&gt;
&lt;li&gt;our installation class
    http://git.xivo.fr/?p=official/debian-installer.git;a=summary&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will fully explain our configuration in futures posts&lt;/p&gt;
&lt;/p&gt;</summary><category term="PXE"></category></entry><entry><title>The creation of a new xlet for the XiVO client</title><link href="http://blog.xivo.io/the-creation-of-a-new-xlet-for-the-xivo-client.html" rel="alternate"></link><updated>2011-12-30T13:09:00-05:00</updated><author><name>pcadotte</name></author><id>tag:blog.xivo.io,2011-12-30:the-creation-of-a-new-xlet-for-the-xivo-client.html</id><summary type="html">&lt;p&gt;The XiVO client has been designed to be expendable. The plug-in
architecture allows a user to create his own xlet to fulfill his needs.
This short tutorial will guide you through the creation of a simple xlet
and the required configuration to test it.&lt;/p&gt;
&lt;h2&gt;Getting the sources&lt;/h2&gt;
&lt;p&gt;The first step to creating your own xlet is to get the XiVO client
sources. The sources can be retrieved with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone git://git.xivo.fr/official/xivo-client-qt.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The available xlets are in the directory xivoclient/src/xlets you could
create your xlet from scratch but we will use the xletnull as a scaffold
for our new xlet.&lt;/p&gt;
&lt;h2&gt;Transforming xletnull into something new&lt;/h2&gt;
&lt;p&gt;For this example, we will create a simple xlet that displays channel
information for debugging purposes.&lt;/p&gt;
&lt;p&gt;Copy the xletnull directory and give your new directory a significant
name.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd xivoclient/src/xlets
cp -R xletnull channellist
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Rename files in the channellist directory to reflect your new xlet name.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rename &amp;#39;s/xletnull/channellist/&amp;#39; *
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fix .cpp and .h files by renaming xletnull to your new name. In .h
files, change the include gards to reflect the new file name and rename
the classes. In .cpp files, change the include "xletnull.h" and the
classname&lt;/p&gt;
&lt;p&gt;Fix the .pro file, the TARGET line should point to your new xlet&lt;/p&gt;
&lt;p&gt;Remove the Makefiles if they are present "rm Makefile*" in the xlet's
directory&lt;/p&gt;
&lt;p&gt;Add your new xlet to the xivoclient/xlets.pro file. Edit the file
xivoclient/xlets.pro. Add src/xlets/channellist to the SUBDIRS array.&lt;/p&gt;
&lt;h2&gt;Check if it still compiles&lt;/h2&gt;
&lt;p&gt;Test your changes. From the root of the xivo-client-qt directory run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make clean
make
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should now have a channellist.o and a channellistplugin.o file
xivoclient/obj/ directory.&lt;/p&gt;
&lt;h2&gt;Tell xivo-ctid about your new xlet&lt;/h2&gt;
&lt;p&gt;On your XiVO, edit /etc/pf-xivo/xivo-ctid/allowedxlets.json.Add a line
for your new xlet&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;channellist&amp;quot; : []
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the new xlet to your CTI profileIn the web-interface services -&amp;gt;
CTI server -&amp;gt; profilesEdit your profile, select the xlets tab and
click the add buttonSelect your new xlet (you will see a missing
translation error instead of your xlet name but you can still select
it).&lt;/p&gt;
&lt;p&gt;Restart xivo-ctid&lt;/p&gt;
&lt;h2&gt;Try your boilerplate code&lt;/h2&gt;
&lt;p&gt;When you log in the cti client you should now have an xlet with "sample"
caption and a label displaying "Hello world!"&lt;/p&gt;
&lt;p&gt;Now that the boiler plate code is in place, the real work begins. We
will use the client internal API to get warned of new channel events and
display a list of active channels on our XiVO.&lt;/p&gt;
&lt;h2&gt;Get the work done&lt;/h2&gt;
&lt;p&gt;The implementation of our Xlet will be in the channellist.h and
channellist.cpp files.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Change the title of your xlet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the constructor of your xlet change the string sent to setTitle to
your desired title.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;`setTitle(&amp;quot;Channel List&amp;quot;);`
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Remove unused widget&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For this example we won't need the m_label member. It can be remove
from the .h and it's initialization from the .cpp.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Listening to interesting events&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Baseengine of the XiVO client broadcast many events using Qt
signals, these signals can be catched by any xlets. We connect to 3
signals from the base engine in our constructor, channels and phones
status updates. Both signals are received by the updateChannelList slot.
The string parameter is not used in this example but the same signature
is required to connect a signal to a slot.&lt;/p&gt;
&lt;p&gt;To access signals or any other methods of the base engine, we need to
include &amp;lt;baseengine.h&amp;gt; in our xlet. We can then acces the base
engine instance with the b_engine pointer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Retrieving internal data structures&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The current implementation of the XiVO client keeps a hash map of each
interesting object. Updates are received by the CTI server and stored by
the base engine. Available objects are available in
baselib/src/*info.h.In our example, we use b_engine-&amp;gt;channels() to
retrieve the list of channels that are in memory whenever we receive a
status update from the CTI server. The old list is then destroyed and a
new one is created from scratch.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Channel List
xlet" src="/public/new_xlet/.channellist_small_m.jpg" title="Channel List xlet, déc. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;The channellist.cpp and channellist.h files are available as attachment&lt;/p&gt;
&lt;/p&gt;</summary><category term="xlet"></category><category term="xivo 1.2"></category><category term="xivo"></category><category term="software"></category><category term="client"></category></entry><entry><title>libsccp, a XiVO SCCP implementation for Asterisk</title><link href="http://blog.xivo.io/libsccp-a-xivo-sccp-implementation-for-asterisk.html" rel="alternate"></link><updated>2011-12-22T15:01:00-05:00</updated><author><name>nbouliane</name></author><id>tag:blog.xivo.io,2011-12-22:libsccp-a-xivo-sccp-implementation-for-asterisk.html</id><summary type="html">&lt;p&gt;Have you ever heard of SCCP ? It stands for Skinny Call Control Protocol
and it's used to interact with Cisco IP Phones. Asterisk has its own
basic support called chan_skinny and is one of the first open source
implementation available. There is also a more featured implementation
called chan_sccp-B, which is a fork of chan_skinny.&lt;/p&gt;
&lt;p&gt;&lt;img alt="agile-dashboard.jpg" src="/public/libsccp/.agile-dashboard_s.jpg" title="agile-dashboard.jpg, déc. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;Then, why writing another one ? Well, simply because chan_skinny is
too... skinny! and that chan_sccp-B is full of bugs, have no clear
roadmap and is not backed by professional developers. Don't worry too
much, we are not rewriting everything from scratch, all the protocol
knowledge is based on chan_skinny.&lt;/p&gt;
&lt;p&gt;In the long run, our goal is to produce a stable, full featured and well
tested code base. To keep our goal in focus, we aim to commit early and
often. In that, you're encouraged to actively participate by playing
with the code, reporting errors and sharing your ideas and needs with
us.&lt;/p&gt;
&lt;p&gt;&lt;img alt="sccpp.jpg" src="/public/libsccp/.sccpp_s.jpg" title="sccpp.jpg, déc. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;In parallel of the libsccp development, we're building an automated test
environment. Asterisk has a built-in unit-test framework that allow us
to stress the bits and bytes of every line of codes in a non-functional
way. Another tool made by Digium is the Asterisk TestSuite framework.
This powerfull tool allow us to write specific case scenario and replay
it as we like. Furthermore, we wrote a traffic generator for the SCCP
protocol, called SCCPp, that can act as a scriptable softphone. To
orchestrate and automate all this, we are using Jenkins as a continuous
integration tool. In short, &lt;a href="http://jenkins.xivo.fr/"&gt;Jenkins&lt;/a&gt; is able
to replay all the different level of test automatically everytime
something is modified in the code. All of this is still at an early
stage, and is evolving everyday.&lt;/p&gt;
&lt;p&gt;&lt;img alt="phone-tested.jpg" src="/public/libsccp/.phone-tested_s.jpg" title="phone-tested.jpg, déc. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;For those eager to dig into the code and start using it, you can find
here how to get started and more:&lt;a href="https://wiki.xivo.fr/index.php/Sccp"&gt;https://wiki.xivo.fr/index.php/Sccp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are less comfortable with the 'Do It Yourself', libsccp is also
getting integrated into XiVO Skaro and will be available in the next
week or so.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO IOH first CPU prototype board fully working - part1</title><link href="http://blog.xivo.io/xivo-ioh-first-cpu-prototype-board-fully-working-part1.html" rel="alternate"></link><updated>2011-12-16T10:06:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-12-16:xivo-ioh-first-cpu-prototype-board-fully-working-part1.html</id><summary type="html">&lt;p&gt;Dear followers of our &lt;strong&gt;XiVO IPBX OpenHardware project&lt;/strong&gt;, we are happy
to announce that our &lt;strong&gt;first version of our prototype for the CPU
board&lt;/strong&gt; (PCB prototyping the CPU and the different interfaces connected
to the CPU) is now fully working and we have a full GNU/Linux system
running on it to start stress-testing our platform (tests of currents
and temperature in a full stress mode). We are now getting closer and
closer to publish a fully-open design of an IPBX running
GNU/Linux/Asterisk/XiVO in OpenHardware.&lt;/p&gt;
&lt;p&gt;First we had our &lt;strong&gt;PCB pick-and-placed in our PCB factory&lt;/strong&gt; (mainly on a
Fuji machine) and you can see below a screenshot from the precision
placement camera on the machine&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOH_CPU_Factory_Cabling_Screenshot" src="/public/.20111006_014_m.jpg" title="XIOH_CPU_Factory_Cabling_Screenshot, déc. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;The main concerns of a PCB design when one wants to first test the just
"pick-and-placed" board is to follow different steps to prevent
undetection of hardware errors of design. These steps are usually (at
least, the ones we followed) the following :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Smoketest&lt;/strong&gt; : of the powersupply block doing the different
    voltages level of the board (crucial for a SoC like the one we
    are using) by using different DC external powersuplies for the
    different ATX voltage levels (+12V, -12V, +5V, +5VSBY, +3V3) and
    limiting the current following the Intel EP80579 datasheet. This
    test was positive on each of the voltage level and confirming that
    our power-supply is functionnal in terms of voltage level and
    current limitations&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bringup&lt;/strong&gt; : booting the board with a correct DDR2 DIMM (1Go) and
    flashing our version of coreboot build on our 2Mo SPI-flash using a
    dediprog SF100 SPI programer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connecting the SATA HDD w/ a fully configured Linux kernel&lt;/strong&gt; and
    trying to jump from the functionnal coreboot to grub then Linux
    decompression of the image&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please find below, a picture of the lab deployment of the board powered
by external power-supplies and connected to a bus-pirate for the
flashing of our bootloader through SPI connexions.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOH_CPU_P4_test_1" src="/public/.20111118_001_m.jpg" title="XIOH_CPU_P4_test_1, déc. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;Once this smoke-test and bring-up test were fully positive and allowing
us to move to next step with some stress-tests :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Temperature#&lt;/strong&gt;1 : Running a memtest86+ on the DDR2 and testing
    the temperature of the CPU package w/ a temperature sensor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Temperateur#2&lt;/strong&gt; : Running an Intel utility for our SoC (pushing
    the CPU usage to 100% and memory to 50%) and measuring the
    temperature&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Temperature#3&lt;/strong&gt; : Putting one of our board into a test metallic
    case and connecting the board w/ 3 parallel GbE interfaces fully
    loaded w/ iperf at 1Gbps and measuring the temperature in the case
    after several hours&lt;/li&gt;
&lt;li&gt;Bitrate : Iperf'ing the 3xGbE interfaces and measuring the load of
    the CPU and the transfer bitrates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please find below, a picture of our lab w/ 2 XIOH CPU boards running our
test-program and 3xGbE interfaces connected together one-by-one&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOH_CPU_P4_test_2" src="/public/.20111125_002_m.jpg" title="XIOH_CPU_P4_test_2, déc. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;We will update our different tests on the CPU boards and keep you update
on the follow-ups of our design steps.&lt;/p&gt;
&lt;p&gt;Xavier Carcelle.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Automatically originating call with cron and XiVO 1.2</title><link href="http://blog.xivo.io/automatically-originating-call-with-cron-and-xivo-12.html" rel="alternate"></link><updated>2011-12-14T19:02:00-05:00</updated><author><name>hexanol</name></author><id>tag:blog.xivo.io,2011-12-14:automatically-originating-call-with-cron-and-xivo-12.html</id><summary type="html">&lt;p&gt;This bit of dialplan simply set the name part of the caller ID and then
call our phone, which in our example is SIP/abcdef. Note that we dial
the phone directly instead of jumping into the standard XiVO dialplan,
because we don't want the voicemail of the user to answer the call if it
isn't answered in time.&lt;/p&gt;
&lt;p&gt;Now that this is done, we load the dialplan we just added previously
with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;asterisk -rx &amp;quot;dialplan reload&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next step before writing our cron job is to test out the command that
will make our automatic call origination works. This use the "channel
originate" command available from the asterisk 1.8 CLI. Let's try it
out:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;asterisk -rx &amp;quot;channel originate Local/s@daily-scrum exten 1051&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This makes our SIP/abcdef phone ring, showing that "Daily Scrum" is
calling us, and once we answer the call, we are bridged into our
conference room at extension 1051.&lt;/p&gt;
&lt;p&gt;So we reach the last step on our journey; writing our cron job. Let's
create a file at &lt;em&gt;/etc/cron.d/daily-scrum&lt;/em&gt; and write the following line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0 9 * * 1-5 root   /usr/sbin/asterisk -rx &amp;quot;channel originate Local/s@daily-scrum exten 1051&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This cron job will launch our asterisk command every day of the week at
9:00 AM.&lt;/p&gt;
&lt;p&gt;So that's it. Starting from this setup, it's possible to do other
things. For example, paging and autoanswering a group of phones and then
playing a sound file is just a bit of custom dialplan away.&lt;/p&gt;
&lt;p&gt;Note that to make this work in XiVO 1.1, the dialplan shown here need to
be modified (the "same" syntax is not supported in asterisk 1.4) and the
"channel originate" command be replaced by "originate".&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Some more internationalization in XiVO (part 1)</title><link href="http://blog.xivo.io/some-more-internationalization-in-xivo-part-1.html" rel="alternate"></link><updated>2011-12-09T16:34:00-05:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2011-12-09:some-more-internationalization-in-xivo-part-1.html</id><summary type="html">&lt;p&gt;We recently had a few bugs in XiVO about non-ASCII characters, mainly
accented character, as we love them in French. We fixed the bugs, but
there will certainly be more. We then decided to push the test a little
further and try to flood a few data pipes with non-european Unicode
characters, to see if potentially anything could flow in those pipes.&lt;/p&gt;
&lt;p&gt;Here's the result :&lt;img alt="Japanese XiVO
Client" src="/public/xivosoft/xivoclient-japanese.png" title="Japanese XiVO Client, déc. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;We translated a few text fields in Japanese, even though it's probably
not perfect Japanese, it's a little better than plain stupid automatic
translation, thanks to one of our team members who knows a bit about
Japanese. Japanese Caller ID are also displayed fine in softphones, we
did not try real phones (yet).&lt;/p&gt;
&lt;p&gt;This exercise had multiple benefits :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it allowed us to test the &lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.2-Skaro/CTI_XiVO_Client_Qt_Developer#Add_a_translation_for_the_XiVO_Client"&gt;XiVO Client internationalization
    procedure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;we know Unicode is accepted in the main modules of XiVO&lt;/li&gt;
&lt;li&gt;we have the beginning of a Japanese translation for the XiVO Client&lt;/li&gt;
&lt;li&gt;it was not very long, 3 hours tops&lt;/li&gt;
&lt;li&gt;it was fun !&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary><category term="xivo 1.2"></category><category term="xivo"></category><category term="software"></category><category term="skaro"></category><category term="i18n"></category></entry><entry><title>Xivo is everywhere part 4</title><link href="http://blog.xivo.io/xivo-is-everywhere-part-4.html" rel="alternate"></link><updated>2011-12-06T16:48:00-05:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2011-12-06:xivo-is-everywhere-part-4.html</id><summary type="html">&lt;p&gt;Hello all,&lt;/p&gt;
&lt;p&gt;Some nice pictures of XiVO is everywhere :)&lt;/p&gt;
&lt;p&gt;&lt;img alt="100_1263.jpg" src="/public/.100_1263_m.jpg" title="100_1263.jpg, déc. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMAG1010.jpg" src="/public/.IMAG1010_m.jpg" title="IMAG1010.jpg, déc. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="20111206_113008.jpg" src="/public/.20111206_113008_m.jpg" title="20111206_113008.jpg, déc. 2011" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO 1.2 and Asterisk Dialplan</title><link href="http://blog.xivo.io/xivo-12-and-asterisk-dialplan.html" rel="alternate"></link><updated>2011-12-06T02:06:00-05:00</updated><author><name>jylebleu</name></author><id>tag:blog.xivo.io,2011-12-06:xivo-12-and-asterisk-dialplan.html</id><summary type="html">&lt;p&gt;&lt;img alt="xivodialplan.jpg" src="/public/xivosoft/xivodialplan.jpg" title="xivodialplan.jpg, déc. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;To route a call from origin to destination,
&lt;a href="http://www.asterisk.org/"&gt;Asterisk&lt;/a&gt; relies on a so called dialplan. In
XiVO, it is generated using 3 different components&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XiVO confgen, takes info from the configuration database and
    generate a directory linked to the base config dialplan&lt;/li&gt;
&lt;li&gt;Base Config dialplan, the dialplan itself&lt;/li&gt;
&lt;li&gt;Agid, dynamically update the dialplan as setting variables (XIVO_),
    or compute recording file names.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You'll find this 3 components here :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git://git.xivo.fr/official/xivo-confgen.git for confgen&lt;/li&gt;
&lt;li&gt;git://git.xivo.fr/official/xivo-skaro.git directory base-config for
    the static part&lt;/li&gt;
&lt;li&gt;git://git.xivo.fr/official/xivo-skaro.git directory agid for the
    dynamic part&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You may also have a look at our CI server
&lt;a href="http://jenkins.xivo.fr/"&gt;jenkins&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Astricon 2011</title><link href="http://blog.xivo.io/astricon-2011.html" rel="alternate"></link><updated>2011-11-08T16:19:00-05:00</updated><author><name>nbouliane</name></author><id>tag:blog.xivo.io,2011-11-08:astricon-2011.html</id><summary type="html">&lt;p&gt;&lt;img alt="nib-xivo" src="/public/astricon2011/.nib-xivo_s.jpg" title="nib-xivo, nov. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;Avencall was present at the world famous Asterisk conference:
&lt;strong&gt;Astricon2011&lt;/strong&gt;. This year the conferencewas held in Denver, Colorado
from October 24th to 27th.&lt;/p&gt;
&lt;p&gt;Throughout the week we've met people from many different background:
software developers, enterprise IT,system integrators, decision makers
and much more. During AstriDevCon, a special day for developers only,we
discussed with Asterisk main developers about technical aspect of the
software and what next is coming into Asterisk.&lt;/p&gt;
&lt;p&gt;&lt;img alt="xav-pres2.JPG" src="/public/astricon2011/.xav-pres2_s.jpg" title="xav-pres2.JPG, nov. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;The second day was marked by fellow developers delivering presentations
about the internal mechanic of thecore and subsystems of asterisk. We
also attended talks about the much-awaited &lt;strong&gt;AsteriskSCF&lt;/strong&gt; (Scalable
Communication Framework) which is quite promising for building high-end
telecommunication services.&lt;/p&gt;
&lt;p&gt;On the third day, we had the pleasure to present the XiVO IPBX
OpenHardware project and Avencall in general. The presentation generated
a lot of positive feedbacks and people came to us to deepen the
discussion about the technical side and also the business model
surrounding the XiVO open platform. &lt;strong&gt;All this curiosity and eager was
just another proof that we are going in the right direction.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="photo.JPG" src="/public/astricon2011/.photo_s.jpg" title="photo.JPG, nov. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;All in all, it was much fun to meet other enthusiasts from many
different horizon gathering around a powerful technology: Asterisk, and
to share our passion about technology.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We are already looking forward the next Astricon !&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="nick-astricon" src="/public/astricon2011/.nick-astricon_s.jpg" title="nick-astricon, nov. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;Nicolas Bouliane, Xavier Carcelle&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>OpenHardware landscape Q4 2011</title><link href="http://blog.xivo.io/openhardware-landscape-q4-2011.html" rel="alternate"></link><updated>2011-11-01T19:26:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-11-01:openhardware-landscape-q4-2011.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;The OpenHardware community is expanding more and more these past
months and here a short landscape view of the community nowadays :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OpenHardware large board projects&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PandaBoard :
&lt;a href="http://pandaboard.org/sites/default/files/board_reference/EA1/720-2152-001_EA1_BRD.zip"&gt;http://pandaboard.org/sites/default/files/board_reference/EA1/720-2152-001_EA1_BRD.zip&lt;/a&gt;&lt;br /&gt;
Chumby :
&lt;a href="http://files.chumby.com/bunnie/chumbyone_hw/chumbyone_gerbers.zip"&gt;http://files.chumby.com/bunnie/chumbyone_hw/chumbyone_gerbers.zip&lt;/a&gt;&lt;br /&gt;
MilkyMist :
&lt;a href="http://en.qi-hardware.com/wiki/Milkymist_One_RC1_PCB_Specification"&gt;http://en.qi-hardware.com/wiki/Milkymist_One_RC1_PCB_Specification&lt;/a&gt;&lt;br /&gt;
Tormenta v2 PCI card :
&lt;a href="http://www.zapatatelephony.org/t2/T2B2Gerber.zip"&gt;http://www.zapatatelephony.org/t2/T2B2Gerber.zip&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OpenHardware smaller board projects&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DIY boards : &lt;a href="http://tuxgraphics.org/electronics/"&gt;http://tuxgraphics.org/electronics/&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Open "specifications" Hardware products&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Elphel camera :
&lt;a href="http://www.elphel.com/importwiki?title=353_in_a_nutshell"&gt;http://www.elphel.com/importwiki?title=353_in_a_nutshell&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Blogs/Events/Journals&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OpenHardwareJournal :
&lt;a href="http://openhardware.org/journal/2011/11/index.html"&gt;http://openhardware.org/journal/2011/11/index.html&lt;/a&gt;&lt;br /&gt;
Hack-a-day : &lt;a href="http://hackaday.com"&gt;http://hackaday.com&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Events/Conferences/Workshops&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OpenHardwareSummit : &lt;a href="http://www.openhardwaresummit.org/"&gt;http://www.openhardwaresummit.org/&lt;/a&gt;&lt;br /&gt;
OpenHardwareWorkshop :
&lt;a href="http://www.ohwr.org/projects/ohr-meta/wiki/OHWorkshop"&gt;http://www.ohwr.org/projects/ohr-meta/wiki/OHWorkshop&lt;/a&gt;&lt;br /&gt;
OpenSourceHardware2011 (Madrid) : &lt;a href="http://oshwcon.org/"&gt;http://oshwcon.org/&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Licences&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OHANDA : &lt;a href="http://ohanda.org"&gt;http://ohanda.org&lt;/a&gt;&lt;br /&gt;
CERN : &lt;a href="http://www.ohwr.org/projects/cernohl/wiki/CernOhlProjects"&gt;http://www.ohwr.org/projects/cernohl/wiki/CernOhlProjects&lt;/a&gt;&lt;br /&gt;
OpenSourceHardwareDefintion : &lt;a href="http://freedomdefined.org/OSHW"&gt;http://freedomdefined.org/OSHW&lt;/a&gt;  &lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO wiki news</title><link href="http://blog.xivo.io/xivo-wiki-news.html" rel="alternate"></link><updated>2011-10-25T00:36:00-04:00</updated><author><name>jylebleu</name></author><id>tag:blog.xivo.io,2011-10-25:xivo-wiki-news.html</id><summary type="html">&lt;p&gt;As you may already know, all the documentation of the XiVO project is on
the &lt;a href="http://wiki.xivo.fr/" title="XiVO wiki"&gt;XiVo wiki&lt;/a&gt; let's summarize what
has been edited or added recently.&lt;/p&gt;
&lt;p&gt;&lt;img alt="xivowiki" src="/public/xivosoft/xivo_wiki.png" title="xivowiki, oct. 2011" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New links has been added to the main page, direct access to &lt;a href="https://wiki.xivo.fr/index.php/Special:RecentChanges" title="recent changes"&gt;recent
    changes&lt;/a&gt;
    and
    &lt;a href="https://wiki.xivo.fr/index.php/Special:Categories" title="categories"&gt;categories&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Documentation on &lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.2-Skaro/CTI/xlets/queue_list" title="Xlet queue list"&gt;xlet queue
    list&lt;/a&gt;
    useful if you are using XiVO to power your contact center.&lt;/li&gt;
&lt;li&gt;Check also the updated &lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.1-Gallifrey/Workarounds" title="Gallifrey workaround"&gt;Gallifrey workaround
    page&lt;/a&gt;
    about upgrade procedure.&lt;/li&gt;
&lt;li&gt;Do you need to know how to &lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.2-Skaro/Debug_Daemon"&gt;debug XiVO
    daemons&lt;/a&gt; ?&lt;/li&gt;
&lt;li&gt;Try to &lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.2-Skaro/Install_XiVO_From_Scratch"&gt;install the XiVO
    Skaro&lt;/a&gt;
    development in progress release.&lt;/li&gt;
&lt;li&gt;You need to &lt;a href="https://wiki.xivo.fr/index.php/VM-dev"&gt;setup a virtual
    machine&lt;/a&gt; to contribute to
    XiVO development ?&lt;/li&gt;
&lt;li&gt;How to &lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.2-Skaro/Campagnes_d%27enregistrements" title="recording campaign"&gt;setup a recording
    campaign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.2-Skaro/CTI_XiVO_Client_Qt_Developer" title="xivo client trics and tips"&gt;Tric an tips to
    develop&lt;/a&gt;
    the XiVO QT Client&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Many other pages have also been updated, new categories added to be able
to find needed information quickly.&lt;/p&gt;
&lt;p&gt;We are currently working to improve XiVO documentation. We would like to
reorganize it, and why not using another tool. Do not hesitate to share
your ideas by posting a comment.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO GIT repository re-organisation</title><link href="http://blog.xivo.io/xivo-git-repository-re-organisation.html" rel="alternate"></link><updated>2011-10-17T12:22:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-10-17:xivo-git-repository-re-organisation.html</id><summary type="html">&lt;h4&gt;GIT_DIRECTORY specify the repository to use&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;GIT_DIRECTORY=xivo-&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;XIVO&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
              The subdirectory relative to SOURCE_GIT in which the  repository
              is to be found.  The actual clone is composed as follows:

              git clone &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;SOURCE_GIT&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;GIT_DIRECTORY&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;.git

              as of October 2011, there is a single repository named after the
              XIVO variable, hence the default  xivo-&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;XIVO&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;  value.  It  will
              progressively be replaced by individual repositories that can be
              used as follows:

              packaging-farm DIRECTORY=pf-xivo-confgen GIT_DIRECTORY=xivo-confgen submit

              so that it uses:

              http://git.proformatique.com/?p=official/xivo-confgen.git

              instead of

              http://git.proformatique.com/?p=official/xivo-skaro.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://packaging-farm.dachary.org/trac/changeset/d36f2baef2c601660d3efdef5c3734facef884ff"&gt;GIT_DIRECTORY&lt;/a&gt;
specify the repository to use in submit-xivo.sh. Although it is only
applied to the source git directory, the name of the variable does not
contain the word SOURCE. This is in anticipation to the fact that the
debian and source repositories will eventually be merged. Even if this
does not happen, the structure of both repositories is planned to be the
same in the transition phase and the need to distinguish a directory
name that would be different is unlikely.&lt;/p&gt;
&lt;h4&gt;fail to detect package build failure&lt;/h4&gt;
&lt;p&gt;asterisk-addons &lt;a href="http://packaging-farm.dachary.org/trac/ticket/27"&gt;failed to build but packaging-farm thinks it
succeeded&lt;/a&gt;. As a
consequence the meta package that depends on it fails and it is not
obvious to track the error back to asterisk-addons. Here is the output
of the build of asterisk-addons:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...
/usr/share/cdbs/1/rules/buildcore.mk:72: parsing asterisk-addons_1.4.13.orig.tar.gz ...
grep: debian/control.in: No such file or directory
egrep: debian/control.in: No such file or directory
/bin/sh: line 0: cd: build-tree/asterisk-addons-1.4.13: No such file or directory
/bin/sh: line 1: debian/control.in: No such file or directory
        rm -f debian/files
        find .  \( \( -type f -a \
                \( -name &amp;#39;#*#&amp;#39; -o -name &amp;#39;.*~&amp;#39; -o -name &amp;#39;*~&amp;#39; -o -name DEADJOE \
                 -o -name &amp;#39;*.orig&amp;#39; -o -name &amp;#39;*.rej&amp;#39; -o -name &amp;#39;*.bak&amp;#39; \
                 -o -name &amp;#39;.*.orig&amp;#39; -o -name .*.rej -o -name &amp;#39;.SUMS&amp;#39; \
                 -o -name TAGS -o \( -path &amp;#39;*/.deps/*&amp;#39; -a -name &amp;#39;*.P&amp;#39; \) \
                \) -exec rm -f {} \; \) -o \
                \( -type d -a -name autom4te.cache -prune -exec rm -rf {} \; \) \)
/usr/share/cdbs/1/rules/buildcore.mk:72: parsing asterisk-addons_1.4.13.orig.tar.gz ...
grep: debian/control.in: No such file or directory
egrep: debian/control.in: No such file or directory
/bin/sh: line 0: cd: build-tree/asterisk-addons-1.4.13: No such file or directory
make: *** build-tree/asterisk-addons-1.4.13: No such file or directory.  Stop.
 debian/rules build
/usr/share/cdbs/1/rules/buildcore.mk:72: parsing asterisk-addons_1.4.13.orig.tar.gz ...
grep: debian/control.in: No such file or directory
egrep: debian/control.in: No such file or directory
/bin/sh: line 0: cd: build-tree/asterisk-addons-1.4.13: No such file or directory
 debian/rules binary
/usr/share/cdbs/1/rules/buildcore.mk:72: parsing asterisk-addons_1.4.13.orig.tar.gz ...
grep: debian/control.in: No such file or directory
egrep: debian/control.in: No such file or directory
/bin/sh: line 0: cd: build-tree/asterisk-addons-1.4.13: No such file or directory
 dpkg-genchanges -b &amp;gt;../asterisk-addons_1.4.13+pf.xivo.1.1.18-1_i386.changes
dpkg-genchanges: failure: cannot read files list file: No such file or directory
dpkg-buildpackage: failure: dpkg-genchanges gave error exit status 2
BUILD END packaging-farm --cd asterisk-addons ARCHITECTURE=i386 DISTRIBUTION=lenny chroot-login
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When reading the error, it is obvious that the removal of control.in is
the source of the error.The success of a debian package build is tested
by looking for the dpkg-genchanges -b string in the output. This is the
last step of packaging and there cannot be any error after this. Errors
that occur before running dpkg-genchange will end the script immediately
and the string will not be found. However the script looking for
dpkg-genchange did not test for a failed run of dpkg-genchange. It is a
rare condition.The status.sh script &lt;a href="http://packaging-farm.dachary.org/trac/changeset/d3bbab7c88148a9f5670e0f8c598174d392f8ed2"&gt;now checks if the run of
dpkg-genchange is
successful&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>PCB prototypes and flash SPI testing</title><link href="http://blog.xivo.io/pcb-prototypes-and-flash-spi-testing.html" rel="alternate"></link><updated>2011-10-04T16:10:00-04:00</updated><author><name>xilun</name></author><id>tag:blog.xivo.io,2011-10-04:pcb-prototypes-and-flash-spi-testing.html</id><summary type="html">&lt;p&gt;On the XiVO Open Hardware side, we have been very busy lately writing
various bits of low level software, preparing the production of the
first prototypes, validating some hardware subsystems and doing all sort
of hardware + low level software debugging.&lt;/p&gt;
&lt;p&gt;We are starting again to have things interesting to show, with some cute
photos.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PCB prototypes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We recently received our first PCB prototypes for our motherboard:&lt;/p&gt;
&lt;p&gt;&lt;img alt="XIOH motherboard
prototype" src="/public/.xioh_motherboard_proto_m.jpg" title="XIOH motherboard prototype, oct. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;To prepare for testing the first assembled prototypes, we wanted to
somehow test the communication between the EP80579 and the SPI flash.
For now we have a 74LVC125A buffer between the two chips in order to
isolate the flash from the SoC, and we wanted to validate this design.&lt;/p&gt;
&lt;p&gt;We previously did a small model of the flash subsystem, A few days ago I
heavily hacked it to make it work. (Well some of the modifications were
probably not really necessary, but now we have a perfect signal quality
:)&lt;/p&gt;
&lt;p&gt;&lt;img alt="Heavily hacked flash prototype
board" src="/public/.heavily_hacked_flash_proto_m.jpg" title="Heavily hacked flash prototype board, oct. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;The next step was to do the same test, this time using one of our spare
naked PCBs dedicated to that kind of testing.We first soldered the flash
and the buffer, then we strapped a HE10 ISP header to replace the
EP80579 SPI drivers by a flash programmer (this is obviously not a
perfect replacement, but we can't do much better...)&lt;/p&gt;
&lt;p&gt;Here is a photo of the header being soldered:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Soldering an SPI header at SoC
position" src="/public/.soldering_an_SPI_header_at_SoC_position_m.jpg" title="Soldering an SPI header at SoC position, oct. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;Here is the soldered result, connected to the programmer:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Testing flash
communication" src="/public/.testing_flash_communication_m.jpg" title="Testing flash communication, oct. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;And here is the result:&lt;/p&gt;
&lt;p&gt;&lt;img alt="SPI flash communication test
results" src="/public/.flash_comm_test_result_m.jpg" title="SPI flash communication test results, oct. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;So we are now hopeful that at least the SPI flash communication will
work on our assembled board \\o/&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO Client architecture</title><link href="http://blog.xivo.io/xivo-client-architecture.html" rel="alternate"></link><updated>2011-09-30T21:14:00-04:00</updated><author><name>sduthil</name></author><id>tag:blog.xivo.io,2011-09-30:xivo-client-architecture.html</id><summary type="html">&lt;p&gt;This blog post extends the diagram presented earlier explaining the
&lt;a href="/index.php?post/2011/05/13/CTI-external-architecture-in-XiVO-1.1-and-1.2" title="CTI global architecture diagram"&gt;global architecture of
CTI&lt;/a&gt;
in XiVO.&lt;/p&gt;
&lt;p&gt;Here is what the XiVO Client looks like from a developer point of
view:&lt;img alt="XiVO Client
architecture" src="/public/.xivoclient_m.jpg" title="XiVO Client architecture, sept. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;This is the new architecture that will be included in our new
development iteration beginning on Monday, 3rd October.The main change
is the "creation" of the XLetlib, that was previously into the Baselib.
The Baselib will be progressively stripped of everything not necessary:
the goal is to make it a reusable component, which will only manage the
connection with the CTI server.&lt;/p&gt;
&lt;p&gt;Everything in the XiVO Client is written in C++ and Qt.&lt;/p&gt;
&lt;p&gt;Let's explicit the spaghetti plate above a little :XLets, for XiVO
applets, are plugins to the XiVO Client. Almost every function of the
XiVO Client is pluggable/unpluggable, depending on the server
configuration to allow some XLet to be activated. You can see what XLets
look like in the &lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.0-Dalek/Documentation_XiVO_Client" title="XiVO Client user manual"&gt;XiVO
wiki&lt;/a&gt;
(each tab is an XLet).&lt;/p&gt;
&lt;p&gt;Each XLet can use the tools available in the XLetlib, that are mainly
GUI elements used to display information in a consistent way within all
XLets. They are also given access to the Baselib "API" (it is an API,
but scarcely documented for the time being), that receives or sends CTI
events and informations to the CTI server, such as "a new phone has
registered to Asterisk", "you have a new telephone message", "I want to
call this number", etc.&lt;/p&gt;
&lt;p&gt;Of course, there are some options available to control how the XiVO
Client behaves ; about half of them control GUI aspects and the other
half control how the connection is established to the server. The GUI
related options are some of the things we still have to migrate out of
the Baselib, because someone wanting to connect to the CTI server
through our Baselib does not care that the XiVO Client presence
indicator is 5 pixels wide...&lt;/p&gt;
&lt;p&gt;About the communication protocol between the XiVO Client and the CTI
server, everything is JSON encoded. For now, there is no compatibility
between protocol versions, but we're thinking about it. The goal is to
be able to release XiVO Client upgrades without having to wait for the
XiVO distribution to be released, especially if the new version
introduces mainly GUI improvements. But this can't happen if an "old"
server can not talk with a more recent client.&lt;/p&gt;
&lt;p&gt;One could think that working on the XiVO Client may be boring, as it's
only easy GUI stuff, placing a button here, making it violet with green
dots for obscure marketing reasons. There's a part of GUI stuff, of
course, but I find the plugins-only, freely movable (in dock mode)
interface concept very interesting, it makes the XiVO Client a potential
swiss-army knife, to which anyone can choose exactly the tools he needs,
no more, no less.&lt;/p&gt;
&lt;p&gt;Some links :&lt;br /&gt;
&lt;a href="http://git.proformatique.com/?p=official/xivo-client-qt.git;a=summary" title="XiVO Client git repository"&gt;The XiVO Client git
repository&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.2-Skaro/CTI_XiVO_Client_Qt_Developer" title="XiVO Client developer documentation"&gt;Developer oriented
documentation&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://wiki.xivo.fr/index.php/Support_Community#IRC" title="IRC channel infos"&gt;IRC
channel&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Safeguard against downgrades in XIVO packages</title><link href="http://blog.xivo.io/safeguard-against-downgrades-in-xivo-packages.html" rel="alternate"></link><updated>2011-09-26T09:53:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-09-26:safeguard-against-downgrades-in-xivo-packages.html</id><summary type="html">&lt;h4&gt;Safeguard against downgrades in XIVO packages&lt;/h4&gt;
&lt;p&gt;The following use case creates a &lt;a href="http://packaging-farm.dachary.org/trac/ticket/23"&gt;confusing
situation&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;package-1.1-1 is submitted to the farm and successfully built&lt;/li&gt;
&lt;li&gt;package-1.0-1 is submitted to the farm : it is a version lower than
    the one already built&lt;/li&gt;
&lt;li&gt;packaging-farm creates package-1.1-1+build1 instead of package-1.0-1&lt;/li&gt;
&lt;li&gt;the .orig.tar.gz is package-1.0.orig.tar.gz and a package-1.1.tar.gz
    is created&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although building an older version of a package is not desirable, it
should not claim to succeed while creating a package inconsistent with
the orig.tar.gz file.&lt;/p&gt;
&lt;p&gt;The source of the problem comes from the logic that adds a +buildX to
the debian version of a package when a package is rebuilt (for instance
because a package it depends on has been rebuilt). When this logic was
implemented, the possibility that a package with a lower version number
than a previously built package could be submitted was overlooked. It is
not the normal behavior and should be treated as an error. Instead, it
was ignored and lead to confusing results as described in the bug
report.&lt;/p&gt;
&lt;p&gt;The general rule is that the packaging-farm should refuse to build a
package with a version lower than a previously build package. The goal
is to prevent downgrades because the installation scripts are not
designed for downgrades. However, this general rule cannot be applied
just by comparing the versions of the existing package ( as found in
/var/lib/packaging-farm ) and the current package ( as found in
/var/cache/packaging-farm/source ). When a package is rebuilt, the
+buildX suffix will always make the existing package more recent than
the current package. The check must therefore proceed in two steps:
first check if the existing package is more recent and then throw an
error if the reason why it is more recent is not just because there is a
+buildX appended to it.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://packaging-farm.dachary.org/trac/changeset/c1e5dff59898ab5ac0f23854f55d752f1c001a05"&gt;associated
patch&lt;/a&gt;
also moves the extraction of the existing package version from the
makefile to the debuild.sh script. That avoids duplicating the logic. It
also gives the debuild.sh script the name of the original dsc file in
order to print a meaningfull error message.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Software Freedom Day Montreal</title><link href="http://blog.xivo.io/software-freedom-day-montreal.html" rel="alternate"></link><updated>2011-09-20T12:14:00-04:00</updated><author><name>jylebleu</name></author><id>tag:blog.xivo.io,2011-09-20:software-freedom-day-montreal.html</id><summary type="html">&lt;p&gt;We were kindly invited to participate to the &lt;a href="http://wiki.softwarefreedomday.org/2011/Canada/Montreal/SFD-ETS"&gt;Software Freedom
Day&lt;/a&gt; at
Montreal. It was a great day and we had the opportunity to speak about
&lt;a href="http://wiki.xivo.fr/"&gt;XiVo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Jean-Yves Lebleu talked about the software part, Nicolas Bouliane about
the hardware, and Nicolas Hicher the packaging. It was also an
opportunity to introduce the team.Thank you to Michaël Faille and Fabian
Rodriguez for the organization.&lt;/p&gt;
&lt;p&gt;&lt;img alt="SFD 2011" src="/public/.IMG_20110917_142412_m.jpg" title="SFD 2011, sept. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;Last presentation was done at the pub :)&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>resolving XiVO submissions confusion</title><link href="http://blog.xivo.io/resolving-xivo-submissions-confusion.html" rel="alternate"></link><updated>2011-09-19T07:15:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-09-19:resolving-xivo-submissions-confusion.html</id><summary type="html">&lt;h4&gt;nothing needs to be done&lt;/h4&gt;
&lt;p&gt;The rules that decide when packaging-farm should work on a package are
explained in the manual pages. However, they have changed a lot while
packaging-farm matured in the past months and they deserve a short
summary.The first step is to submit work to the packaging-farm and this
is done by the submit-xivo.sh script as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm DIRECTORY=asterisk submit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which is run as a side effect of the command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rebuild
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which is an alias for running the &lt;strong&gt;rebuild&lt;/strong&gt; target of the
&lt;strong&gt;/etc/packaging-farm/gallifrey.mk&lt;/strong&gt; Makefile.What it really does is to
use the content of the XiVO git repository to create a Debian GNU/Linux
source package. It uses the debian packaging instructions found in the
git repository and follow them : it does not create rules automatically,
it fully relies on what has been done manually. It does, however,
creates the package version according to a complex set of rules,
explained in the VERSIONS section of the submit-xivo.sh.The asterisk
source package will not be generated each time the&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm DIRECTORY=asterisk submit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;is run for two reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To save time. It currently takes less than 30 seconds for
    packaging-farm to update the &lt;strong&gt;skaro&lt;/strong&gt; build machine when nothing
    needs to be done. If the source packages were always rebuilt it
    would take at least 15 minutes.&lt;/li&gt;
&lt;li&gt;To avoid checksum errors when reprepro mirrors the packages built
    by packaging-farm. When a &lt;strong&gt;.orig.tar.gz&lt;/strong&gt; is built for a given
    version of a package, it is preserved. Even when the content of two
    &lt;strong&gt;.tar.gz&lt;/strong&gt; are strictly identical, the file itself has a different
    md5sum signature because of the compression.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The submit-xivo.sh script decides if a source package should be rebuilt
using a simple comparison : if the existing &lt;strong&gt;.dsc&lt;/strong&gt; file has the same
path as the one that would be created, it declares there is no need to
re-create it. In other words, the decision to rebuild a source package
solely depends on the version number of the package.Note that when
submit-xivo.sh decides that nothing needs to be done, it does not rely
on the log history of the git repository. It only relies on the version
number. However, when &lt;strong&gt;VERSION_COMPUTE=true&lt;/strong&gt; (which is the default)
the date and time of the last commit from the git repository is used to
create the version number. Therefore there is a relationship between the
history of the git repository and the decision to recreate the source
package because each new commit will create a new version.This
relationship no longer exists when &lt;strong&gt;VERSION_COMPUTE=false&lt;/strong&gt; and
commits to the git repository will not have any consequence on the
decision to rebuild a source package.&lt;/p&gt;
&lt;h4&gt;manually submitted packages&lt;/h4&gt;
&lt;p&gt;Some packages are not yet in the git repositories and they are completly
outside the control of submit-xivo.sh. As a consequence they must be
submitted manually to packaging farm. The&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rebuild
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;command will not submit these packages because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it would create checksum errors when the same package version is
    submitted twice&lt;/li&gt;
&lt;li&gt;it would uselessly slow down the command when nothing needs update&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The list of packages that need manual care is found in the
&lt;strong&gt;/etc/packaging-farm/gallifrey.mk&lt;/strong&gt; or &lt;strong&gt;/etc/packaging-farm/skaro.mk&lt;/strong&gt;
files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;cd /var/cache/packaging-farm/sources&lt;/span&gt;
&lt;span class="x"&gt;for package in asterisk-chan-capi libasterisk-perl libpri misdn-kernel misdn-user sangoma-wanpipe spandsp&lt;/span&gt;
&lt;span class="x"&gt;do ( rm -fr &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; mkdir &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; cd &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; apt-get source &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;
&lt;span class="x"&gt;      rm -f /var/cache/packaging-farm/depends/&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; )&lt;/span&gt;
&lt;span class="x"&gt;done ; packaging-farm generate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note however that this is merely a reminder and running it without
evaluating the consequences may lead to checksum errors. The following
should be checked:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;from which source will the package be retrieved ?&lt;/li&gt;
&lt;li&gt;which package version will be retrieved ?&lt;/li&gt;
&lt;li&gt;is the package retrieved compatible with the other package in the
    build farm ?&lt;/li&gt;
&lt;li&gt;is there already a package with the same version in the
    /var/cache/packaging-farm/source/package directory ?&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;checksum errors&lt;/h4&gt;
&lt;p&gt;The gallifrey and skaro build machines output is a repository created
with reprepro. It is then mirrored, using reprepro, to mirror.xivo.fr.If
the build machines were lost and had to be reinstalled manually, all
packages would be rebuilt. As a consequence, trying to update the mirror
on mirror.xivo.fr would lead to checksum errors because both the sources
and binary files would have the same name and different checksum,
because of the same content has a different checksum after compression,
either in a &lt;strong&gt;.tar.gz&lt;/strong&gt; or in a &lt;strong&gt;.deb&lt;/strong&gt; . The only way to recover from
such a situation would be to :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;identify all packages that are to be rebuilt by the farm&lt;/li&gt;
&lt;li&gt;dget from mirror.xivo.fr each of them in
    /var/lib/packaging-farm/package&lt;/li&gt;
&lt;li&gt;rebuild the gallifrey / skaro meta package&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Doing so is, in a nutshell, re-importing the packages saved on
mirror.xivo.fr back to the build machine, as if it was the result
created with it. The actual restoration of such a catastrophic event is
likely to be more complicated in reality. But the general idea is simple
enough.A more common problem comes from the fact that mirror.xivo.fr is
a single reprepro repository that is used to merge unrelated
repositories. For instance gallifrey, gallifrey-dev, skaro, skaro-dev
and so on. Because reprepro has a single package pool shared between all
distributions, if package P-1.1.1-1 has been built on gallifrey and
gallifrey-dev, it will be imported twice with the same version but
different checksum and lead to a checksum error. There are two ways to
avoid this problem:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;manually ensure that such a case never happens (for instance by
    setting the VERSION_FLAVOR veriable of submit-xivo.sh to add a
    distinctive string unique to the distribution in the name of
    each package).&lt;/li&gt;
&lt;li&gt;create a separate reprepro repository for each distribution&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;misleading error message&lt;/h4&gt;
&lt;p&gt;When nothing needs to be done according to submit-xivo.sh, it shows&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;package &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; was not modified in git since the last package generation
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://packaging-farm.dachary.org/trac/ticket/22"&gt;although it is unrelated to
git&lt;/a&gt; when
VERSION_COMPUTE=false.The message explaining that no update is needed
is &lt;a href="http://packaging-farm.dachary.org/trac/changeset/d6c8676bd54b95b76ce475d7fe7dbe0d2592aafa"&gt;moved to the need_update
function&lt;/a&gt;
and displays the exact reason, path included, why no update is required.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>After the summer, an active start for XiVO Open Hardware !</title><link href="http://blog.xivo.io/after-the-summer-an-active-start-for-xivo-open-hardware.html" rel="alternate"></link><updated>2011-09-13T10:25:00-04:00</updated><author><name>adubost</name></author><id>tag:blog.xivo.io,2011-09-13:after-the-summer-an-active-start-for-xivo-open-hardware.html</id><summary type="html">&lt;p&gt;No doubt, XiVO Open Hardware creates much interest and Avencall teams
will demonstrate the project in different events in the coming months.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On September 15 th , we will be at Open Hardware Summit in New York,
    THE worldwide event about Open Hardware. We are in the breakout
    sessions with &lt;a href="http://www.openhardwaresummit.org/breakouts/" title="Open Hardware Summit"&gt;"Open Hardware in Voice
    Telecommunications"&lt;/a&gt; .&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;On September 17 th , we will be at Software Freedom Day in Montreal
    for a talk at 1pm &lt;a href="http://wiki.softwarefreedomday.org/2011/Canada/Montreal/SFD-ETS" title="Software Freedom Day"&gt;“Xivo: aller plus loin que le logiciel libre,
    libérer le matériel aussi (VoIP,
    Asterisk)”&lt;/a&gt; .&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;On September 22 nd , we will be at Open World Forum in Paris for a
    track &lt;a href="http://www.openworldforum.org/Conferences/The-OpenHardware-movement-The-community-is-moving-from-software-to-hardware" title="Open World Forum"&gt;“The OpenHardware movement - The community is moving from
    software to
    hardware”&lt;/a&gt;.
    The Open World Forum is the first Open Source Forum in Europe.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;On October, 26 th (10:00-10:35am), we will be at Astricon, the First
    Asterisk User Conference in the world, for the track &lt;a href="http://www.astricon.net/conferenceProgram.aspx" title="Astricon2011"&gt;"XiVO IPBX
    OpenHardware: a full-open telephony solution for
    SOHO"&lt;/a&gt; .
    This is a great opportunity to develop our XiVO Open
    Hardware community.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And don’t forget, from October 18-21, two tradeshows: &lt;a href="http://www.ipconvergence.fr/" title="IP Convergence"&gt;IP
Convergence&lt;/a&gt; and &lt;a href="/index.php?post/2011/07/29/AVENCALL-at-GIF-2011" title="IP Convergence"&gt;GIF
2011&lt;/a&gt;
where we will make some demonstrations of XiVO Open Hardware.&lt;/p&gt;
&lt;p&gt;Come to visit us !&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO submission configuration</title><link href="http://blog.xivo.io/xivo-submission-configuration.html" rel="alternate"></link><updated>2011-09-12T08:12:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-09-12:xivo-submission-configuration.html</id><summary type="html">&lt;h4&gt;clearing the generated sources&lt;/h4&gt;
&lt;p&gt;When some environment variables used by submit-xivo.sh change value, the
whole source directory &lt;a href="http://packaging-farm.dachary.org/trac/ticket/21"&gt;must be
regenerated&lt;/a&gt;. For
instance, the VERSION_FLAVOR variable change the name of each source
package. If the maintainer forgets to remove
/var/cache/packaging-farm/sources, a mix of packages using different
naming conventions is used and creates a very confusing situation.&lt;/p&gt;
&lt;p&gt;Although it would be possible and safe to wipe out the cache (i.e.
/var/cache/packaging-farm/sources) each time the environment changes,
that would be overkill. For instance if setting VERBOSE=true has this
effect, it would be inconvenient. Instead, a set of &lt;a href="http://packaging-farm.dachary.org/trac/changeset/5a601108bb90a2bbf2dfbdd2a330700d980c2e23"&gt;variables is chosen
and their content written into a file after each
run&lt;/a&gt;
of submit-xivo.sh. When submit-xivo.sh is run, the content of the file
from the previous run is matched against the values of the variables in
the environment. If it turns out that they are not the same, the
directory /var/cache/packaging-farm/sources is removed and will be fully
repopuplated.&lt;/p&gt;
&lt;h4&gt;example file&lt;/h4&gt;
&lt;p&gt;Although each environment variable for the submit-xivo.sh script is
documented in the submit-xivo.sh manual page, it is much more convenient
to change values from a commented configuration file that shows all the
expected default values. The &lt;strong&gt;/etc/packaging-farm/submit-xivo.conf&lt;/strong&gt;
file was created for this purpose.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The submit-xivo.sh(1) configuration file. &lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; In the following each line starting with &lt;/span&gt;&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; shows the default&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; value of the corresponding environment variable. For instance&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; export XIVO=skaro shows that the default value of the &amp;quot;XIVO&amp;quot; variable&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; is the string &amp;quot;skaro&amp;quot;. &lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The line can be uncommented and the value changed. The change will take&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; effect which the next packaging-farm(1) command is run.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The name of the skaro distribution. Can be one of skaro, gallifrey.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; XIVO=skaro&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; A Debian GNU/Linux suite. Can be one of squeeze, lenny.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; SUITE=squeeze&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The directory in which the source and debian repositories will be&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; cloned.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; VCS_DIR=/var/cache/packaging-farm/VCS&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The directory in which the resulting source packages will be stored.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; PACKAGES_DIR=/var/cache/packaging-farm/sources&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The content of this variable is appended to the value found in the&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; VERSION file and may be used to distinguish from a development&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; version and a production version for instance.  VERSION_FLAVOR=-dev&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; VERSION_FLAVOR=&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; By default each source version number is created by computing the&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; current time and extracting the last commit hash from the source&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; repository (see the VERSION section above.  If VERSION_COMPUTE is&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; set to false then the current time and last commit hash are not used&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; when generating the version number.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; VERSION_COMPUTE=true&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The gitrevision(7) from which both source and debian git will be&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; checked out. If the GIT_REVISION designates a branch, the latest&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; changes will be pulled from it.  If  GIT_REVISION  designates  a&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; tag, it will be checked out.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; GIT_REVISION=master&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The SOURCE_GIT and DEBIAN_GIT repositories will be pulled only if&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; the last pull occured more than GIT_CACHE_MINUTES minutes ago.  By&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; default it is pull every time (i.e. if the last pull occured more&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; than zero minutes ago). It can be used to reduce the number of pull&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; occuring when running many submit-xivo in sequence.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; GIT_CACHE_MINUTES=0&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The directory containing the source code repositories for each XiVO&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; suite.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; SOURCE_GIT=git://git.proformatique.com/official&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; the directory name within the SOURCE_GIT repository where the&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; sources can be found.  The package name will be infered from the&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; content of the Makefile.pkg file within this directory. For instance&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; DIRECTORY=web-interface submit-xivo.sh will submit the package&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; pf-xivo-web-interface&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; DIRECTORY=&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The directory containing the Debian GNU/Linux repositories for each&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; XiVO suite.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; DEBIAN_GIT=git://git.proformatique.com/official&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; the directory name within the DEBIAN_GIT repository where the&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; package can be found.  The submit-xivo.sh command will not attempt&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; to locate a source in the SOURCE_GIT repository. It will submit a&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; package that has the same name as the content of the NOSOURCE=&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; variable. For instance NOSOURCE=pf-xivo will submit the pf-xivo&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; package. The version number of the package is either the one found&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; in the debian/changelog, if it contains the con- tent of the VERSION&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; file found in the SOURCE_GIT repository. For instance if the first&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; line of the debian/changelog contains 8:1.1.16~5 and the VERSION&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; file contains 1.1.16 it won&amp;#39;t be mod- ified. However, if VERSION&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; contains 1.1.17 a debian/changelog line will be added, preserving&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; the epoch and will contain 8:1.1.17.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; NOSOURCE=&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; If set to true, no changes will be committed to the Debian GNU/Linux&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; repository if a debian/changelog entry is added.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; GIT_DRY_RUN=false&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The mail used when generating a debian/changelog entry.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; DEBEMAIL=technique@proformatique.com&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; The user name used when generating a debian/changelog entry.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; DEBFULLNAME=&amp;quot;Proformatique Maintainance Team&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt;######################################################################&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Before the debian directory is assembled with the source directory,&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; a copy is made using rsync(1).  The content of the RSYNC_OPTIONS&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; variable is given in argument to the rsync command. For instance it&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; may be used to collect the actual content of symbolic links pointing&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; outside of the source directory.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; for dir in app_nv_faxdetect app_fax ami_aoriginate module_xivo res_config_sqlite ;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;  do RSYNC_OPTIONS=--copy-unsafe-links packaging-farm DIRECTORY=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="x"&gt; submit ;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; done&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;export&lt;/span&gt;&lt;span class="x"&gt; RSYNC_OPTIONS=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The inclusion of the configuration file is documented in the
submit-xivo.sh manual page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;When this script is called as a side effect of packaging-farm(1) it can
       be   configured   system  wide  using  the  /etc/packaging-farm/submit-
       xivo.conf example configuration file, which can then be included in the
       global packaging-farm.conf(5) file located in /etc/packaging-farm/pack-
       aging-farm.conf For instance, the line

              export VERSION_COMPUTE=false

       can be added to override the default.
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Rebuilding XiVO gallifrey</title><link href="http://blog.xivo.io/rebuilding-xivo-gallifrey.html" rel="alternate"></link><updated>2011-09-05T08:39:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-09-05:rebuilding-xivo-gallifrey.html</id><summary type="html">&lt;h4&gt;rebuilding gallifrey&lt;/h4&gt;
&lt;p&gt;The /var/cache/packaging-farm/sources directory was removed and&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;export VERSION_COMPUTE=false
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;set in /etc/packaging-farm/packaging-farm.conf and
&lt;code&gt;packaging-farm --cd gallifrey rebuild&lt;/code&gt; was run to rebuild gallifrey
from scratch. It took 42 minutes total. The purpose of this complete
rebuild was to get rid of the timestamp and hash that were previously
part of the version number.&lt;/p&gt;
&lt;h4&gt;compatibility between sangoma-wanpipe and dahdi-linux&lt;/h4&gt;
&lt;p&gt;The build of the gallifrey development packages was blocked because of a
compilation error.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...
/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.c:1504: error: &amp;#39;DAHDI_MAINT_LOOPSTOP&amp;#39; undeclared (first use in this function)
/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.c: In function &amp;#39;wp_tdmv_rx_dchan&amp;#39;:
/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.c:2516: error: &amp;#39;struct dahdi_chan&amp;#39; has no member named &amp;#39;readbufq&amp;#39;
/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.c:2517: error: &amp;#39;struct dahdi_chan&amp;#39; has no member named &amp;#39;sel&amp;#39;
/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.c:2519: error: &amp;#39;struct dahdi_chan&amp;#39; has no member named &amp;#39;eventbufq&amp;#39;
make[6]: *** [/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.o] Error 1
make[5]: *** [_module_/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp] Error 2
make[4]: *** [all] Error 2

---------------------------------------------

make[3]: *** [common-build-impl] Error 1
dpkg-buildpackage: failure: debian/rules build gave error exit status 2
BUILD END packaging-farm --cd sangoma-wanpipe ARCHITECTURE=i386 DISTRIBUTION=lenny chroot-login
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To debug the problem, the following command was used to go in the chroot
where it can be reproduced:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm --cd sangoma-wanpipe ARCHITECTURE=i386 DISTRIBUTION=lenny chroot-login
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The compilation error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/usr/src/sangoma-wanpipe-3.5.20.dfsg.1/kdrvtmp/sdla_tdmv.c:352: error: unknown field &amp;#39;name&amp;#39; specified in initializer
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;is in &lt;code&gt;/usr/src/sangoma-wanpipe-3.5.20.dfsg.1/kdrvtmp/sdla_tdmv.c&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;static const struct dahdi_echocan_ops wp_tdmv_ec_ops = {
        .name = &amp;quot;WANPIPE_HWEC&amp;quot;,
        .echocan_free = wp_tdmv_hwec_free,
};
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and comes from the fact that &lt;code&gt;/usr/include/dahdi/kernel.h&lt;/code&gt; which is part
of&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ii  dahdi-linux-dev                 1:2.5.0+pf.xivo.1.1.18~20110820.120254.7b98919-1 DAHDI telephony interface (source code
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;contains&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;struct dahdi_echocan_ops {

        /*! \brief Free an echocan state structure.                                                                                                             
         * \param[in,out] ec Pointer to the state structure to free.                                                                                            
         *                                                                                                                                                      
         * \
eturn Nothing.                                                                                                                                     
         */
        void (*echocan_free)(struct dahdi_chan *chan, struct dahdi_echocan_state *ec);
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and does not contain the &lt;code&gt;name&lt;/code&gt; field which means that
&lt;code&gt;sangoma-wanpipe-3.5.20&lt;/code&gt; is not compatible with
&lt;code&gt;dahdi-linux-dev 1:2.5.0&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;kernel-module dependencies&lt;/h4&gt;
&lt;p&gt;Nicolas Hicher faced a problem because &lt;a href="http://packaging-farm.dachary.org/trac/ticket/19"&gt;kernel-modules dependencies did
not work&lt;/a&gt;. The
dependency graph generated is wrong: it mentions the stamp files but do
not assemble them properly. As a result the kernel-module is not rebuilt
when the module is rebuilt. The make_graph and make_build functions
&lt;a href="are%20assembled%20into%20a%20single%20functionhttp://packaging-farm.dachary.org/trac/changeset/d561c3d271e26651c2f94f96d343d7d33070eb60" title="are assembled into a single functionhttp://packaging-farm.dachary.org/trac/changeset/d561c3d271e26651c2f94f96d343d7d33070eb60"&gt;are assembled into a single
functio...&lt;/a&gt;|
so that the rule generated lists the timestamp files of the
dependencies.&lt;/p&gt;
&lt;h4&gt;Makefiles moved to /etc/packaging-farm&lt;/h4&gt;
&lt;p&gt;The fact that Makefiles describing how a given package must be built are
expected to be in /var/cache/packaging-farm &lt;a href="http://packaging-farm.dachary.org/trac/ticket/20"&gt;is
confusing&lt;/a&gt;. In
addition, they are copied in /var/lib/packaging-farm after the package
is successfully built. As a result the system administrator is led to
think that /var/lib/packaging-farm/package/Makefile is the file to be
edited although it will be overridden the next time a package is
built.The makefiles &lt;a href="http://packaging-farm.dachary.org/trac/changeset/6450d8785be6406a5e1d1d205df23be04279f736"&gt;are moved from
/var/cache/packaging-farm/build/package/Makefile to
/etc/packaging-farm/package.mk&lt;/a&gt;.
To ensure the compatibility with the existing scripts, a symbolic link
is created from /var/cache/packaging-farm/build/package/Makefile to
/etc/packaging-farm/package.mk by the makefiles.sh script.The manual
page is updated to remove references to the former build directory. The
additional benefit of having the .mk files in /etc/packaging-farm is
that they can be saved by etckeeper and backed up with /etc.The build
machines for gallifrey, gallifrey-dev and skaro were migrated to the new
convention.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>XiVO package versioning</title><link href="http://blog.xivo.io/xivo-package-versioning.html" rel="alternate"></link><updated>2011-08-29T08:37:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-08-29:xivo-package-versioning.html</id><summary type="html">&lt;h4&gt;production version conventions&lt;/h4&gt;
&lt;p&gt;XiVO package release numbers &lt;a href="http://packaging-farm.dachary.org/trac/ticket/16"&gt;must not contain the timestamp +
hash&lt;/a&gt;. When upgrading
from a development machine to a production machine, the package numbers
for production are lexicographically lower than the package numbers for
development. For instance 1.1.15&lt;a&gt;&lt;/a&gt; in a special way as documented
in the dpkg-version manual page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;The lexical compar‐
 ison is a comparison of ASCII values modified so that all the letters sort earlier than all the non-letters and so
 that a tilde sorts before anything, even the end of a part.  For example, the following parts are in sorted order:
 &amp;#39;~~&amp;#39;, &amp;#39;~~a&amp;#39;, &amp;#39;~&amp;#39;, the empty part, &amp;#39;a&amp;#39;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This created somme confusion as demonstrated in the chat log below&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;guillaumeb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;pourquoi&lt;/span&gt; &lt;span class="s s-Atom"&gt;on&lt;/span&gt; &lt;span class="s s-Atom"&gt;conserve&lt;/span&gt; &lt;span class="s s-Atom"&gt;la&lt;/span&gt; &lt;span class="s s-Atom"&gt;date&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;le&lt;/span&gt; &lt;span class="s s-Atom"&gt;n°&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;commit&lt;/span&gt; &lt;span class="s s-Atom"&gt;dans&lt;/span&gt; &lt;span class="s s-Atom"&gt;les&lt;/span&gt; &lt;span class="s s-Atom"&gt;paquets&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;prod&lt;/span&gt; &lt;span class="s s-Atom"&gt;?&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;guillaumeb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;la&lt;/span&gt; &lt;span class="s s-Atom"&gt;date&lt;/span&gt; &lt;span class="s s-Atom"&gt;c&amp;#39;est pour avoir une numérotation chronologique. Le numéro de hash c&amp;#39;est&lt;/span&gt; &lt;span class="s s-Atom"&gt;pour&lt;/span&gt; &lt;span class="s s-Atom"&gt;avoir&lt;/span&gt; &lt;span class="s s-Atom"&gt;une&lt;/span&gt; &lt;span class="s s-Atom"&gt;façon&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;trouver&lt;/span&gt; &lt;span class="s s-Atom"&gt;a&lt;/span&gt; &lt;span class="s s-Atom"&gt;quel&lt;/span&gt; &lt;span class="s s-Atom"&gt;commit&lt;/span&gt; &lt;span class="s s-Atom"&gt;ça&lt;/span&gt; &lt;span class="s s-Atom"&gt;correspond&lt;/span&gt; &lt;span class="s s-Atom"&gt;dans&lt;/span&gt; &lt;span class="s s-Atom"&gt;le&lt;/span&gt; &lt;span class="s s-Atom"&gt;git&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;guillaumeb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;oui&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;mais&lt;/span&gt; &lt;span class="s s-Atom"&gt;pour&lt;/span&gt; &lt;span class="s s-Atom"&gt;les&lt;/span&gt; &lt;span class="nf"&gt;releases&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s s-Atom"&gt;du&lt;/span&gt; &lt;span class="s s-Atom"&gt;temps&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;git&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;nono&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s s-Atom"&gt;on&lt;/span&gt; &lt;span class="s s-Atom"&gt;virait&lt;/span&gt; &lt;span class="s s-Atom"&gt;le&lt;/span&gt; &lt;span class="s s-Atom"&gt;numéro&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;commit&lt;/span&gt; &lt;span class="s s-Atom"&gt;dans&lt;/span&gt; &lt;span class="s s-Atom"&gt;la&lt;/span&gt; &lt;span class="s s-Atom"&gt;version&lt;/span&gt; &lt;span class="s s-Atom"&gt;du&lt;/span&gt; &lt;span class="nf"&gt;paquet&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;guillaumeb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;je&lt;/span&gt; &lt;span class="s s-Atom"&gt;pourrais&lt;/span&gt; &lt;span class="s s-Atom"&gt;rajouter&lt;/span&gt; &lt;span class="s s-Atom"&gt;cette&lt;/span&gt; &lt;span class="s s-Atom"&gt;fonctionalité&lt;/span&gt; &lt;span class="s s-Atom"&gt;dans&lt;/span&gt; &lt;span class="s s-Atom"&gt;le&lt;/span&gt; &lt;span class="s s-Atom"&gt;script&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;soumission&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;Je&lt;/span&gt; &lt;span class="s s-Atom"&gt;n&amp;#39;avais pas réalisé qu&amp;#39;elle&lt;/span&gt; &lt;span class="s s-Atom"&gt;existait&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;guillaumeb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;parce&lt;/span&gt; &lt;span class="s s-Atom"&gt;qu&amp;#39;il semble que là ça pose un pb pour les migrations (le script ne doit pas correctement gérer le &amp;#39;~...&amp;#39;)&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(05:55:58 PM) dachary: guillaumeb: c&amp;#39;est&lt;/span&gt; &lt;span class="s s-Atom"&gt;clair&lt;/span&gt; &lt;span class="s s-Atom"&gt;que&lt;/span&gt; &lt;span class="s s-Atom"&gt;toute&lt;/span&gt; &lt;span class="s s-Atom"&gt;déviation&lt;/span&gt; &lt;span class="s s-Atom"&gt;du&lt;/span&gt; &lt;span class="s s-Atom"&gt;modèle&lt;/span&gt; &lt;span class="s s-Atom"&gt;établit&lt;/span&gt; &lt;span class="s s-Atom"&gt;est&lt;/span&gt; &lt;span class="s s-Atom"&gt;une&lt;/span&gt; &lt;span class="s s-Atom"&gt;menace&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;péter&lt;/span&gt; &lt;span class="s s-Atom"&gt;la&lt;/span&gt; &lt;span class="s s-Atom"&gt;compatibilité&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;guillaumeb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;tu&lt;/span&gt; &lt;span class="s s-Atom"&gt;peux&lt;/span&gt; &lt;span class="s s-Atom"&gt;me&lt;/span&gt; &lt;span class="s s-Atom"&gt;décrire&lt;/span&gt; &lt;span class="s s-Atom"&gt;l&amp;#39;algo de nono pour la gestion de la numérotation pour la release ? &lt;/span&gt;
&lt;span class="s s-Atom"&gt;(05:57:31 PM) dachary: foo-1.1.1~svn283-1 puis foo-1.1.1-1 ca marcherait pas donc ca doit etre autre chose&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(06:04:19 PM) guillaumeb: dachary: je ne connais pas l&amp;#39;algo&lt;/span&gt; &lt;span class="s s-Atom"&gt;dans&lt;/span&gt; &lt;span class="s s-Atom"&gt;le&lt;/span&gt; &lt;span class="nf"&gt;détail&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;51&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;guillaumeb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;mais&lt;/span&gt; &lt;span class="s s-Atom"&gt;par&lt;/span&gt; &lt;span class="s s-Atom"&gt;exemple&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;en&lt;/span&gt; &lt;span class="mf"&gt;1.1.14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;la&lt;/span&gt; &lt;span class="s s-Atom"&gt;version&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;interface&lt;/span&gt; &lt;span class="s s-Atom"&gt;était&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;1.1.14&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;je&lt;/span&gt; &lt;span class="s s-Atom"&gt;vois&lt;/span&gt; &lt;span class="s s-Atom"&gt;pas&lt;/span&gt; &lt;span class="s s-Atom"&gt;comment&lt;/span&gt; &lt;span class="s s-Atom"&gt;faire&lt;/span&gt; &lt;span class="s s-Atom"&gt;pour&lt;/span&gt; &lt;span class="s s-Atom"&gt;avoir&lt;/span&gt; &lt;span class="s s-Atom"&gt;une&lt;/span&gt; &lt;span class="s s-Atom"&gt;version&lt;/span&gt; &lt;span class="s s-Atom"&gt;inferieure&lt;/span&gt; &lt;span class="s s-Atom"&gt;a&lt;/span&gt; &lt;span class="mf"&gt;1.1.14&lt;/span&gt; &lt;span class="s s-Atom"&gt;en&lt;/span&gt; &lt;span class="s s-Atom"&gt;ajoutant&lt;/span&gt; &lt;span class="s s-Atom"&gt;qqc&lt;/span&gt; &lt;span class="s s-Atom"&gt;a&lt;/span&gt; &lt;span class="s s-Atom"&gt;la&lt;/span&gt; &lt;span class="nf"&gt;fin&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;pour&lt;/span&gt; &lt;span class="s s-Atom"&gt;moi&lt;/span&gt; &lt;span class="s s-Atom"&gt;ca&lt;/span&gt; &lt;span class="s s-Atom"&gt;va&lt;/span&gt; &lt;span class="s s-Atom"&gt;toujours&lt;/span&gt; &lt;span class="s s-Atom"&gt;etre&lt;/span&gt; &lt;span class="nf"&gt;superieur&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;doit&lt;/span&gt; &lt;span class="s s-Atom"&gt;y&lt;/span&gt; &lt;span class="s s-Atom"&gt;avoir&lt;/span&gt; &lt;span class="s s-Atom"&gt;un&lt;/span&gt; &lt;span class="nf"&gt;truc&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s s-Atom"&gt;yoda1410:&lt;/span&gt; &lt;span class="s s-Atom"&gt;le&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="s s-Atom"&gt;c&amp;#39;est la revision du package&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(06:06:43 PM) yoda1410: pas la version du package&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(06:07:53 PM) dachary: yoda1410: oui. 7:1.1.14-1 c&amp;#39;est&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nn"&gt;epoch&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;&lt;span class="s s-Atom"&gt;version&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;debianversion&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s s-Atom"&gt;yoda1410:&lt;/span&gt; &lt;span class="s s-Atom"&gt;eh&lt;/span&gt; &lt;span class="s s-Atom"&gt;bien&lt;/span&gt; &lt;span class="s s-Atom"&gt;ou&lt;/span&gt; &lt;span class="s s-Atom"&gt;est&lt;/span&gt; &lt;span class="s s-Atom"&gt;le&lt;/span&gt; &lt;span class="s s-Atom"&gt;soucis&lt;/span&gt; &lt;span class="s s-Atom"&gt;?&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s s-Atom"&gt;yoda1410:&lt;/span&gt; &lt;span class="mf"&gt;1.1.13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="s s-Atom"&gt;seras&lt;/span&gt; &lt;span class="s s-Atom"&gt;toujours&lt;/span&gt; &lt;span class="s s-Atom"&gt;inferieur&lt;/span&gt; &lt;span class="s s-Atom"&gt;a&lt;/span&gt; &lt;span class="mf"&gt;1.1.14&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;si&lt;/span&gt; &lt;span class="s s-Atom"&gt;tu&lt;/span&gt; &lt;span class="s s-Atom"&gt;as&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;1.1.14&lt;/span&gt;&lt;span class="s s-Atom"&gt;~svn200&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="s s-Atom"&gt;pendant&lt;/span&gt; &lt;span class="s s-Atom"&gt;le&lt;/span&gt; &lt;span class="nf"&gt;dev&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;guillaumeb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;yoda1410:&lt;/span&gt; &lt;span class="s s-Atom"&gt;oui&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;mais&lt;/span&gt; &lt;span class="s s-Atom"&gt;ça&lt;/span&gt; &lt;span class="s s-Atom"&gt;fait&lt;/span&gt; &lt;span class="s s-Atom"&gt;partie&lt;/span&gt; &lt;span class="s s-Atom"&gt;du&lt;/span&gt; &lt;span class="s s-Atom"&gt;numéro&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;version&lt;/span&gt; &lt;span class="s s-Atom"&gt;du&lt;/span&gt; &lt;span class="nf"&gt;paquet&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;37&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;yoda1410:&lt;/span&gt; &lt;span class="s s-Atom"&gt;ah&lt;/span&gt; &lt;span class="p"&gt;!&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;yoda1410:&lt;/span&gt; &lt;span class="s s-Atom"&gt;c&amp;#39;est pas bete ce que tu dis :-)&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(06:09:05 PM) dachary: la version release est *inferieure* a la version de dev&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(06:09:12 PM) dachary: mais superieure a la precedente release&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(06:09:26 PM) dachary: donc qqn qui aurait une version de dev serait dans la mouise&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(06:09:39 PM) dachary: mais qqn qui aurait une version stable a upgrade serait bon&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(06:10:04 PM) dachary: dans la mouise =&amp;gt; a devoir downgrader (du point de vue de dpkg --compare-version )&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(06:10:13 PM) yoda1410: un repository de dev, un repository stable&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(06:10:26 PM) yoda1410: potentiellement, tu passes pas vraiment de l&amp;#39;un&lt;/span&gt; &lt;span class="s s-Atom"&gt;a&lt;/span&gt; &lt;span class="s s-Atom"&gt;l&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s s-Atom"&gt;autre&lt;/span&gt; &lt;span class="s s-Atom"&gt;et&lt;/span&gt; &lt;span class="s s-Atom"&gt;vice&lt;/span&gt; &lt;span class="nf"&gt;versa&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;57&lt;/span&gt; &lt;span class="nv"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;si&lt;/span&gt; &lt;span class="s s-Atom"&gt;cette&lt;/span&gt; &lt;span class="s s-Atom"&gt;incohérence&lt;/span&gt; &lt;span class="s s-Atom"&gt;dans&lt;/span&gt; &lt;span class="s s-Atom"&gt;le&lt;/span&gt; &lt;span class="s s-Atom"&gt;numérotage&lt;/span&gt; &lt;span class="s s-Atom"&gt;des&lt;/span&gt; &lt;span class="s s-Atom"&gt;version&lt;/span&gt; &lt;span class="s s-Atom"&gt;est&lt;/span&gt; &lt;span class="s s-Atom"&gt;admise&lt;/span&gt; &lt;span class="s s-Atom"&gt;et&lt;/span&gt; &lt;span class="s s-Atom"&gt;habituelle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;alors&lt;/span&gt; &lt;span class="s s-Atom"&gt;pourquoi&lt;/span&gt; &lt;span class="s s-Atom"&gt;pas&lt;/span&gt;
&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;guillaumeb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;comme&lt;/span&gt; &lt;span class="s s-Atom"&gt;disait&lt;/span&gt; &lt;span class="s s-Atom"&gt;yoda1410&lt;/span&gt; &lt;span class="s s-Atom"&gt;hier&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;on&lt;/span&gt; &lt;span class="s s-Atom"&gt;ne&lt;/span&gt; &lt;span class="s s-Atom"&gt;mélange&lt;/span&gt; &lt;span class="s s-Atom"&gt;pas&lt;/span&gt; &lt;span class="s s-Atom"&gt;les&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s s-Atom"&gt;soit&lt;/span&gt; &lt;span class="s s-Atom"&gt;on&lt;/span&gt; &lt;span class="s s-Atom"&gt;installe&lt;/span&gt; &lt;span class="s s-Atom"&gt;une&lt;/span&gt; &lt;span class="s s-Atom"&gt;stable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;soit&lt;/span&gt; &lt;span class="s s-Atom"&gt;une&lt;/span&gt; &lt;span class="s s-Atom"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s s-Atom"&gt;donc&lt;/span&gt; &lt;span class="s s-Atom"&gt;ça&lt;/span&gt; &lt;span class="s s-Atom"&gt;ne&lt;/span&gt; &lt;span class="s s-Atom"&gt;pose&lt;/span&gt; &lt;span class="s s-Atom"&gt;pas&lt;/span&gt; &lt;span class="s s-Atom"&gt;vraiment&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="nf"&gt;pb&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;guillaumeb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;donc&lt;/span&gt; &lt;span class="s s-Atom"&gt;je&lt;/span&gt; &lt;span class="s s-Atom"&gt;vais&lt;/span&gt; &lt;span class="s s-Atom"&gt;implémenter&lt;/span&gt; &lt;span class="s s-Atom"&gt;un&lt;/span&gt; &lt;span class="s s-Atom"&gt;truc&lt;/span&gt; &lt;span class="s s-Atom"&gt;qui&lt;/span&gt; &lt;span class="s s-Atom"&gt;permet&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;supprimer&lt;/span&gt; &lt;span class="s s-Atom"&gt;la&lt;/span&gt; &lt;span class="s s-Atom"&gt;génération&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s s-Atom"&gt;hash&lt;/span&gt; &lt;span class="s s-Atom"&gt;après&lt;/span&gt; &lt;span class="s s-Atom"&gt;~&lt;/span&gt; &lt;span class="s s-Atom"&gt;et&lt;/span&gt; &lt;span class="s s-Atom"&gt;ce&lt;/span&gt; &lt;span class="s s-Atom"&gt;flag&lt;/span&gt; &lt;span class="s s-Atom"&gt;pourra&lt;/span&gt; &lt;span class="s s-Atom"&gt;etre&lt;/span&gt; &lt;span class="s s-Atom"&gt;mis&lt;/span&gt; &lt;span class="s s-Atom"&gt;sur&lt;/span&gt; &lt;span class="s s-Atom"&gt;la&lt;/span&gt; &lt;span class="s s-Atom"&gt;machine&lt;/span&gt; &lt;span class="s s-Atom"&gt;de&lt;/span&gt; &lt;span class="s s-Atom"&gt;build&lt;/span&gt; &lt;span class="s s-Atom"&gt;qui&lt;/span&gt; &lt;span class="s s-Atom"&gt;se&lt;/span&gt; &lt;span class="s s-Atom"&gt;charge&lt;/span&gt; &lt;span class="s s-Atom"&gt;des&lt;/span&gt; &lt;span class="s s-Atom"&gt;release&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;Ca&lt;/span&gt; &lt;span class="s s-Atom"&gt;ira&lt;/span&gt; &lt;span class="s s-Atom"&gt;comme&lt;/span&gt; &lt;span class="s s-Atom"&gt;ça&lt;/span&gt; &lt;span class="s s-Atom"&gt;tu&lt;/span&gt; &lt;span class="s s-Atom"&gt;penses&lt;/span&gt; &lt;span class="s s-Atom"&gt;?&lt;/span&gt; 
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;dachary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;je&lt;/span&gt; &lt;span class="s s-Atom"&gt;peux&lt;/span&gt; &lt;span class="s s-Atom"&gt;faire&lt;/span&gt; &lt;span class="s s-Atom"&gt;ça&lt;/span&gt; &lt;span class="s s-Atom"&gt;lundi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://packaging-farm.dachary.org/trac/changeset/da84c60ee1a61fdf728720ba71fb99cdb8e9897f"&gt;VERSION_COMPUTE is
implemented&lt;/a&gt;
to disable the use of a timestamp and short hash when generating the
source version number in submit-xivo.sh. The goal of this variable is to
shorten the XiVO version numbers for production packages, meaning the
development packages will have a lower version number than the
development packages.The manual page was updated with the new option:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;VERSION_COMPUTE=true
              By default each source version number is  created  by  computing
              the  current  time  and extracting the last commit hash from the
              source repository  (see  the  VERSION  section  above.  If  VER-
              SION_COMPUTE is set to false then the current time and last com-
              mit hash are not used when generating the version number.
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;epoch change&lt;/h4&gt;
&lt;p&gt;The version 2.0.12 of packaging-farm was installed on the gallifrey
virtual machine instead of the previous 2.0.10 that did not contain the
package version safeguards. When running&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm --cd gallifrey update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The following errors are reported :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;asterisk-chan-sccp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;asterisk-chan-sccp (3:0~prerelease+svn2187+pf.xivo.1.1.16~svn11148-6) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="nd"&gt;:0&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;prerelease&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;svn2187&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn11148-6&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="nd"&gt;:0&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;prerelease&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;svn2187&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110628&lt;/span&gt;&lt;span class="nc"&gt;.185034.ab4fbbe-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;dahdi-tools&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;dahdi-tools (12:2.4.1+pf.xivo.1.1.16~svn10418-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;12&lt;/span&gt;&lt;span class="nd"&gt;:2&lt;/span&gt;&lt;span class="nc"&gt;.4.1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn10418-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;12&lt;/span&gt;&lt;span class="nd"&gt;:2&lt;/span&gt;&lt;span class="nc"&gt;.4.1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110323&lt;/span&gt;&lt;span class="nc"&gt;.135020.382fcea-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;asterisk-sounds-gsm-de-de&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;asterisk-sounds-gsm-de-de (1.0+pf.xivo.1.1.16~svn8396-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.0&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn8396-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.0&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20100617&lt;/span&gt;&lt;span class="nc"&gt;.101945.9e0ba42-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;asterisk-sounds-wav-en-us&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;asterisk-sounds-wav-en-us (1:1.4.19+pf.xivo.1.1.16~svn8366-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.4.19&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn8366-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.4.19&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20100615&lt;/span&gt;&lt;span class="nc"&gt;.100833.e35f5bc-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;asterisk-sounds-wav-es-es&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;asterisk-sounds-wav-es-es (1.4.19+pf.xivo.1.1.16~svn8369-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.4.19&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn8369-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.4.19&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20100615&lt;/span&gt;&lt;span class="nc"&gt;.123951.a72913e-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;asterisk-sounds-wav-fr-ca&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;asterisk-sounds-wav-fr-ca (1.4.19+pf.xivo.1.1.16~svn8373-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.4.19&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn8373-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.4.19&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20100615&lt;/span&gt;&lt;span class="nc"&gt;.131728.8e37c34-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-asterisk-prompts-xivo&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-asterisk-prompts-xivo (1.1.16~svn10712-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn10712-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110505&lt;/span&gt;&lt;span class="nc"&gt;.071312.f112dde-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-asterisk-prompts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-asterisk-prompts (2:1.1.16~svn10715-2) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn10715-2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110505&lt;/span&gt;&lt;span class="nc"&gt;.073011.01bf04f-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-asternic-stats&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-asternic-stats (3:1.1.16~svn9393-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn9393-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20101008&lt;/span&gt;&lt;span class="nc"&gt;.160607.3537a3d-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-agid&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-agid (6:1.1.16~svn11175-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;6&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn11175-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;6&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110701&lt;/span&gt;&lt;span class="nc"&gt;.092341.397e495-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-base-config&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-base-config (10:1.1.16~svn11120-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn11120-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110802&lt;/span&gt;&lt;span class="nc"&gt;.135651.7f1de42-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-cti-server&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-cti-server (26:1.1.16~svn10937-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;26&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn10937-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;26&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110727&lt;/span&gt;&lt;span class="nc"&gt;.102922.01b04e7-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-cti-webclient&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-cti-webclient (1:1.1.16~svn9668-1) etch-xivo-dalek-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn9668-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20101130&lt;/span&gt;&lt;span class="nc"&gt;.153620.4f95789-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-extra&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-extra (1.1.16~svn9928-1) lenny-xivo-gallifrey; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn9928-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110112&lt;/span&gt;&lt;span class="nc"&gt;.094154.13f90a7-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-fetchfw&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-fetchfw (3:1.1.16~svn11130-1) etch-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn11130-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110627&lt;/span&gt;&lt;span class="nc"&gt;.175022.83cded2-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-lib-python&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-lib-python (19:1.1.16~svn10798-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;19&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn10798-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;19&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110512&lt;/span&gt;&lt;span class="nc"&gt;.142430.c2d6027-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-provisioning&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-provisioning (4:1.1.16~svn10454-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;4&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn10454-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;4&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110331&lt;/span&gt;&lt;span class="nc"&gt;.175748.85fafed-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-queues-logger&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-queues-logger (1:1.1.16~svn9930-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn9930-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110112&lt;/span&gt;&lt;span class="nc"&gt;.114348.7d798fa-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-sysconfd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-sysconfd (1:1.1.16~svn10321-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn10321-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110304&lt;/span&gt;&lt;span class="nc"&gt;.195243.b9a73dd-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-utils&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-utils (3:1.1.16~svn10962-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn10962-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110804&lt;/span&gt;&lt;span class="nc"&gt;.084947.d48eca0-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;pf-xivo-web-interface&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pf-xivo-web-interface (7:1.1.16~svn11177-1) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;7&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn11177-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;7&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110802&lt;/span&gt;&lt;span class="nc"&gt;.135651.7f1de42-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;The&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;packaging-farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;VCS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lenny-xivo-gallifrey&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;asterisk-addons&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;trunk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;changelog&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;asterisk-addons (42:1.4.13+pf.xivo.1.1.16~svn10199-6) lenny-xivo-gallifrey-dev; urgency=low&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;contains&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;42&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.4.13&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;svn10199-6&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;greater&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;equal&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;according&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dpkg&lt;/span&gt; &lt;span class="nt"&gt;--compare-versions&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;than&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;computed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;submit-xivo&lt;/span&gt;&lt;span class="nc"&gt;.sh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;42&lt;/span&gt;&lt;span class="nd"&gt;:1&lt;/span&gt;&lt;span class="nc"&gt;.4.13&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;pf&lt;/span&gt;&lt;span class="nc"&gt;.xivo.1.1.16&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nt"&gt;20110215&lt;/span&gt;&lt;span class="nc"&gt;.130731.9460139-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The same upgrade was done on the gallifrey development build machine.
The command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm --cd gallifrey update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;did not issue any error message and found a number of updates. However,
when running&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm gallifrey
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;it failed on sangoma-wanpipe with the following error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...
/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.c:1504: error: &amp;#39;DAHDI_MAINT_LOOPSTOP&amp;#39; undeclared (first use in this function)
/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.c: In function &amp;#39;wp_tdmv_rx_dchan&amp;#39;:
/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.c:2516: error: &amp;#39;struct dahdi_chan&amp;#39; has no member named &amp;#39;readbufq&amp;#39;
/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.c:2517: error: &amp;#39;struct dahdi_chan&amp;#39; has no member named &amp;#39;sel&amp;#39;
/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.c:2519: error: &amp;#39;struct dahdi_chan&amp;#39; has no member named &amp;#39;eventbufq&amp;#39;
make[6]: *** [/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp/sdla_tdmv.o] Error 1
make[5]: *** [_module_/usr/src/sangoma-wanpipe-3.5.17.dfsg.1/kdrvtmp] Error 2
make[4]: *** [all] Error 2

---------------------------------------------

make[3]: *** [common-build-impl] Error 1
dpkg-buildpackage: failure: debian/rules build gave error exit status 2
BUILD END packaging-farm --cd sangoma-wanpipe ARCHITECTURE=i386 DISTRIBUTION=lenny chroot-login
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It turns out that the source package for sangoma-wanpipe could only be
found in the existing repositories (it does not have a corresponding git
directory in the repository) and is probably outdated. On the gallifrey
development machine it shows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/var/cache/packaging-farm/sources/sangoma-wanpipe:
  total used in directory 13708 available 12287544
  drwxr-xr-x  3 root     root     4096 May 16 05:41 .
  drwxr-xr-x 48 www-data root    12288 Aug 29 05:16 ..
  drwxr-xr-x 19 root     root     4096 May 16 05:41 sangoma-wanpipe-3.5.17.dfsg.1
  -rw-r--r--  1 root     root    15904 May 13 09:07 sangoma-wanpipe_3.5.17.dfsg.1-1+pf.lenny.xivo.gallifrey.dev.27.diff.gz
  -rw-r--r--  1 root     root     1555 May 13 09:07 sangoma-wanpipe_3.5.17.dfsg.1-1+pf.lenny.xivo.gallifrey.dev.27.dsc
  -rw-r--r--  1 root     root 13971782 Nov 25  2010 sangoma-wanpipe_3.5.17.dfsg.1.orig.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where on the gallifrey machine it shows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/var/cache/packaging-farm/sources/sangoma-wanpipe:
  total used in directory 14172 available 6490308
  drwxr-xr-x  3 root     root     4096 Jul 28 10:48 .
  drwxr-xr-x 48 www-data root    12288 Aug 29 04:43 ..
  drwxr-xr-x 19 root     root     4096 Jun 27 05:06 sangoma-wanpipe-3.5.20.dfsg.1
  -rw-r--r--  1 root     root     1266 Jun 27 05:16 sangoma-wanpipe_3.5.20.dfsg.1-1+pf.lenny.xivo.gallifrey.dev.27.dsc
  -rw-r--r--  1 root     root 14465725 Jun 27 05:16 sangoma-wanpipe_3.5.20.dfsg.1-1+pf.lenny.xivo.gallifrey.dev.27.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;suggesting that a more recent version is available.&lt;/p&gt;
&lt;h4&gt;disk usage optimization&lt;/h4&gt;
&lt;p&gt;packaging-farm keeps the complete build environment at all times in the
build directory of a package. When disk space must be saved, there
&lt;a href="http://packaging-farm.dachary.org/trac/ticket/17"&gt;should be an option to get rid of
it&lt;/a&gt;, at the expense of
slowing the build.The &lt;a href="http://packaging-farm.dachary.org/trac/changeset/f4a5c380a14996e105f10201e3f5a01784ab1225"&gt;SAVE_DISK variable is
implemented&lt;/a&gt;
to agressively save space (i.e. the apt archives directory is no longer
saved). The chroot used to build a given distribution for a given
architecture is always umounted and removed.The packaging-farm.conf
manual page was updated:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SAVE_DISK
              After a package is successfully built, remove all the intermedi-
              ary files if SAVE_DISK=yes.  If SAVE_DISK=no or is missing, more
              disk  space  will be used because a number of intermediary files
              are not removed. For  instance  the  packages  loaded  from  the
              Internet  for  a  Debian GNU/Linux package are kept so that they
              can be reused by another build without the need to download them
              again.
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Bug fixing XiVO package generation</title><link href="http://blog.xivo.io/bug-fixing-xivo-package-generation.html" rel="alternate"></link><updated>2011-08-22T09:47:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-08-22:bug-fixing-xivo-package-generation.html</id><summary type="html">&lt;h4&gt;kernel-module ignores SOURCE_MODULE&lt;/h4&gt;
&lt;p&gt;When the ROLE=kernel-module is set, the binary packages are built from
an existing package containing the sources of a kernel module in a
fashion that is suitable for module-assistant to work on. The kernel
module to be built is set in the MODULE= variable. If the name of the
module and the name of the package containing the sources from which it
must be built are the same, module-assistant will guess and retrieve the
package from the repository. If the package name is different, it must
be set in the SOURCE_MODULE= variable.When MODULE is different from
SOURCE_MODULE, the dependency graph generated by
lib/kernel-module/depends.sh will fail to create the dependency to the
SOURCE_MODULE package&lt;/p&gt;
&lt;p&gt;The dependency was changed from depending on the rule that is used to
build the package to the timestamp generated by the build of the
package. Using the rule would always recompile the package. Using the
timestamp only recompiles of one timestamp is more recent.The regular
expression looking for the MODULE in the Makefile is changed to also
look for the SOURCE_MODULE variable. When both are found, their content
is used to lookup a source package. If it turns out that both MODULE and
SOURCE_MODULE are present and MODULE is the name of a source package,
their will be one undesired dependency. However, this is harmless
because the worst that can happen is that the kernel modules are rebuilt
although they don't need to.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packaging-farm.dachary.org/trac/changeset/3c7465772c1bcb81fd508bd060cf980a7806d490"&gt;changeset&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;submit-xivo.sh must reuse tarbal&lt;/h4&gt;
&lt;p&gt;When the Debian GNU/Linux package of a XiVO software is improved, the
source tarbal must not be rebuilt. Rebuilding the .orig.tar.gz for the
exact same directory tree will lead to a different md5sum signature,
because of the compression. This is problematic when software building
Debian GNU/Linux repositories such as reprepro refuse a submission
because they already know of a previous tarbal of the same name but with
a different version number.&lt;/p&gt;
&lt;p&gt;XiVO formerly had native Debian GNU/Linux packages (i.e. packages where
there is no separate source tarbal). It was later decided to not create
native Debian GNU/Linux packages but the code that prevented the
re-generation of the tarbal was not modified accordingly.A native
package, in the XiVO sense, has no third party code. There is a source
tree separate from the debian tree, but both are dedicated to XiVO. In
order to simplify the submission script, it was decided to avoid
handling Debian GNU/Linux native packages. Even when the source tree is
empty, the resulting package is treated as if there was a source
tree.The code is slightly different with regard to the generation of the
tarbal because the XiVO native package has a source tree including the
name of the software at the root. The third party source tree does not
contain this additional hierarchy level.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packaging-farm.dachary.org/trac/changeset/034e2d1a16a2b4b80d22463be300f4bacbaba458"&gt;changeset&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;reduce the number of hg pull&lt;/h4&gt;
&lt;p&gt;When running packaging-farm DIRECTORY=a submit ; packaging-farm
DIRECTORY=b submit, it does a git fetch twice on the source and debian
repositories although one would be enough. When this operations is
repeated 30 times only to find that one package must be rebuild, it can
take up to 2 minutes.&lt;/p&gt;
&lt;p&gt;A timestamp is set after pulling the debian and source repositories.
Before pulling, the modification time of the timestamp is checked and if
it is found to be more recent than X minutes ago ( GIT_CACHE_MINUTES
), the pull is not done. By default the value of GIT_CACHE_MINUTES is
set to zero to preserve the current behavior (i.e. the pull occurs every
time).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packaging-farm.dachary.org/trac/changeset/504cd6a6f8b3ad1b1d256fb88adf029861469632"&gt;changeset&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;epoch always triggers submission&lt;/h4&gt;
&lt;p&gt;The epoch ( number: prepended to package version as explained in
deb-version ) does not show in the .dsc file created by
dpkg-buildpackage -SWhen submit/submit-xivo.sh looks for the .dsc file
matching the package version extracted from the debian changelog, it
does not remove the epoch. As a consequence, the package is never found
to match and is always submitted.&lt;/p&gt;
&lt;p&gt;The epoch is stripped from the version before checking it against an
existing .dsc file.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packaging-farm.dachary.org/trac/changeset/6c1ef0ea8cc190da44157af9abfb1e6db0fa6109"&gt;changeset&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;wanpipe&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;wanpipe&lt;/strong&gt; directory is mentionned in the
&lt;strong&gt;/var/cache/packaging-farm/skaro/Makefile&lt;/strong&gt; line that checks for
submissions. It is not listed as a package to be build. In order to
avoid submitting it to the farm each time a rebuild is required, it was
commented out.&lt;/p&gt;
&lt;h4&gt;epoch change&lt;/h4&gt;
&lt;p&gt;The migration from svn to git imposed a change in the version numbers.
It must be taken into account by incrementing the epochin the package
version, otherwise the versions will go back in time which is not good
for upgrading. The safeguards introduced insubmit-xivo.sh issue an error
for each package that has a version going back in time:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The first line of
/var/cache/packaging-farm/VCS/debian/squeeze-xivo-skaro/pf-xivo-agid/trunk/debian/changelog
is 'pf-xivo-agid (6:1.2&lt;a&gt;&lt;/a&gt;svn10175-2) that is greater or equal
(according to dpkg --compare-versions) than the version computed by
submit-xivo.sh (6:1.2\~20110819.160331.530a224-1)&lt;/p&gt;
&lt;p&gt;The first line of
/var/cache/packaging-farm/VCS/debian/squeeze-xivo-skaro/libpri/trunk/debian/changelog
is 'libpri (28:1.4.12+pf.xivo.1.2&lt;a&gt;&lt;/a&gt;20110805.172915.12438dd-1)
that is greater or equal (according to dpkg --compare-versions) than
the version computed by submit-xivo.sh
(28:1.4.12+pf.xivo.1.2\~20110707.095210.a65f898-1)&lt;/p&gt;
&lt;p&gt;The first line of
/var/cache/packaging-farm/VCS/debian/squeeze-xivo-skaro/pf-xivo-base-config/trunk/debian/changelog
is 'pf-xivo-base-config (10:1.2&lt;a&gt;&lt;/a&gt;svn10395-3) that is greater or
equal (according to dpkg --compare-versions) than the version computed
by submit-xivo.sh (10:1.2\~20110817.155800.06ea074-1)&lt;/p&gt;
&lt;p&gt;The first line of
/var/cache/packaging-farm/VCS/debian/squeeze-xivo-skaro/pf-xivo-cti-server/trunk/debian/changelog
is 'pf-xivo-cti-server (26:1.2&lt;a&gt;&lt;/a&gt;svn11342-3) that is greater or
equal (according to dpkg --compare-versions) than the version computed
by submit-xivo.sh (26:1.2\~20110819.160331.530a224-1)&lt;/p&gt;
&lt;p&gt;The first line of
/var/cache/packaging-farm/VCS/debian/squeeze-xivo-skaro/freeswitch/trunk/debian/changelog
is 'freeswitch (1.0.6+pf.xivo.1.2.0&lt;a&gt;&lt;/a&gt;svn9780-0) that is greater
or equal (according to dpkg --compare-versions) than the version
computed by submit-xivo.sh
(1.0.6+pf.xivo.1.2\~20110308.141044.93b0896-1)&lt;/p&gt;
&lt;p&gt;The first line of
/var/cache/packaging-farm/VCS/debian/squeeze-xivo-skaro/pf-xivo-lib-js/trunk/debian/changelog
is 'pf-xivo-lib-js (1:1.2&lt;a&gt;&lt;/a&gt;svn10977) that is greater or equal
(according to dpkg --compare-versions) than the version computed by
submit-xivo.sh (1:1.2\~20110729.174030.0a57146-1)&lt;/p&gt;
&lt;p&gt;The first line of
/var/cache/packaging-farm/VCS/debian/squeeze-xivo-skaro/pf-xivo-sysconfd/trunk/debian/changelog
is 'pf-xivo-sysconfd (1.2&lt;a&gt;&lt;/a&gt;svn10913-0) that is greater or equal
(according to dpkg --compare-versions) than the version computed by
submit-xivo.sh (1.2\~20110818.192128.9f3d578-1)&lt;/p&gt;
&lt;p&gt;The first line of
/var/cache/packaging-farm/VCS/debian/squeeze-xivo-skaro/pf-xivo-web-interface/trunk/debian/changelog
is 'pf-xivo-web-interface (7:1.2&lt;a&gt;&lt;/a&gt;svn10978-0) that is greater or
equal (according to dpkg --compare-versions) than the version computed
by submit-xivo.sh (7:1.2\~20110819.134415.57c6e08-1)&lt;/p&gt;
&lt;p&gt;The first line of
/var/cache/packaging-farm/VCS/debian/squeeze-xivo-skaro/pf-xivo-ha/trunk/debian/changelog
is 'pf-xivo-ha (1.2&lt;a&gt;&lt;/a&gt;svn10449-2) that is greater or equal
(according to dpkg --compare-versions) than the version computed by
submit-xivo.sh (1.2\~20110816.090747.baf278f-1)&lt;/p&gt;
&lt;p&gt;The first line of
/var/cache/packaging-farm/VCS/debian/squeeze-xivo-skaro/pf-xivo-fetchfw/trunk/debian/changelog
is 'pf-xivo-fetchfw (3:1.2&lt;a&gt;&lt;/a&gt;svn11102-0) that is greater or equal
(according to dpkg --compare-versions) than the version computed by
submit-xivo.sh (3:1.2\~20110704.194720.51b210e-1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;hexanol updated the changelog entry for each software above to reflect
the change in the convention, adding to epoch as necessary.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>XiVO packaging verbosity and safeguards</title><link href="http://blog.xivo.io/xivo-packaging-verbosity-and-safeguards.html" rel="alternate"></link><updated>2011-08-15T13:58:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-08-15:xivo-packaging-verbosity-and-safeguards.html</id><summary type="html">&lt;h4&gt;package versions&lt;/h4&gt;
&lt;p&gt;The XiVO package versions are automatically generated in part and follow
the debian conventions as documented in the deb-version(1) manual page.
The automatic numbering occurs in the submit-xivo.sh script as described
below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;VERSIONS
       The  XiVO source packages have no version information. The Debian GNU/Linux package version numbers are generated based on the date
       of the last commit in the source directory (not the debian directory), the version of the third party source if any, the content of
       the  VERSION  file  from  the  source  directory,  followed  by  the  value  of  the  VERSION_FLAVOR  variable  and its short hash.
       V.V.V+X.X.X~YYYYMMDD.HHMMSS.HASH will be the version number of a package built from the third party source version  V.V.V  for  the
       benefit  of  XiVO version X.X.X where the last commit in the sources was made on YYYYMMDD.HHMMSS. This last commit hash is appended
       to the version number.  Example: asterisk-1.4.42+1.1.15~20110312.102015.8ff428-1

       When merging a source with its matching Debian GNU/Linux package, the first line of the debian/changelog file must contain the com‐
       puted version number. If it does not, a new changelog entry is used with the following template:
              echo &amp;quot;&lt;span class="nv"&gt;$package&lt;/span&gt; (&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;debian_version&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;) &lt;span class="nv"&gt;$component&lt;/span&gt;; urgency=low&amp;quot;
              echo
              echo &amp;quot;  * upstream update&amp;quot;
              echo
              echo -n &amp;quot; -- &lt;span class="nv"&gt;$DEBFULLNAME&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;$DEBEMAIL&lt;/span&gt;&amp;gt;  &amp;quot;
              date &amp;#39;+%a, %d %b %Y %R:%S %z&amp;#39;
              echo

       The  handling  of  the versions for the packages that have no corresponding source such as pf-xivo or pf-xivo-backup is simpler and
       relies on the version found in the VERSION file of the source directory only.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The XiVO developers were used to a tool that also incremented the Debian
GNU/Linux version. It is no longer the case and instead of having a -0
version number the developer is required to take care of the increment
as any Debian GNU/Linux package would.This created a confusion that led
to inconsistencies in the sequence of the package versions. Because the
submit-xivo.sh script was unable to detect and properly report these
inconsistencies, it created a situation that was very confusing.To avoid
such troubles, a number of safeguards &lt;a href="http://packaging-farm.dachary.org/trac/changeset/bd8626b5f1d43677f9d3ce5990fb4a545a1982e6"&gt;were
implemented&lt;/a&gt;
to properly document the following mistakes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a changelog with a mismatched package name&lt;/li&gt;
&lt;li&gt;a missing version&lt;/li&gt;
&lt;li&gt;a native package (submit-xivo.sh requires non native packages)&lt;/li&gt;
&lt;li&gt;a package version that goes back in time&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;verbosity&lt;/h4&gt;
&lt;p&gt;The packaging-farm script is based on make(1) which is very verbose by
default. The amount of information produced is useful for debugging but
confusing to the developer. The default was &lt;a href="http://packaging-farm.dachary.org/trac/changeset/5c7ce86716fc16c5ad58910f4c973b081b4a6280"&gt;set to
quiet&lt;/a&gt;
and can be reverted to verbose as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;QUIET=&amp;#39;&amp;#39; packaging-farm target
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This was not documented as it is only useful to debug packaging-farm
itself.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Multiple users building on the XiVO packaging machine</title><link href="http://blog.xivo.io/multiple-users-building-on-the-xivo-packaging-machine.html" rel="alternate"></link><updated>2011-08-09T16:23:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-08-09:multiple-users-building-on-the-xivo-packaging-machine.html</id><summary type="html">&lt;h4&gt;multiuser locking&lt;/h4&gt;
&lt;p&gt;The packaging-farm command does not behave well when two are run
simultaneously to build the same package. Nothing bad happens but fixing
the result involves umounting a number of aufs corrupted file systems
and it is inconvenient. To avoid this, the packaging-farm command was
&lt;a href="http://packaging-farm.dachary.org/trac/changeset/8855a9c5fc09b088edaa055a33de1e820f30cc42"&gt;modified to set a lock based on the last
argument&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;When packaging-farm is run, a lock is set on  its  last  argument.  For
       instance,

              packaging-farm asterisk

       will  set a lock on /var/lock/packaging-farm/asterisk and another invo-
       cation of the same command while this one is still  running  will  wait
       for the first command to finish. Unless the command completes on error,
       the second invocation will just echo that  nothing  needs  to  be  done
       because the previous command did all the work.

       If the command

              packaging-farm gallifrey

       is  run  and that the gallifrey package depends on the asterisk package
       and needs to build it, the same mechanism will be used.  For  instance,
       if  user  A runs packaging-farm gallifrey after user B started to build
       packaging-farm asterisk, the higher level command gallifrey will  pause
       until asterisk has finished building and then resume.
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;multiple builds of the same version&lt;/h4&gt;
&lt;p&gt;It was possible to build the same version of a given version of a
package multiple times. While this comes handy in some cases, it is
confusing in general. The user has to remember that a --reinstall is
required to get the latest version. The reprepro(1) tool refuses the new
package because it has a different checksum than the previous one. A
&lt;a href="http://packaging-farm.dachary.org/trac/changeset/893a93e8a352b1cf0739d325603dc8d3eef38d13"&gt;+build prefix was
appended&lt;/a&gt;
to avoid this confusion.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;REBUILDING PACKAGES AND PUBLISHING REPOSITORIES
       packaging-farm  allows  to  rebuild  the same version of a package. For
       instance, let say foo-1.2 was built and was made available,  either  as
       part  of  the package specific repository created with dpkg-scanpackage
       or as part of a meta package repository created with reprepro(1) A user
       then installs the package using

              apt-get update
              apt-get install foo

       At  this  point  in  time,  the  developer of foo finds a minor bug and
       rebuilds the package on packaging-farm  without  changing  the  version
       number.   packaging-farm  allows  the developer to do that, in the same
       way pbuilder or sbuild does. However, contrary to these tools,  packag-
       ing-farm  publishes the packages and provides a safeguard to avoid pub-
       lishing the same package version multiple times.

       If version 1.0-1 of a package is built and no previous version has been
       built,  nothing is done. If version 1.0-1 has already been built and is
       rebuilt because a package it depends on has been  upgraded,  packaging-
       farm  will add the +build1 suffix to the package version and it will be
       1.0-1+build1 In all further builds of the same version, the last number
       will be incremented as in 1.0-1+build2 If a new version of the package,
       say 1.1-1 is published, it will be compared to the last  built  version
       using dpkg --compare-version Because it is found to be greater, it will
       be used as if there was no previous build.
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>XiVO package submissions rules</title><link href="http://blog.xivo.io/xivo-package-submissions-rules.html" rel="alternate"></link><updated>2011-08-01T21:47:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-08-01:xivo-package-submissions-rules.html</id><summary type="html">&lt;h4&gt;conditional update based on version instead of time&lt;/h4&gt;
&lt;p&gt;The following use case fails if &lt;strong&gt;submit-xivo.sh&lt;/strong&gt; does not create a
source package if the timestamp of the last successfull build is more
recent than the latest commit of the debian or source repository.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DIRECTORY=package submit-xivo.sh&lt;/li&gt;
&lt;li&gt;checkout a tag set a day before&lt;/li&gt;
&lt;li&gt;DIRECTORY=package submit-xivo.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This problem was introduced with the implementation of the GIT_REVISION
variable that allows to chose which tag or branch the debian and source
should be set.Instead of checking for the build timestamp, the version
of the package that should be build is checked against an existing
.diff.gz file in the source directory. If no match is found, the source
package is created.The documentation was updated to reflect this new
behavior:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;When run as DIRECTORY=asterisk submit.xivo.sh will merge  the  asterisk
       sources  with  the  corresponding Debian GNU/Linux package instructions
       and build a source package.


       step 1 - update the git repositories
              the SOURCE_GIT and DEBIAN_GIT repositories  are  pulled  in  the
              VCS_DIR directory.

       step 2 - test dependencies
              if  there exists a .diff.gz file matching the current version of
              the package (see VERSION below), skip step 3 and step 4

       step 3 - merge sources and Debian GNU/Linux package
              the source  and  Debian  package  information  are  copied  from
              VCS_DIR and merged into PACKAGES_DIR

       step 4 - build source package
              without  any attempt at resolving dependencies, a source package
              is built using dpkg-buildpackage
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;VERSION_FLAVOR&lt;/h4&gt;
&lt;p&gt;At the request of Nicolas Hicher, the VERSION_FLAVOR variable was added
to implement the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;VERSIONS
       The XiVO source  packages  have  no  version  information.  The  Debian
       GNU/Linux  package  version  numbers are generated based on the date of
       the last commit in the source directory (not the debian directory), the
       version  of  the  third party source if any, the content of the VERSION
       file from the source directory, followed  by  the  value  of  the  VER-
       SION_FLAVOR   variable   and   its   short   hash.   V.V.V+X.X.X~YYYYM-
       MDD.HHMMSS.HASH will be the version number of a package built from  the
       third  party source version V.V.V for the benefit of XiVO version X.X.X
       where the last commit in the sources was made on YYYYMMDD.HHMMSS.  This
       last  commit  hash  is appended to the version number.  Example: aster-
       isk-1.4.42+1.1.15~20110312.102015.8ff428-1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;VERSION_FLAVOR=
              The content of this variable is appended to the value  found  in
              the  VERSION file and may be used to distinguish from a develop-
              ment version and a production version for instance.
              VERSION_FLAVOR=-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>AVENCALL at GIF 2011</title><link href="http://blog.xivo.io/avencall-at-gif-2011.html" rel="alternate"></link><updated>2011-07-29T10:43:00-04:00</updated><author><name>adubost</name></author><id>tag:blog.xivo.io,2011-07-29:avencall-at-gif-2011.html</id><summary type="html">&lt;p&gt;&lt;img alt="gif2011" src="/public/.bandeau_webgif11-gb_m.jpg" title="gif2011, juil. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;Avencall will present XiVO IPBX Open Hardware in &lt;a href="http://www.grenoble-innovation-fair.com" title="GIF"&gt;GIF - Grenoble
Innovation Fair 2011&lt;/a&gt; on
October 20&amp;amp;21.&lt;/p&gt;
&lt;p&gt;Tomorrow’s leading companies will gather in Grenoble, France, to present
more than 150 innovative technologies.&lt;/p&gt;
&lt;p&gt;For its third edition Grenoble Innovation Fair is broadening its scope
to cover more new or emerging innovations in Europe, welcoming 150
start-ups and laboratories in an exhibition space dedicated to
networking with industry and technology demonstrations.&lt;/p&gt;
&lt;p&gt;This international event, the only one of its kind in France, is being
staged by three Grenoble organizations which have pooled their resources
to bring together for two days new ventures with high-growth potential,
research laboratories, industrial firms and innovative SMEs.&lt;/p&gt;
&lt;p&gt;The fair is expecting more than 1,500 participants, eager to extend
their innovation networks, identify opportunities for new partnerships
and discover unsuspected sources of innovation.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO farm dedicated to development</title><link href="http://blog.xivo.io/xivo-farm-dedicated-to-development.html" rel="alternate"></link><updated>2011-07-25T09:56:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-07-25:xivo-farm-dedicated-to-development.html</id><summary type="html">&lt;h4&gt;XiVO submission with git version&lt;/h4&gt;
&lt;p&gt;The
&lt;a href="http://packaging-farm.dachary.org/trac/browser/submit/submit-xivo.sh?rev=934db22f985be6f102a327222a54c833380f3b13"&gt;submit-xivo.sh&lt;/a&gt;
script uses whatever GIT version it finds to be the default. The
behavior was
&lt;a href="http://packaging-farm.dachary.org/trac/changeset/866f47eb8cd8b43f6956fe0d326d9e77cc212a9b/"&gt;changed&lt;/a&gt;
to allow an optional specification of the GIT revision, as documented in
the &lt;strong&gt;submit-xivo.sh(1)&lt;/strong&gt; manual page.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;GIT_REVISION=master
              The gitrevision(7) from which both source and debian git will be
              checked out. If the value of this  variable  is  different  from
              what  it was the last time packaging-farm(1) was run, the depen-
              dency graph is cleared and all packages will be rebuild  regard-
              less.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The version &lt;a href="http://packaging-farm.dachary.org/download/"&gt;2.0.7&lt;/a&gt; has
been published with this modification.&lt;/p&gt;
&lt;h4&gt;separated repository versus dedicated farm&lt;/h4&gt;
&lt;p&gt;The pro and cons of were discussed with Nicolas Hicher on IRC.It was
decided that creating a dedicated farm virtual machine was the best
option.&lt;/p&gt;
&lt;h3&gt;separated repositories&lt;/h3&gt;
&lt;p&gt;A packaging-farm meta package would be created under the name
gallifrey-dev with a configuration &lt;a href="http://gallifrey.dachary.org/packaging-farm/gallifrey/Makefile"&gt;similar to
gallifrey&lt;/a&gt;.
The developer would use &lt;strong&gt;packaging-farm gallifrey-dev&lt;/strong&gt; and the
packager would use &lt;strong&gt;packaging-farm gallifrey&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;pro&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;some packages that are not active are shared and do not need to be
    rebuilt twice&lt;/li&gt;
&lt;li&gt;less hardware resources used (spare 1GB RAM and 30GB disk)&lt;/li&gt;
&lt;li&gt;no need to maintain two machines / operating systems&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cons&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;if a developer works on a package (say asterisk), the package would
    be rebuild three times if the following sequence of commands occur :
    packaging-farm gallifrey-dev ; packaging-farm gallifrey ;
    packaging-farm gallifrey-dev&lt;/li&gt;
&lt;li&gt;the implementation of the package submission that allows to chose
    which GIT branch the packages are extracted from in the
    packaging-farm needs to be fine grained to avoid submitting a
    package just because the chosen branch changes&lt;/li&gt;
&lt;li&gt;if the production repository is being prepared, the added delay
    involved when a developer and the release manager alternatively
    update the repository may be an annoying drawback&lt;/li&gt;
&lt;li&gt;a given package is going to be build a number of times with the
    exact same version. This will create checksum errors in the
    mirroring of the repositories. It would require a modification of
    the submission script to always increment the debian version number.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;dedicated farm&lt;/h3&gt;
&lt;p&gt;A duplicate of the gallifrey VM is created. The release manager uses a
machine when stabilizing a XiVO version and always builds from a given
GIT version. The developers use another machine which is always built
from the master branch.&lt;/p&gt;
&lt;h3&gt;pro&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;the implementation of the package submission that allows to chose
    which GIT branch the packages are extracted from in the
    packaging-farm can resubmit everything when the GIT version changes
    because this is a rare event. It is a simpler implementation.&lt;/li&gt;
&lt;li&gt;there is no overhead because of duplicate builds and therefore no
    checksum errors when mirroring the repository&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cons&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;more hardware resources required (1GB RAM + 30GB disk)&lt;/li&gt;
&lt;li&gt;more machines to maintain : /etc/packaging-farm/packaging-farm.conf
    and /var/cache/packaging-farm/build/gallifrey/Makefile must be
    manually updated to be kept in sync&lt;/li&gt;
&lt;li&gt;more machine names to remember for the release manager. The
    developers still only know one machine and need not be aware of the
    machine dedicated to the building of the release.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;cloning the gallifrey VM&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;create a snapshot of the LVM volume containing the gallifrey VM disk&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lvcreate --snapshot --size 1G --name tmp /dev/all/f3e8d23f-21c0-417d-9b5e-91bb4da9b926.disk0
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;create a LVM volume of the same size as the gallifrey VM disk&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lvcreate --size 30G --name dev all
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;copy the snapshot to the new disk with low priority I/O&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ionice -c3 dd if=/dev/all/tmp of=/dev/all/dev bs=1024k
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;remove the snapshot&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lvremove /dev/all/tmp
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;assign an IP to the gallifrey-dev future VM&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@host01:~# grep y-dev /etc/bind/db.farm
gallifrey-dev.xivo.vm   IN  A   10.10.60.6
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;create a random MAC for the gallifrey-dev future VM&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;MACADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;52:54:$(dd if=/dev/urandom count=1 2&amp;gt;/dev/null | md5sum | sed &amp;#39;s/^\(..\)\(..\)\(..\)\(..\).*$/\1:\2:\3:\4/&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;MACADDR&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;add a DHCP entry binding the MAC to the IP in
    &lt;strong&gt;/etc/dhcp/dhcpd.conf&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;host&lt;/span&gt; &lt;span class="nt"&gt;gallifrey-dev&lt;/span&gt;&lt;span class="nc"&gt;.xivo.vm.farm&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;hardware&lt;/span&gt; &lt;span class="n"&gt;ethernet&lt;/span&gt; &lt;span class="m"&gt;52&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;54&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;86&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;b3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="n"&gt;gallifrey&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="n"&gt;subnet&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;reload bind and dhcp&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/init.d/bind9 reload
/etc/init.d/isc-dhcp-server restart
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;create the gallifrey-dev VM by adopting the dev LVM volume&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gnt-instance add -n host01.farm -B memory=4G -o debootstrap+default -t plain --disk 0:adopt=dev --no-install --net 0:mac=52:54:86:b3:3f:10 gallifrey-dev.xivo.vm.farm
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;bind the SSH port of the new VM to 22006&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;in /etc/shorewall/rules&lt;/span&gt;
&lt;span class="x"&gt;DNAT           net             loc:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;VM_GALLIFREY_DEV_XIVO&lt;/span&gt;&lt;span class="x"&gt;:22 tcp     22006           -       &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;IP_FAILOVER&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;in /etc/shorewall/params&lt;/span&gt;
&lt;span class="x"&gt;VM_GALLIFREY_DEV_XIVO=10.10.60.6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;reload shorewall&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;shorewall restart ; sleep 30 &amp;amp;&amp;amp; shorewall clear
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;start the gallifrey-dev VM&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gnt-instance start gallifrey-dev.xivo.vm.farm
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;balloon down the gallifrey-dev VM memory to 1G&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo balloon 1024 | socat - unix:/var/run/ganeti/kvm-hypervisor/ctrl/gallifrey-dev.xivo.vm.farm.monitor
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;add nginx reverse proxy in
    /etc/nginx/sites-available/gallifrey-dev.dachary.org&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;gallifrey&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dachary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;access_log&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gallifrey&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dachary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;proxy_pass&lt;/span&gt;   &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;gallifrey&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;reload nginx&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/init.d/nginx reload
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Coming back from RMLL2011</title><link href="http://blog.xivo.io/coming-back-from-rmll2011.html" rel="alternate"></link><updated>2011-07-19T15:48:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-07-19:coming-back-from-rmll2011.html</id><summary type="html">&lt;p&gt;We had the last slot of the day after the lacie-nas.org talk (excellent
presentation and demonstration from Thomas Monjalon and Simon Guinot)
where it was discussed the idea of opening hardware products and the
relation between hardware manufacturers and embedded software
developers. It becomes clearer and clearer that the OpenSource community
is pushing the hardware manufacturers to open-up their specifications
(UART, GPIOs, JTAG) and allow firmware hackings and add-ons
developments.&lt;br /&gt;
In our case, the hardware will be fully open and documented to allow
community contributions and we have several questions about TDM
extensions of our appliances with other interfaces (analog, wireless,
soundcards ...)&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Coming back from Communicasia2011</title><link href="http://blog.xivo.io/coming-back-from-communicasia2011.html" rel="alternate"></link><updated>2011-07-19T15:10:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-07-19:coming-back-from-communicasia2011.html</id><summary type="html">&lt;p&gt;Please find below a picture of the French pavillon :  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Communicasia2011
FrenchPavillon" src="/public/.P1050447_m.jpg" title="Communicasia2011 FrenchPavillon, juil. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;We had to pleasure to demonstrate our IPBX solution to the Mr Caron,
French ambassador in Singapour, on our booth  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Communicasia2011 Embassador on
Booth" src="/public/.P1050441_m.jpg" title="Communicasia2011 Embassador on Booth, juil. 2011" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO packages with no sources</title><link href="http://blog.xivo.io/xivo-packages-with-no-sources.html" rel="alternate"></link><updated>2011-07-10T08:54:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-07-10:xivo-packages-with-no-sources.html</id><summary type="html">&lt;h4&gt;XiVO packages with no source&lt;/h4&gt;
&lt;p&gt;The submit-xivo.sh command that is part of packaging-farm was improved
to support the packages that have no source files such as pf-xivo and
pf-xivo-backup.The changes were published as part of the
&lt;a href="http://packaging-farm.dachary.org/download/"&gt;2.0.6&lt;/a&gt; release of
packaging-farm.The relevant part of the documentation (man
submit-xivo.sh) explain how to use it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;NAME
       submit-xivo.sh - create a source package from XiVO repositories


SYNOPSIS
       [DIRECTORY=] submit-xivo.sh

       [NOSOURCE=] submit-xivo.sh

...
NOSOURCE=
       Some packages, such as pf-xivo or pf-xivo-backup do not have  a  corre-
       sponding  source.   They  only  exist as a debian package with no file.
       submit-xivo.sh(1) supports this special case with the NOSOURCE environ-
       ment  variable.  If  it is set and no DIRECTORY environment variable is
       set, it will submit a native debian package from the DEBIAN_GIT  direc-
       tory  matching  the  content  of the NOSOURCE environment variable. For
       instance:

              NOSOURCE=pf-xivo submit-xivo.sh
...
       NOSOURCE=
              the  directory  name  within the DEBIAN_GIT repository where the
              package can be  found.   The  submit-xivo.sh  command  will  not
              attempt to locate a source in the SOURCE_GIT repository. It will
              submit a package that has the same name as the  content  of  the
              NOSOURCE=  variable.  For  instance NOSOURCE=pf-xivo will submit
              the pf-xivo package. The version number of the package is either
              the  one  found in the debian/changelog, if it contains the con-
              tent of the VERSION file found in the SOURCE_GIT repository. For
              instance  if  the  first  line  of the debian/changelog contains
              8:1.1.16~5 and the VERSION file contains 1.1.16 it won&amp;#39;t be mod-
              ified.  However,  if  VERSION contains 1.1.17 a debian/changelog
              line will be  added,  preserving  the  epoch  and  will  contain
              8:1.1.17.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;strong&gt;/var/cache/packaging-farm/build/gallifrey/Makefile&lt;/strong&gt; and
&lt;strong&gt;/var/cache/packaging-farm/build/skaro/Makefile&lt;/strong&gt; were updated to take
advantage of this new feature as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;                                                                                                                                                                     &lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Submitted from the GIT debian repositories                                                                                                                          &lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;                                                                                                                                                                     &lt;/span&gt;
&lt;span class="x"&gt;        cd .. ; for package in pf-xivo pf-xivo-backup ; do packaging-farm NOSOURCE=&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="x"&gt; submit ; done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;bash -e behavior&lt;/h4&gt;
&lt;p&gt;The -e bash option is expected to end the script being run as soon as an
error occurs. This is a convenient way to throw an exception from a
nested function being run, should an irrecoverable error occur. However,
the following code demonstrate that the -e option is sometime disabled:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;set -ex

  PS4=&amp;#39; &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;FUNCNAME&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;: &lt;span class="nv"&gt;$LINENO&lt;/span&gt;: &amp;#39;

  function f() {
      set -e
      false
      echo $@
  }

  ! f why does it display ? It should stop because of -e
  f
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The -e behavior is &lt;a href="http://mywiki.wooledge.org/BashFAQ/105"&gt;notoriously
tricky&lt;/a&gt; and packaging-farm was
written to use it only when it has a is predictable. A question was
&lt;a href="http://stackoverflow.com/questions/6640120/why-is-bash-e-disabled-within-a-function-run-with-not"&gt;posted on
stackoverflow&lt;/a&gt;
to explain this specific case. The same question asked on
irc.freenode.net#bash did not bring any answer.&lt;/p&gt;
&lt;h4&gt;skaro and gallifrey build&lt;/h4&gt;
&lt;p&gt;Guillaume asked for a shortcut to rebuild the full distribution after
updating a given package for skaro. Instead of running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm DIRECTORY=confgen submit
packaging-farm ARCHITECTURES=i386 pf-xivo-confgen
packaging-farm skaro
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the following rule was added to
&lt;strong&gt;/var/cache/packaging-farm/build/skaro/Makefile&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;rebuild&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt; 
        &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="n"&gt;skaro&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;so that it is possible to run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm --cd skaro rebuild
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to achieve the same result. There is some additional overhead because
all newer packages will be rebuilt, not just the one of interest. That
is, if someone updated asterisk since the last rebuild of skaro, it will
also be rebuilt. It is believed that such a case is rare enough and does
not warrant a special case. If it turns out to be wrong, an other, more
specialized, shortcut can be added.&lt;/p&gt;
&lt;h4&gt;rebuilding packages and publishing repositories&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm  allows  to  rebuild  the same version of a package. For
       instance, let say foo-1.2 was built and was made available,  either  as
       part  of  the package specific repository created with dpkg-scanpackage
       or as part of a meta package repository created with reprepro(1) A user
       then installs the package using

              apt-get update
              apt-get install foo

       At  this  point  in  time,  the  developer  of foo find a minor bug and
       rebuilds the package on packaging-farm  without  changing  the  version
       number.   packaging-farm  allows  the developer to do that, in the same
       way pbuilder or sbuild does. But that has an important consequence  for
       the  user  who installed the foo package. There now is a new version of
       the foo package that has exactly the same version as the  previous  one
       but  is  not really the same.  The user needs to re-install the package
       by explicitly asking for it as follows:

              apt-get update
              apt-get install --reinstall foo

       Such a behavior is extremely confusing for the casual user. This is why
       it  is  not recommended to advertise the packaging-farm repositories to
       the general public. The recommended method is to create a reprepro mir-
       ror  that  contains  a copy of the packaging-farm repository at a point
       where all package versions have been updated to reflect the  change  of
       the  packages.   The reprepro safeguard ( error : is already registered
       with different checksums! ) provides a simple way to  ensure  that  the
       repository  targeted for the public never publishes the same version of
       the package with different content twice.
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>XiVO packaging from the developer point of view</title><link href="http://blog.xivo.io/xivo-packaging-from-the-developer-point-of-view.html" rel="alternate"></link><updated>2011-07-04T12:04:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-07-04:xivo-packaging-from-the-developer-point-of-view.html</id><summary type="html">&lt;h4&gt;pre-requistes&lt;/h4&gt;
&lt;p&gt;The ssh key of the developer must be installed in
/root/.ssh/authorized_keys on http://skaro.dachary.org/packaging-farm/.&lt;/p&gt;
&lt;h4&gt;workflow&lt;/h4&gt;
&lt;p&gt;The reference for the following can be found in the packaging-farm,
packaging-farm.conf and submit-xivo.sh manual pages.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Guillaume gets work done on the &lt;strong&gt;web-interface&lt;/strong&gt; directory of the
    internal SVN&lt;/li&gt;
&lt;li&gt;It is mirrored every 5 minutes to the &lt;a href="http://git.xivo.fr/xivo-skaro.git/"&gt;external
    GIT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Guillaume submits the rebuild of the package to skaro.dachary.org&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;22002&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mf"&gt;@66.254.41.119&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="n"&gt;DIRECTORY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;submit&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;If the build fails, it has a non zero exit status. Guillaume goes
    into the chroot that was preserved after the failure to try and fix
    the issue:&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;22002&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mf"&gt;@66.254.41.119&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;ARCHITECTURE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i386&lt;/span&gt; &lt;span class="n"&gt;DISTRIBUTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;squeeze&lt;/span&gt; &lt;span class="n"&gt;chroot&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;
 &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;After fixing the issue and rebuilding successfully, a &lt;a href="http://skaro.dachary.org/packaging-farm/pf-xivo-web-interface/gnulinux/debian/i386/squeeze/src/"&gt;repository
    containing the resulting
    package&lt;/a&gt;
    can be used by adding the following to the /etc/apt/sources.list
    file:&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://skaro.dachary.org/packaging-farm/pf-xivo-web-interface/gnulinux/debian/i386/squeeze/src&lt;/span&gt; &lt;span class="kp"&gt;./&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Guillaume conducts a few tests on a virtual machine of his own with
    the newly built package.&lt;/li&gt;
&lt;li&gt;When satisfied with the result, he decides to update the skaro
    repository by asking the machine to harvest the results of each
    individual package into a global repository:&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;22002&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mf"&gt;@66.254.41.119&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="n"&gt;skaro&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;The updated repository can be used by adding the following to the
    file /etc/apt/sources.list:&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://skaro.dachary.org/packaging-farm/skaro/gnulinux/debian&lt;/span&gt; &lt;span class="kp"&gt;skaro-squeeze&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;debugging on the farm&lt;/h4&gt;
&lt;p&gt;When in the chroot by running the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;22002&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mf"&gt;@66.254.41.119&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;ARCHITECTURE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i386&lt;/span&gt; &lt;span class="n"&gt;DISTRIBUTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;squeeze&lt;/span&gt; &lt;span class="n"&gt;chroot&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;new software can be installed and one must not fear to destroy anything
of value. If the chroot becomes messy, it can be re-initialized as
follows, after exiting it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;22002&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mf"&gt;@66.254.41.119&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;ARCHITECTURE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i386&lt;/span&gt; &lt;span class="n"&gt;DISTRIBUTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;squeeze&lt;/span&gt; &lt;span class="n"&gt;chroot&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reinit&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;debian&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;strong&gt;chroot-reinit&lt;/strong&gt; target remove the chroot entirely and replaces it
with a virgin copy of the corresponding distribution. The get/debian
target get a clean copy of the sources found in the /usr/src directory.&lt;/p&gt;
&lt;h4&gt;concurrency&lt;/h4&gt;
&lt;p&gt;All packages can be built in parallel. For instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;22002&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mf"&gt;@66.254.41.119&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;can be run at the same time as&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;22002&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mf"&gt;@66.254.41.119&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and they will not interfere. However, if both commands trigger the build
of another package because they have it in common in the dependency
graph, the two build may overlap. A package can be built without any
regard to the dependency graph as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;22002&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mf"&gt;@66.254.41.119&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The general principle is that the &lt;strong&gt;--cd&lt;/strong&gt; flag goes to the self
contained directory when the package is being built and ignore the
dependency graph. Without the &lt;strong&gt;--cd&lt;/strong&gt; flag, the command will lookup in
the dependency graph to find an entry with the argument name and make
sure all its dependencies are compiled before it.&lt;/p&gt;
&lt;h4&gt;building for a given architecture&lt;/h4&gt;
&lt;p&gt;Guillaume has a i386 virtual machine but the current skaro packages are
built for x86_64. The following command was used to &lt;a href="http://skaro.dachary.org/packaging-farm/pf-xivo-web-interface/gnulinux/debian/i386/squeeze/src/"&gt;build the package
of interest for
i386&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;depends&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt;
&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;22002&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mf"&gt;@66.254.41.119&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="n"&gt;DIRECTORY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;submit&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="n"&gt;ARCHITECTURES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i386&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;forcing the build of a package&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;--force&lt;/strong&gt; option was implemented and documented to bypass the
dependency graph:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;--force &amp;lt;package-name&amp;gt;
              disregard the dependency graph and perform the action  &amp;lt;package-
              name&amp;gt;  without  any  consideration  to the fact that none of its
              dependencies have changed since the last time it was run.
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;packaging-farm wish-list&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://packaging-farm.dachary.org/trac/ticket/6"&gt;add a lock per
    distribution/architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://packaging-farm.dachary.org/trac/ticket/7"&gt;end of build email/jabber/chat
    notification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;listing what can be done&lt;/h4&gt;
&lt;p&gt;The following command can be used to list all the known variables that
can be used to implement the use case described above:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;22002&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mf"&gt;@66.254.41.119&lt;/span&gt; &lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;quiet&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="n"&gt;submit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It will output something that looks like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;Create source packages from XiVO repositories.&lt;/span&gt;

&lt;span class="x"&gt;The debian directories are cloned from git://git.xivo.fr/debian into /var/cache/packaging-farm/VCS/debian/squeeze-xivo-skaro&lt;/span&gt;
&lt;span class="x"&gt;The sources are cloned from git://git.xivo.fr into /var/cache/packaging-farm/VCS/sources/xivo-skaro&lt;/span&gt;
&lt;span class="x"&gt;The packages are created in /var/cache/packaging-farm/sources&lt;/span&gt;

&lt;span class="x"&gt;Usage:&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; submit all known sources but do nothing&lt;/span&gt;
&lt;span class="x"&gt;for directory in agid asterisk base-config bntools chan_sccp confgen ctiservers dahdi-linux dahdi-tools extra fetchfw freeswitch lib-javascript lib-python libpri monitoring pf-xivo pf-xivo-backup provisioning res_watchdog sysconfd utils wanpipe web-interface xivo-sounds xivo_ha ; do packaging-farm DIRECTORY=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;directory&lt;/span&gt;&lt;span class="x"&gt; submit ; done&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; submit a given source and update the repository&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=agid PACKAGE=pf-xivo-agid submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=asterisk PACKAGE=asterisk submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=base-config PACKAGE=pf-xivo-base-config submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=bntools PACKAGE=bntools submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=chan_sccp PACKAGE=asterisk-chan-sccp submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=confgen PACKAGE=pf-xivo-confgen submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=ctiservers PACKAGE=pf-xivo-cti-server submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=dahdi-linux PACKAGE=dahdi-linux submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=dahdi-tools PACKAGE=dahdi-tools submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=extra PACKAGE=pf-xivo-extra submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=fetchfw PACKAGE=pf-xivo-fetchfw submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=freeswitch PACKAGE=freeswitch submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=lib-javascript PACKAGE=pf-xivo-lib-js submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=lib-python PACKAGE=pf-xivo-lib-python submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=libpri PACKAGE= submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=monitoring PACKAGE=pf-xivo-monitoring submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=pf-xivo PACKAGE= submit&lt;/span&gt;
&lt;span class="x"&gt;Can&amp;#39;t open /var/cache/packaging-farm/VCS/sources/xivo-skaro/libpri/Makefile.pkg: No such file or directory.&lt;/span&gt;
&lt;span class="x"&gt;could not match ^DEB_PKG.*?([\w-]+) in file /var/cache/packaging-farm/VCS/sources/xivo-skaro/libpri/Makefile.pkg to extract package name&lt;/span&gt;
&lt;span class="x"&gt;Can&amp;#39;t open /var/cache/packaging-farm/VCS/sources/xivo-skaro/pf-xivo/Makefile.pkg: No such file or directory.&lt;/span&gt;
&lt;span class="x"&gt;could not match ^DEB_PKG.*?([\w-]+) in file /var/cache/packaging-farm/VCS/sources/xivo-skaro/pf-xivo/Makefile.pkg to extract package name&lt;/span&gt;
&lt;span class="x"&gt;Can&amp;#39;t open /var/cache/packaging-farm/VCS/sources/xivo-skaro/pf-xivo-backup/Makefile.pkg: No such file or directory.&lt;/span&gt;
&lt;span class="x"&gt;could not match ^DEB_PKG.*?([\w-]+) in file /var/cache/packaging-farm/VCS/sources/xivo-skaro/pf-xivo-backup/Makefile.pkg to extract package name&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=pf-xivo-backup PACKAGE= submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=provisioning PACKAGE=pf-xivo-provisioning submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=res_watchdog PACKAGE=pf-asterisk-res-watchdog submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=sysconfd PACKAGE=pf-xivo-sysconfd submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=utils PACKAGE=pf-xivo-utils submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=wanpipe PACKAGE=sangoma-wanpipe-source submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=web-interface PACKAGE=pf-xivo-web-interface submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=xivo-sounds PACKAGE=pf-xivo-sounds submit&lt;/span&gt;
&lt;span class="x"&gt;packaging-farm DIRECTORY=xivo_ha PACKAGE=pf-xivo-ha submit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>A gallifrey repository for 1.1.16</title><link href="http://blog.xivo.io/a-gallifrey-repository-for-1116.html" rel="alternate"></link><updated>2011-06-13T08:40:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-06-13:a-gallifrey-repository-for-1116.html</id><summary type="html">&lt;h4&gt;upgrading packaging-farm&lt;/h4&gt;
&lt;p&gt;After the upgrade of packaging-farm to version 1.2.42, the &lt;a href="http://gallifrey.dachary.org/packaging-farm/gallifrey/Makefile"&gt;gallifrey
Makefile&lt;/a&gt;
was updated to add a &lt;em&gt;update&lt;/em&gt; target that updates the git repositories
and schedules for build the packages that have been changed since the
last build.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;update:&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Submitted from the GIT repositories&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        for dir in chan_sccp asterisk dahdi-linux dahdi-tools asterisk-sounds-gsm-de-de asterisk-sounds-wav-en-us asterisk-sounds-wav-es-es asterisk-sounds-wav-fr-ca prompts-xivo prompts asternic-stats agid base-config ctiservers ctiwebclient extra fetchfw lib-python provisioning queues-logger sysconfd utils web-interface ; do packaging-farm DIRECTORY=&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="x"&gt; submit ; done&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; When symbolic links needs to be resolved before building the source package&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        for dir in app_nv_faxdetect app_fax ami_aoriginate module_xivo res_config_sqlite ; do RSYNC_OPTIONS=--copy-unsafe-links packaging-farm DIRECTORY=&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="x"&gt; submit ; done&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Retrieved from dak.proformatique.com because they are not in the GIT repositories&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; deb-src http://dak.proformatique.com/debian/ lenny-xivo-gallifrey-dev main&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; virtual packages : pf-xivo pf-xivo-backup&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="cp"&gt;#&lt;/span&gt;&lt;span class="nf"&gt;cd&lt;/span&gt;&lt;span class="x"&gt; /var/cache/packaging-farm/sources ; for package in asterisk-chan-capi libasterisk-perl libpri misdn-kernel misdn-user sangoma-wanpipe spandsp pf-xivo pf-xivo-backup  ; do ( rm -fr &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; mkdir &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; cd &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; apt-get source &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ) ; done ; packaging-farm generate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Updating the repository can be done with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm --cd gallifrey PACKAGE= update ; packaging-farm gallifrey
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;building gallifrey 1.1.16&lt;/h4&gt;
&lt;p&gt;It failed to build &lt;em&gt;asterisk-chan-sccp&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm --cd gallifrey PACKAGE= update ; packaging-farm gallifrey
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;after building successfully the following&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;1115&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;
   &lt;span class="mi"&gt;3867&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cti&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;
   &lt;span class="mi"&gt;6655&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;
   &lt;span class="mi"&gt;9311&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;packaging&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The log of the error is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Applying patch fix_hidden_callplane_on_transfer
patching file src/sccp_channel.c
Hunk #1 FAILED at 1556.
1 out of 1 hunk FAILED -- rejects in file src/sccp_channel.c
patching file src/sccp_indicate.c
Hunk #1 FAILED at 146.
1 out of 1 hunk FAILED -- rejects in file src/sccp_indicate.c
Patch fix_hidden_callplane_on_transfer does not apply (enforce with -f)
make[3]: *** [debian/stamp-patched] Error 1
make[3]: Leaving directory `/usr/src/asterisk-chan-sccp-0~prerelease+svn2187+pf.xivo.1.1.16~20110\
608.195041.34405d1&amp;#39;
dpkg-buildpackage: failure: debian/rules build gave error exit status 2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and a bug report was filled by Nicolas Hicher so that the developers are
aware of the issue.As an interim solution, he removed the faulty patch
from the git repository and the submission was run again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm --cd gallifrey PACKAGE= update ; packaging-farm gallifrey
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and resumed where it left. The ntp package was installed to ensure the
date on the VM is correct. It was 13 minutes ahead in the future and it
created some confusion when synchronizing with the external repositories
was required and did not produce the intended effects.Since each package
name contains the XiVO version, if it changes ( in
&lt;em&gt;/var/cache/packaging-farm/VCS/sources/xivo-gallifrey/VERSION&lt;/em&gt; ) all
packages must be rebuilt, regardless of the fact that their content
changed. The &lt;a href="http://hg.packaging-farm.dachary.org/rev/97cac490cb5d"&gt;packaging-farm
2.0.0&lt;/a&gt; version
contains a patch that implements this behavior.&lt;/p&gt;
&lt;h4&gt;packaging-farm 2.0.0&lt;/h4&gt;
&lt;p&gt;This version marks the completion of the groundwork that was necessary
to ensure that the software provides the minimal set of functionalities
required to build the XiVO repositories. All the files were reviewed as
well as the packaging instructions.&lt;/p&gt;
&lt;p&gt;The HTML / PHP reporting was removed and packaging-farm is now command
line oriented only and has no web interface. A web interface could be
added in the form of a webservice supported by a javascript based
client. But it would not be an evolution of the interface that was
removed.&lt;/p&gt;
&lt;p&gt;The license was upgraded from GPLv2+ (i.e. GPLv2 that can be upgraded to
any later version at the user option) to AGPLv3+ (web service oriented
license that ensure the propagation of the modifications when the
service is deployed).&lt;/p&gt;
&lt;p&gt;The package was converted to
&lt;a href="http://en.wikipedia.org/wiki/Debhelper#Overview"&gt;dh7&lt;/a&gt; and
&lt;a href="http://wiki.debian.org/Projects/DebSrc3.0"&gt;DebSrc3.0&lt;/a&gt;. All lintian
warnings were fixed. An &lt;a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=630358"&gt;Intent To
Package&lt;/a&gt; was
sent to schedule the inclusion in Debian GNU/Linux.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Caluire Town Hall Installation</title><link href="http://blog.xivo.io/caluire-town-hall-installation.html" rel="alternate"></link><updated>2011-06-07T12:39:00-04:00</updated><author><name>jylebleu</name></author><id>tag:blog.xivo.io,2011-06-07:caluire-town-hall-installation.html</id><summary type="html">&lt;p&gt;&lt;img alt="installcaluire" src="/public/.IMAG0870_m.jpg" title="installcaluire, juin 2011" /&gt;&lt;/p&gt;
&lt;p&gt;I had the chance to participate to
&lt;a href="http://www.ville-caluire.fr/"&gt;Caluire&lt;/a&gt; town hall installation a couple
of weeks ago, where we deployed almost 150 phone sets in the building.&lt;/p&gt;
&lt;p&gt;Two corporate &lt;a href="https://wiki.xivo.fr/index.php/Accueil"&gt;XIVO&lt;/a&gt; servers
were inserted between the legacy PBX (Matra) and the PSTN network, we
spent a lot of time to try to figure out how many channels were
available as nobody did know it and the information was lost ! ;). Once
the proper dahdi configuration was found everything started to work well
and we began to replace little by little all the phone sets.&lt;/p&gt;
&lt;p&gt;Highlights :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150 phone sets&lt;/li&gt;
&lt;li&gt;DECT&lt;/li&gt;
&lt;li&gt;Mobile gateways to optimize mobile calls cost&lt;/li&gt;
&lt;li&gt;Polycom sound stations for audio conferences&lt;/li&gt;
&lt;li&gt;Fax gateway, mono and multi ports&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As new phone sets were setup beside the old phone sets and old numbers
were forwarded to the new installed ones, users were able to gradually
become used to the new way of calling.&lt;/p&gt;
&lt;p&gt;Thanks to Fred for this funny photo from the “installation war room”&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>An alternate XiVO skaro repository</title><link href="http://blog.xivo.io/an-alternate-xivo-skaro-repository.html" rel="alternate"></link><updated>2011-06-06T11:13:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-06-06:an-alternate-xivo-skaro-repository.html</id><summary type="html">&lt;h4&gt;composing skaro&lt;/h4&gt;
&lt;p&gt;The gallifrey repository is made of packages built from the GIT
repositories, some extracted from the official repository because they
are not under GIT and others built for the occasion (kernel-modules and
meta-packages). The source of each package is documented in
&lt;strong&gt;/var/cache/packaging-farm/build/skaro/Makefile&lt;/strong&gt; which is the
meta-package that depends on all the others:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;PACKAGE=skaro&lt;/span&gt;
&lt;span class="x"&gt;DISTRIBUTIONS=squeeze&lt;/span&gt;
&lt;span class="x"&gt;COMPONENT=main&lt;/span&gt;
&lt;span class="x"&gt;ARCHITECTURES=i386 x86_64&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; bntools  asterisk-chan-sccp                                                                                                                                                   &lt;/span&gt;
&lt;span class="x"&gt;CHILD_PACKAGES = asterisk dahdi-linux dahdi-linux-modules dahdi-tools freeswitch libpri pf-xivo-base-config pf-xivo-confgen pf-xivo-cti-server pf-xivo-extra pf-xivo-fetchfw pf-xivo-lib-js pf-xivo-lib-python pf-xivo-monitoring pf-xivo-provisioning pf-xivo-sounds pf-xivo-sysconfd pf-xivo-utils pf-xivo-web-interface pf-asterisk-res-watchdog pf-xivo pf-xivo-backup&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;                                                                                                                                                                               &lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Waiting to be completed:                                                                                                                                                      &lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; bntools chan_sccp                                                                                                                                                             &lt;/span&gt;
&lt;span class="x"&gt;submit:&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;                                                                                                                                                                       &lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Submitted from the GIT repositories                                                                                                                                   &lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;                                                                                                                                                                       &lt;/span&gt;
&lt;span class="x"&gt;        for dir in agid asterisk base-config confgen ctiservers dahdi-linux dahdi-tools extra fetchfw freeswitch lib-javascript lib-python monitoring provisioning sysconfd uti\&lt;/span&gt;
&lt;span class="x"&gt;ls wanpipe web-interface xivo_ha xivo-sounds ; do packaging-farm DIRECTORY=&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="x"&gt; submit ; done&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;                                                                                                                                                                       &lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; When symbolic links needs to be resolved before building the source package                                                                                           &lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;                                                                                                                                                                       &lt;/span&gt;
&lt;span class="x"&gt;        for dir in res_watchdog ; do RSYNC_OPTIONS=--copy-unsafe-links packaging-farm DIRECTORY=&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="x"&gt; submit ; done&lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;                                                                                                                                                                       &lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;                                                                                                                                                                       &lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Retrieved from dak.proformatique.com because they are not in the GIT repositories                                                                                     &lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; deb-src http://dak.proformatique.com/debian/ squeeze-xivo-skaro-dev main                                                                                              &lt;/span&gt;
&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; virtual packages : pf-xivo pf-xivo-backup                                                                                                                             &lt;/span&gt;
&lt;span class="x"&gt;        for package in libpri pf-xivo pf-xivo-backup  ; do ( rm -fr &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; mkdir &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; cd &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; apt-get source &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ) ; done&lt;/span&gt;

&lt;span class="x"&gt;ROLE = meta-package&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The hand made packages (i.e. Makefiles) can be retrieved from their
respective repositories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://skaro.dachary.org/packaging-farm/skaro/Makefile&lt;/li&gt;
&lt;li&gt;http://skaro.dachary.org/packaging-farm/dahdi-linux-modules/Makefile&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The packages are built for two architectures : i386 and x86_64&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ARCHITECTURES=i386 x86_64
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Mirroring the http://skaro.dachary.org/packaging-farm/ directory is
enough to get all the information required to re-install a
packaging-farm from scratch.It can be used by adding the following to
/etc/apt/sources.list&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://skaro.dachary.org/packaging-farm/skaro/gnulinux/debian&lt;/span&gt; &lt;span class="kp"&gt;skaro-squeeze&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;troubleshooting&lt;/h4&gt;
&lt;p&gt;The pf-xivo-extra produced an error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cp&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cannot&lt;/span&gt; &lt;span class="n"&gt;stat&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;debian&lt;/span&gt;&lt;span class="sr"&gt;/tmp/&lt;/span&gt;&lt;span class="n"&gt;README&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
&lt;span class="n"&gt;dh_install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;debian&lt;/span&gt;&lt;span class="sr"&gt;/tmp/README debian/pf-xivo-extra/usr/share/pf-xivo-extra//&lt;/span&gt; &lt;span class="n"&gt;returned&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nicolas Hicher logged in the machine and went to debug into the chroot
used to create the package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm --cd pf-xivo-extra DISTRIBUTION=squeeze ARCHITECTURE=x86_64 chroot-login
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It turns out that the package is not properly built from git. The
submit-xivo.sh corrupted the source distribution when called twice on
the same package. The problem was fixed in the new
&lt;a href="http://packaging-farm.dachary.org/download/"&gt;1.2.42&lt;/a&gt; packaging-farm
release.The i386 squeeze chroot had a flaw that forced the installation
of x11 when installing the devscripts package. The chroot was re-created
using the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pbuilder --create --architecture i386 --distribution squeeze --basetgz /var/cache/pbuilder/squeeze-i386.tgz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The only package that could not be rebuilt was pf-asterisk-res-watchdog
and a bug was reported regarding its &lt;a href="https://projects.xivo.fr/issues/2302"&gt;missing build depend to
python&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;managing timestamps when submitting a package&lt;/h4&gt;
&lt;p&gt;The oneliner that could be used to rebuild XiVO with all the updates
from the git repositories is :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /var/cache/packaging-farm/build/skaro ; make submit ; packaging-farm skaro
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It involves calling submit-xivo.sh for all known packages and therefore
trigger a recompilation of each package, even those that were not
changed since the last compilation. That can be avoided by selecting the
relevant packages, using a method similar to the &lt;a href="http://blog.xivo.fr/index.php?post/2011/05/30/Using-and-Updating-a-XiVO-gallifrey-repository"&gt;one described in a
previous
post&lt;/a&gt;.
To avoid a manual selection, the submit-xivo.sh was modified to do
nothing if it notices that the git repositories do not contain any
commit more recent than the timestamp updated when the last compilation
completed successfully.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function need_update() {
    local package=&amp;quot;$1&amp;quot;
    local dir=&amp;quot;$2&amp;quot;
    local suite=&amp;quot;$3&amp;quot;
    local xivo=&amp;quot;$4&amp;quot;

    if [ ! -f &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;DEPENDS_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; ] ; then
        return 0
    else
        modified=$(stat --terse --printf=%Y &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;DEPENDS_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;)
        (
            cd &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;VCS_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/sources/xivo-&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
            git log -1 --after=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;modified&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; .
            cd &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;VCS_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/debian/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;suite&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;-xivo-&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
            git log -1 --after=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;modified&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; .
        ) &amp;gt; /tmp/submit$$
        [ -s /tmp/submit$$ ]
        result=$?
        rm /tmp/submit$$
        return &lt;span class="nv"&gt;$result&lt;/span&gt;
    fi
}
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Using and Updating a XiVO gallifrey repository</title><link href="http://blog.xivo.io/using-and-updating-a-xivo-gallifrey-repository.html" rel="alternate"></link><updated>2011-05-30T12:57:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-05-30:using-and-updating-a-xivo-gallifrey-repository.html</id><summary type="html">&lt;h4&gt;Updating the repository&lt;/h4&gt;
&lt;p&gt;To figure out what needs updating, a query is made on the git
repositories.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /var/cache/packaging-farm/VCS/sources/xivo-gallifrey
git fetch
git log --stat=2000,2000 ..origin/master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;em&gt;--stat&lt;/em&gt; option shows which files are modified and the numbers after
it ensure that they are not truncated. The first component of the file
name designate the directory of interest. For instance&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chan_sccp/patches/fix_forward_on_bad_numbers       |   13 ++
 chan_sccp/patches/fix_useless_channel_unlocks      |  155 ++++++++++++++++++++
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;says that we need to re-submit as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm DIRECTORY=chan_sccp submit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The same should be done for the git repository of the debian packages&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /var/cache/packaging-farm/VCS/debian/lenny-xivo-gallifrey
git fetch
git log --stat=2000,2000 ..origin/master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There was a need to re-submit the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;for dir in web-interface chan_sccp ctiservers&lt;/span&gt;
&lt;span class="x"&gt;do &lt;/span&gt;
&lt;span class="x"&gt;  packaging-farm DIRECTORY=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="x"&gt; submit&lt;/span&gt;
&lt;span class="x"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the repository was updated with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm gallifrey
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;after checking what would be done with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm -n gallifrey
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;em&gt;-n&lt;/em&gt; flag semantic can be found in the GNU make documentation. The
&lt;em&gt;packaging-farm&lt;/em&gt; command wraps the &lt;em&gt;make&lt;/em&gt; command.&lt;/p&gt;
&lt;h4&gt;Packaging farm release&lt;/h4&gt;
&lt;p&gt;The &lt;a href="http://packaging-farm.dachary.org/download"&gt;1.2.41&lt;/a&gt; version of
packaging-farmcontains documentation improvements ( packaging-farm and
packaging-farm.conf manual pages ) about troubleshooting a process that
prevents a directory to umount and using RSYNC options to control what
is being copied when building the package (for instance to ensure that
the symbolic link target is copied instead of the symbolic link).The
dependency graph failed to build the required packages: although it was
accurate, in some cases it missed the corresponding action. As a
consequence the child of the graph were updated but not the topmost
parents.&lt;/p&gt;
&lt;h4&gt;Using XiVO with OVH&lt;/h4&gt;
&lt;p&gt;A &lt;a href="https://gallifrey-test1.dachary.org/"&gt;virtual machine was setup&lt;/a&gt;
using the &lt;a href="http://gallifrey.dachary.org/packaging-farm/gallifrey"&gt;gallifrey
repository&lt;/a&gt; and
the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get install pf-xivo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The host firewall was configured to send the &lt;em&gt;5060&lt;/em&gt; port to the virtual
machine and forward the https port to the nginx proxy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- a/shorewall/params&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/shorewall/params&lt;/span&gt;
&lt;span class="gu"&gt;@@ -28,4 +28,5 @@ IP_FAILOVER=66.254.41.119&lt;/span&gt;
 VM_DEV_DACHARY=10.10.60.1
 VM_SKARO_XIVO=10.10.60.2
 VM_GALLIFREY_XIVO=10.10.60.3
&lt;span class="gi"&gt;+VM_GALLIFREY_TEST1=10.10.60.4&lt;/span&gt;
 #LAST LINE -- DO NOT REMOVE
&lt;span class="gh"&gt;diff --git a/shorewall/rules b/shorewall/rules&lt;/span&gt;
&lt;span class="gh"&gt;index 3a7ea65..66161c0 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/shorewall/rules&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/shorewall/rules&lt;/span&gt;
&lt;span class="gu"&gt;@@ -39,11 +39,15 @@ ACCEPT              $FW             net             icmp&lt;/span&gt;

 SSH(ACCEPT)    net             $FW
 HTTP(ACCEPT)   net             $FW
&lt;span class="gi"&gt;+HTTPS(ACCEPT)  net             $FW&lt;/span&gt;
 # VNC ganeti
 ACCEPT         net             $FW             tcp     11000:11010
 # VNC libvirt
 ACCEPT         net             $FW             tcp     5900:5910

&lt;span class="gi"&gt;+DNAT           net             loc:$VM_GALLIFREY_TEST1 tcp            5060           -       $IP_FAILOVER&lt;/span&gt;
&lt;span class="gi"&gt;+DNAT           net             loc:$VM_GALLIFREY_TEST1 udp            5060           -       $IP_FAILOVER&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
 # SSH remap
 DNAT           net             loc:$VM_DEV_DACHARY:22 tcp            22001           -       $IP_FAILOVER
 DNAT           net             loc:$VM_SKARO_XIVO:22 tcp             22002           -       $IP_FAILOVER
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The nginx proxy was configured to reverse proxy https:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;diff --git a/nginx/sites-available/gallifrey-test2.dachary.org b/nginx/sites-available/gallifrey-test2.dachary.org&lt;/span&gt;
new file mode 100644
&lt;span class="gh"&gt;index 0000000..2525ff9&lt;/span&gt;
&lt;span class="gd"&gt;--- /dev/null&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/nginx/sites-available/gallifrey-test2.dachary.org&lt;/span&gt;
&lt;span class="gu"&gt;@@ -0,0 +1,13 @@&lt;/span&gt;
&lt;span class="gi"&gt;+server {&lt;/span&gt;
&lt;span class="gi"&gt;+ ssl on;&lt;/span&gt;
&lt;span class="gi"&gt;+ listen 443;&lt;/span&gt;
&lt;span class="gi"&gt;+ server_name gallifrey-test2.dachary.org;&lt;/span&gt;
&lt;span class="gi"&gt;+ access_log  /var/log/nginx/gallifrey.dachary.org.access.log;&lt;/span&gt;
&lt;span class="gi"&gt;+ ssl_certificate /etc/nginx/server.crt;&lt;/span&gt;
&lt;span class="gi"&gt;+ ssl_certificate_key /etc/nginx/server.key;&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+ location / {&lt;/span&gt;
&lt;span class="gi"&gt;+  proxy_pass https://10.10.70.71:443;&lt;/span&gt;
&lt;span class="gi"&gt;+#  proxy_set_header Host $host;&lt;/span&gt;
&lt;span class="gi"&gt;+ }&lt;/span&gt;
&lt;span class="gi"&gt;+}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the corresponding certificates created as instructed in the nginx
documentation.The &lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.1-Gallifrey/Trunk_SIP"&gt;IPPI
instructions&lt;/a&gt;
were followed to connect the XiVO just created with an &lt;a href="http://www.ovh.com/fr/telephonie/"&gt;OVH phone
number&lt;/a&gt;. All of the instructiosn
listed for IPPI apply to OVH because they use the same system (Cirpack).
The values for DTMF were left unchanged and NAT set to &lt;em&gt;Yes&lt;/em&gt;.Debugging
was made convenient with the asterisk console&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ asterisk -rvvvvv
gallifrey-test1*CLI&amp;gt; sip show registry
Host                            Username       Refresh State                Reg.Time                 
sip.ovh.net:5060                &lt;span class="m"&gt;003384452800&lt;/span&gt;       &lt;span class="m"&gt;105&lt;/span&gt; Registered           Mon, &lt;span class="m"&gt;23&lt;/span&gt; May &lt;span class="m"&gt;2011&lt;/span&gt; 11:38:12
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the actual SIP requests could be viewed with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gallifrey-test1*CLI&amp;gt; set debug peer trunk_ovh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which was most convenient to submit the problems to
irc.freenode.net#xivo and irc.freenode.net#asterisk.&lt;/p&gt;
&lt;h4&gt;Independent install of XiVO&lt;/h4&gt;
&lt;p&gt;Nicolas Hicher installed XiVO using&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://gallifrey.dachary.org/packaging-farm/gallifrey/gnulinux/debian&lt;/span&gt; &lt;span class="kp"&gt;gallifrey-lenny&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get install dahdi-linux-modules-2.6.26-2-486
apt-get install pf-xivo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(the actual package was adapted to the running kernel) and reported
success&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(11:53:20 AM) atarakt: Installation successful !!!
(11:53:24 AM) atarakt: excellent =)
(11:54:28 AM) atarakt: j&amp;#39;ai un xivo qui tourne
(11:57:37 AM) dachary: oO
(11:57:50 AM) ***dachary débouche le champagne
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Coming back from Solutions Linux 2011</title><link href="http://blog.xivo.io/coming-back-from-solutions-linux-2011.html" rel="alternate"></link><updated>2011-05-19T16:07:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-05-19:coming-back-from-solutions-linux-2011.html</id><summary type="html">&lt;p&gt;We had to opportunity to demonstrate our prototype of the XiVO IPBX
OpenHardware with 3 different phones connected to the appliance
(original orange french Socotel S63 analog phone, Siemens Gigaset SX353
ISDN phone and Aastra 6731i SIP phone) and available through our
softwitch interface.The mini-conference was also the opportunity to
exchange with different hardware engineers in the telecommunications
field about OpenHardware designs and PCB fabs in Europe. We hope this
will help the telco OpenHardware community to grow in the coming months.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Testing a XiVO gallifrey repository (2/2)</title><link href="http://blog.xivo.io/testing-a-xivo-gallifrey-repository-22.html" rel="alternate"></link><updated>2011-05-16T13:27:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-05-16:testing-a-xivo-gallifrey-repository-22.html</id><summary type="html">&lt;h4&gt;SVN keyword substitution bug fix&lt;/h4&gt;
&lt;p&gt;In some of the installed software (ctiservers) the SVN keywords are used
to extract the software version number:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;__version__ = &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;Revision&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, since the binaries have been built from a git repository with a
different naming scheme, thisno longer works. Corentin Le Gall fixed the
problem immediately in the internal SVN repository&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;------------------------------------------------------------------------
r10824 | kaou | 2011-05-16 11:08:49 +0200 (Mon, 16 May 2011) | 1 line
[bugfix] remove svn-dependent stuff because of git migration
------------------------------------------------------------------------
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;a href="http://git.xivo.fr/xivo-gallifrey.git/"&gt;git repository&lt;/a&gt; was
supposed to be updated by a cron job, but it crashed May 9th and was
restarted May 16th by Romain Bignon:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="n"&gt;a9f7ebff1a4db73184809a1696eb3b03b82b00f5&lt;/span&gt;
&lt;span class="nl"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Corentin&lt;/span&gt; &lt;span class="n"&gt;Le&lt;/span&gt; &lt;span class="n"&gt;Gall&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;clegall&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;proformatique&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nl"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;Mon&lt;/span&gt; &lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt; &lt;span class="mi"&gt;2011&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mo"&gt;0000&lt;/span&gt;

    &lt;span class="n"&gt;remove&lt;/span&gt; &lt;span class="n"&gt;svn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dependent&lt;/span&gt; &lt;span class="n"&gt;stuff&lt;/span&gt; &lt;span class="n"&gt;because&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;migration&lt;/span&gt;

    &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;svn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//rcs.lan.proformatique.com/svn/xivo/branches/official/1.1-gallifrey@10825 dc85baef-7018-0410-bfbd-8a639da648bb&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After the git pull, the logs showed that some packages were modified.
They were submitted to the farm:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm DIRECTORY=ctiservers submit
packaging-farm DIRECTORY=asterisk submit
packaging-farm DIRECTORY=agid submit
packaging-farm DIRECTORY=lib-python submit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and a rebuild of gallifrey was requested.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm gallifrey
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;collecting symbolic links&lt;/h4&gt;
&lt;p&gt;A few packages contain symbolic links that point outside of their
directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gwr.py -&amp;gt; ../tools/gwr.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When building the source package by assembling the debian directory and
the sourcedirectory, the actual file must be put in the archive instead
of the symbolic link.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;for dir in app_nv_faxdetect app_fax ami_aoriginate module_xivo res_config_sqlite ; &lt;/span&gt;
&lt;span class="x"&gt;  do RSYNC_OPTIONS=--copy-unsafe-links packaging-farm DIRECTORY=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="x"&gt; submit ;&lt;/span&gt;
&lt;span class="x"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The RSYNC_OPTIONS variable already existed in the &lt;em&gt;submit-xivo.sh&lt;/em&gt;
script but was not documented. A chapterwas added to the manual page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;RSYNC_OPTIONS=&lt;/span&gt;
&lt;span class="x"&gt;              Before  the debian directory is assembled with the source direc-&lt;/span&gt;
&lt;span class="x"&gt;              tory, a  copy  is  made  using  rsync(1).  The  content  of  the&lt;/span&gt;
&lt;span class="x"&gt;              RSYNC_OPTIONS  variable  is  given in argument to the rsync com-&lt;/span&gt;
&lt;span class="x"&gt;              mand. For instance it may be used to collect the actual  content&lt;/span&gt;
&lt;span class="x"&gt;              of symbolic links pointing outside of the source directory.&lt;/span&gt;
&lt;span class="x"&gt;              for dir in app_nv_faxdetect app_fax ami_aoriginate module_xivo res_config_sqlite ;&lt;/span&gt;
&lt;span class="x"&gt;                do RSYNC_OPTIONS=--copy-unsafe-links packaging-farm DIRECTORY=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="x"&gt; submit ;&lt;/span&gt;
&lt;span class="x"&gt;              done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Before installing &lt;em&gt;pf-xivo&lt;/em&gt; it was necessary to install the
&lt;em&gt;dahdi-linux&lt;/em&gt; kernel module.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get install dahdi-linux-modules-2.6.26-2-686 
apt-get install pf-xivo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It was then possible to connect to the XiVO web interface:&lt;img alt="alternate
XiVO" src="/public/.Screenshot-5_m.jpg" title="alternate XiVO, May 2011" /&gt;&lt;/p&gt;
&lt;h4&gt;gallifrey reference&lt;/h4&gt;
&lt;p&gt;ganeti instanceA new host is declared in the local DNS&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;root@host01:/etc/bind&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; git diff .&lt;/span&gt;
&lt;span class="x"&gt;diff --git a/bind/db.10.10 b/bind/db.10.10&lt;/span&gt;
&lt;span class="x"&gt;index 684d569..ea30300 100644&lt;/span&gt;
&lt;span class="x"&gt;--- a/bind/db.10.10&lt;/span&gt;
&lt;span class="x"&gt;+++ b/bind/db.10.10&lt;/span&gt;
&lt;span class="x"&gt;@@ -4,7 +4,7 @@&lt;/span&gt;
&lt;span class="x"&gt; ;&lt;/span&gt;
&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;TTL&lt;/span&gt;&lt;span class="x"&gt;    604800&lt;/span&gt;
&lt;span class="x"&gt; @       IN      SOA     localhost. root.localhost. (&lt;/span&gt;
&lt;span class="x"&gt;-        2011041800      ; serial&lt;/span&gt;
&lt;span class="x"&gt;+        2011051601      ; serial&lt;/span&gt;
&lt;span class="x"&gt;                          604800         ; Refresh&lt;/span&gt;
&lt;span class="x"&gt;                           86400         ; Retry&lt;/span&gt;
&lt;span class="x"&gt;                         2419200         ; Expire&lt;/span&gt;
&lt;span class="x"&gt;@@ -14,6 +14,9 @@ &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;TTL&lt;/span&gt;&lt;span class="x"&gt;    604800&lt;/span&gt;
&lt;span class="x"&gt; ;;&lt;/span&gt;
&lt;span class="x"&gt; ;; perl -n -e &amp;#39;print if(s/(\S+)\s+IN\s+A\s+10\.10\.(\d+)\.(\d+)/\3.\2\tIN\tPTR\t\1.farm./)&amp;#39; &amp;lt; db.farm&lt;/span&gt;
&lt;span class="x"&gt; ;;&lt;/span&gt;
&lt;span class="x"&gt; 1.60   IN      PTR     dev.dachary.vm.farm.&lt;/span&gt;
&lt;span class="x"&gt; 2.60   IN      PTR     skaro.xivo.vm.farm.&lt;/span&gt;
&lt;span class="x"&gt; 3.60   IN      PTR     gallifrey.xivo.vm.farm.&lt;/span&gt;
&lt;span class="x"&gt;+4.60   IN      PTR     gallifrey-test1.xivo.vm.farm.&lt;/span&gt;
&lt;span class="x"&gt;diff --git a/bind/db.farm b/bind/db.farm&lt;/span&gt;
&lt;span class="x"&gt;index 60da05a..2e4c669 100644&lt;/span&gt;
&lt;span class="x"&gt;--- a/bind/db.farm&lt;/span&gt;
&lt;span class="x"&gt;+++ b/bind/db.farm&lt;/span&gt;
&lt;span class="x"&gt;@@ -4,7 +4,7 @@ &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;TTL&lt;/span&gt;&lt;span class="x"&gt; 1h ; default Time-to-Live. defines the duration that the record may be cach&lt;/span&gt;

&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ORIGIN&lt;/span&gt;&lt;span class="x"&gt; farm.&lt;/span&gt;
&lt;span class="x"&gt; @                       IN      SOA             ns hostmaster (&lt;/span&gt;
&lt;span class="x"&gt;-                        2011041800      ; serial&lt;/span&gt;
&lt;span class="x"&gt;+                        2011051601      ; serial&lt;/span&gt;
&lt;span class="x"&gt;                                 1h              ; refresh - time when the slave will try to refresh the zone from the mast&lt;/span&gt;
&lt;span class="x"&gt;                                 30m             ; update retry - time between retries if the slave (secondary) (2h)&lt;/span&gt;
&lt;span class="x"&gt;                                                 ; fails to contact the master when refresh (above) has expired.&lt;/span&gt;
&lt;span class="x"&gt;@@ -22,3 +22,4 @@ host01                IN      A       10.10.59.10&lt;/span&gt;
&lt;span class="x"&gt; dev.dachary.vm         IN      A       10.10.60.1&lt;/span&gt;
&lt;span class="x"&gt; skaro.xivo.vm          IN      A       10.10.60.2&lt;/span&gt;
&lt;span class="x"&gt; gallifrey.xivo.vm      IN      A       10.10.60.3&lt;/span&gt;
&lt;span class="x"&gt;+gallifrey-test1.xivo.vm        IN      A       10.10.60.4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;An entry is allocated in the DHCP server, configured with a server to be
used for network boot.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;diff --git a/bind/db.farm b/bind/db.farm&lt;/span&gt;
&lt;span class="gh"&gt;index 60da05a..2e4c669 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/bind/db.farm&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/bind/db.farm&lt;/span&gt;
&lt;span class="gu"&gt;@@ -4,7 +4,7 @@ $TTL 1h ; default Time-to-Live. defines the duration that the record may be cach&lt;/span&gt;

 $ORIGIN farm.
 @                       IN      SOA             ns hostmaster (
&lt;span class="gd"&gt;-                        2011041800      ; serial&lt;/span&gt;
&lt;span class="gi"&gt;+                        2011051601      ; serial&lt;/span&gt;
                                 1h              ; refresh - time when the slave will try to refresh the zone from the mast
                                 30m             ; update retry - time between retries if the slave (secondary) (2h)
                                                 ; fails to contact the master when refresh (above) has expired.
&lt;span class="gu"&gt;@@ -22,3 +22,4 @@ host01                IN      A       10.10.59.10&lt;/span&gt;
 dev.dachary.vm         IN      A       10.10.60.1
 skaro.xivo.vm          IN      A       10.10.60.2
 gallifrey.xivo.vm      IN      A       10.10.60.3
&lt;span class="gi"&gt;+gallifrey-test1.xivo.vm        IN      A       10.10.60.4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A ganeti based virtual machine is created with a VNC port enabled:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gnt-instance add -d -t plain -s 5G -B memory=512M,vcpus=1 \
   -H kvm:boot_order=network,vnc_bind_address=0.0.0.0 -n host01.farm \
   -o debootstrap+default --net 0:mac=52:54:24:1e:63:28 \
   gallifrey-test1.xivo.vm.farm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At boot time the menu options &lt;em&gt;Production&lt;/em&gt; and &lt;em&gt;Gallifrey&lt;/em&gt; are
selected.The firewall was reconfigured to accept HTTPS connections
because it is the default when connecting to thevirtual machine with a
browser (it gets redirected when trying with HTTP):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;diff --git a/shorewall/rules b/shorewall/rules&lt;/span&gt;
&lt;span class="gh"&gt;index 3a7ea65..da38d67 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/shorewall/rules&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/shorewall/rules&lt;/span&gt;
&lt;span class="gu"&gt;@@ -39,6 +39,7 @@ ACCEPT                $FW             net             icmp&lt;/span&gt;

 SSH(ACCEPT)    net             $FW
 HTTP(ACCEPT)   net             $FW
&lt;span class="gi"&gt;+HTTPS(ACCEPT)  net             $FW&lt;/span&gt;
 # VNC ganeti
 ACCEPT         net             $FW             tcp     11000:11010
 # VNC libvirt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The nginx reverse proxy was configured to proxy SSL requests, after
generating a certificateaccording to &lt;a href="http://wiki.nginx.org/HttpSslModule"&gt;the SSL
module&lt;/a&gt; instructions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;ssl&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;443&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;gallifrey&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dachary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;access_log&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gallifrey&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dachary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;ssl_certificate&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;ssl_certificate_key&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;gallifrey&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;443&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;  &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;Host&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the &lt;a href="https://gallifrey-test1.dachary.org/"&gt;XiVO web interface&lt;/a&gt; could
be displayed.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Glimpse of CTI architecture in XiVO 1.1 and 1.2</title><link href="http://blog.xivo.io/glimpse-of-cti-architecture-in-xivo-11-and-12.html" rel="alternate"></link><updated>2011-05-13T11:41:00-04:00</updated><author><name>corentin</name></author><id>tag:blog.xivo.io,2011-05-13:glimpse-of-cti-architecture-in-xivo-11-and-12.html</id><summary type="html">&lt;p&gt;As a reminder, this is what the CTI world looks like in XiVO 1.1 :&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/external_cti_architecture_xivo_1.1.png" title="cti1.1"&gt;&lt;img alt="cti1.1" src="/public/.external_cti_architecture_xivo_1.1_m.jpg" title="cti1.1, mai 2011" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The XiVO 1.2 part will be more like :&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/external_cti_architecture_xivo_1.2.png" title="cti1.2"&gt;&lt;img alt="cti1.2" src="/public/.external_cti_architecture_xivo_1.2_m.jpg" title="cti1.2, mai 2011" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;namely :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the queue-logger daemon does not exist any more, and the CTI server
    fills the queue-logger database itself&lt;/li&gt;
&lt;li&gt;the services/features of user lines will be accessed through regular
    XiVO web services instead of direct SQL access&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is of course only a very global view.&lt;/p&gt;
&lt;p&gt;At the underneath level,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the AMI commands have changed, since the asterisk version will be
    1.8 (instead of 1.4)&lt;/li&gt;
&lt;li&gt;the CTI protocol between the server and its clients has evolved,
    especially in order to be able to get smaller payload packet sizes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details should come in a future blog entry.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Testing a XiVO gallifrey repository (1/2)</title><link href="http://blog.xivo.io/testing-a-xivo-gallifrey-repository-12.html" rel="alternate"></link><updated>2011-05-09T08:57:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-05-09:testing-a-xivo-gallifrey-repository-12.html</id><summary type="html">&lt;h4&gt;Methodology&lt;/h4&gt;
&lt;p&gt;Assuming a host running &lt;a href="http://www.debian.org/releases/squeeze/"&gt;Debian GNU/Linux
Squeeze&lt;/a&gt;, the general idea is
to boot a virtual machine thatwill auto-install using
&lt;a href="http://www.debian.org/devel/debian-installer/"&gt;debian-installer&lt;/a&gt; so
that it uses &lt;a href="http://git.proformatique.com/?p=official/debian-installer.git;a=tree;f=squeeze/classes/skaro-farm;h=155b14e82c906b968d6d42a7b8e20faf0209d687;hb=692498d23dcd2daa173e2ed152010b6c22dd7fda"&gt;a specific
class&lt;/a&gt;
that will pull packages from &lt;a href="http://xivo.dachary.org/packaging-farm/gallifrey/gnulinux/debian/"&gt;the
gallifrey&lt;/a&gt;
repository &lt;a href="http://blog.xivo.fr/index.php?post/2011/04/27/An-alternate-XiVO-gallifrey-repository-%28part-2/2%29"&gt;created with
packaging-farm&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Virtual machine&lt;/h4&gt;
&lt;p&gt;The &lt;a href="http://libvirt.org/"&gt;libvirt&lt;/a&gt; virtual machine is given 512MB RAM,
8GB RAW disk image, 1CPU.The configuration of libvirt is made to accept
VNC connections from anywhere to gain access tothe console over the
network:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;diff --git a/libvirt/qemu.conf b/libvirt/qemu.conf&lt;/span&gt;
&lt;span class="gh"&gt;index dc8eb83..282e734 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/libvirt/qemu.conf&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/libvirt/qemu.conf&lt;/span&gt;
&lt;span class="gu"&gt;@@ -9,7 +9,7 @@&lt;/span&gt;
 # NB, strong recommendation to enable TLS + x509 certificate
 # verification when allowing public access
 #
&lt;span class="gd"&gt;-# vnc_listen = &amp;quot;0.0.0.0&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+vnc_listen = &amp;quot;0.0.0.0&amp;quot;&lt;/span&gt;


 # Enable use of TLS encryption on the VNC server. This requires
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;dhcpd and network boot&lt;/h4&gt;
&lt;p&gt;The dhcp server is instructed to allow for network boot in
&lt;em&gt;/etc/dhcp/dhcpd.conf&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;subnet 10.10.70.0 netmask 255.255.255.0 {
        range 10.10.70.70 10.10.70.100;
        filename &amp;quot;pxelinux&amp;quot;;
        next-server 10.10.70.254;
        option domain-name &amp;quot;farm&amp;quot;;
        option domain-name-servers 10.10.70.254;
        option subnet-mask 255.255.255.0;
        option broadcast-address 10.10.70.255;
        option routers 10.10.70.254;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The TFTP server is installed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get install tftpd-hpa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The kernel and pxelinux configuration files are &lt;a href="http://ftp.debian.org/debian/dists/lenny/main/installer-i386/current/images/netboot/debian-installer/i386"&gt;copied from a i386
lenny
directory&lt;/a&gt;
into &lt;em&gt;/var/lib/tftp/&lt;/em&gt;. Actually a more elaborated variation rsync'ed
from a machine on the avencall lan named kenny.avencall.com but this is
not strictly necessary for the test: fai-linux-lenny below is equivalent
to
&lt;a href="http://ftp.debian.org/debian/dists/lenny/main/installer-i386/current/images/netboot/debian-installer/i386/linux"&gt;linux&lt;/a&gt;
and fai-initrd-lenny is equivalent to
&lt;a href="http://ftp.debian.org/debian/dists/lenny/main/installer-i386/current/images/netboot/debian-installer/i386/initrd.gz"&gt;initrd&lt;/a&gt;.The
libvirt configuration of the virtual machineis instructed to boot from
the network:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;os&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;type&lt;/span&gt; &lt;span class="na"&gt;arch=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;i686&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;machine=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pc-0.12&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;hvm&lt;span class="nt"&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;boot&lt;/span&gt; &lt;span class="na"&gt;dev=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;network&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;boot&lt;/span&gt; &lt;span class="na"&gt;dev=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;cdrom&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;boot&lt;/span&gt; &lt;span class="na"&gt;dev=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;hd&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;bootmenu&lt;/span&gt; &lt;span class="na"&gt;enable=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When the virtual machine is started with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh start skaro.xivo.vm.test
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;it will show the following and be ready to boot from the
network.&lt;img alt="d-i" src="/public/.i_m.jpg" title="d-i, May 2011" /&gt;A new entry has been
added to the menu displayed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;label xivo_gallifrey_farm
        menu label gallifrey-farm
        kernel fai-linux-lenny
        append initrd=fai-initrd-lenny rw auto=true url=http://66.254.41.119 priority=critical locale=en_US.UTF-8 interface=auto netcfg/dhcp_timeout=60 classes=debug,xivo-gallifrey-farm hostname=xivo --
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;in the file &lt;em&gt;/var/lib/tftp/pxelinux.cfg/xivo_devel/xivo_devel.cfg&lt;/em&gt;
that has beenextracted with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /var/lib/tftp
git clone git://git.proformatique.com/official/debian-pxelinux.git pxelinux.cfg
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and contains all the menu for all the XiVO configurations.&lt;/p&gt;
&lt;h4&gt;Other packages&lt;/h4&gt;
&lt;p&gt;The &lt;a href="http://66.254.41.119/d-i/lenny/classes/xivo-gallifrey-farm/postinst_script"&gt;debian-installer
script&lt;/a&gt;
starts by installing &lt;a href="pf-fai-xivo-1.1-gallifrey-farm"&gt;a package&lt;/a&gt; whose
sole purpose is to add files in the /etc/apt/sources.list.d/ so that
packages are extracted from the . The sources of the package are in the
packages/branches/official/lenny/pf-fai/ directory of the internal
rcs.lan.proformatique.com/rcs/svn/common-softwares repository. They can
also be retrieved from the package sources at&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;http://dak.proformatique.com/debian&lt;/span&gt; &lt;span class="kp"&gt;lenny&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;with the command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get source pf-fai
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Installation&lt;/h4&gt;
&lt;p&gt;All the common files are in the &lt;a href="http://66.254.41.119/d-i/lenny/"&gt;lenny
directory&lt;/a&gt;, forinstance the
&lt;a href="http://66.254.41.119/d-i/lenny/preseed.cfg"&gt;preseed.cfg&lt;/a&gt; and
&lt;a href="http://66.254.41.119/d-i/lenny/installer.cfg"&gt;installer.cfg&lt;/a&gt; that sets
the passwords and other package values.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;d-i passwd/root-password-crypted password &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;1&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;NHxfkWun&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PMGLFNFtPKwIFT532sinD1&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That should be replaced with a known password, for instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;d-i passwd/root-password password foobar
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;otherwise it will be impossible to login.The installation asks for the
disk partition. If it fails,the error logs can be found at
&lt;em&gt;/var/log/pf-fai/postinst.log&lt;/em&gt;The key of the packaging-farm repository
is addedto
&lt;a href="http://66.254.41.119/d-i/lenny/classes/xivo-gallifrey-farm/late_script"&gt;late_script&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;if [ -x /usr/bin/apt-key ]; then
        apt-get -y install gnupg
        wget http://gallifrey.dachary.org/gallifrey.gpg -O - | apt-key add -
fi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It also removes any repository added by
&lt;a href="http://66.254.41.119/d-i/lenny/late_script_target"&gt;late_script_target&lt;/a&gt;
and replace them with the packaging-farm repository:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://gallifrey.dachary.org/packaging-farm/gallifrey/gnulinux/debian&lt;/span&gt; &lt;span class="kp"&gt;gallifrey-lenny&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If a script (such as late_script) fails, the error message can be found
after login on the machine in the &lt;em&gt;/var/log/installer/syslog&lt;/em&gt; file.&lt;/p&gt;
&lt;h4&gt;gallifrey distribution&lt;/h4&gt;
&lt;p&gt;The &lt;a href="http://gallifrey.dachary.org/packaging-farm/"&gt;gallifrey
distribution&lt;/a&gt; has been
updated to include the &lt;em&gt;misdn-user&lt;/em&gt; package that was missing from the
list although it was already created. The &lt;em&gt;pf-asterisk-module-xivo&lt;/em&gt;,
&lt;em&gt;pf-asterisk-res-sqlite2&lt;/em&gt;, &lt;em&gt;pf-asterisk-ami-aoriginate&lt;/em&gt;,
&lt;em&gt;asterisk-chan-sccp&lt;/em&gt;, &lt;em&gt;pf-asterisk-app-fax&lt;/em&gt;,
&lt;em&gt;pf-asterisk-app-nv-faxdetect&lt;/em&gt; packages were imported into the farm from
the &lt;a href="http://dak.proformatique.com/debian/dists/lenny-xivo-gallifrey-dev/"&gt;official
repository&lt;/a&gt;
and added to the list of packages necessary to install gallifrey.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>XiVO from 2007 until now with Gource</title><link href="http://blog.xivo.io/xivo-from-2007-until-now-with-gource.html" rel="alternate"></link><updated>2011-05-06T14:32:00-04:00</updated><author><name>gbour</name></author><id>tag:blog.xivo.io,2011-05-06:xivo-from-2007-until-now-with-gource.html</id><summary type="html">&lt;p&gt;&lt;em&gt;5 years of development, 24 contributors, 7824 commits, 195k lines of
code.&lt;/em&gt;&lt;br /&gt;
History of Xivo in 2'30 minutes, done with Gource.&lt;/p&gt;
&lt;iframe width="425" height="349" src="http://www.youtube.com/embed/g0jI9A53BoM" frameborder="0" allowfullscreen&gt;
&lt;/iframe&gt;

&lt;/p&gt;</summary><category term="gource"></category><category term="xivo"></category></entry><entry><title>XiVO packages versions</title><link href="http://blog.xivo.io/xivo-packages-versions.html" rel="alternate"></link><updated>2011-05-02T14:41:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-05-02:xivo-packages-versions.html</id><summary type="html">&lt;h4&gt;package names and multiple distributions&lt;/h4&gt;
&lt;p&gt;As it is, packaging-farm will create packages with names that are not
dependent on the distribution. It creates a problem that is immediately
visible when trying to build a repository that includes all the
packages: the pool can only accomodate for a single package with a given
name.When building packages for multiple distributions, packaging-farm
should rename the packages built so that they carry the distribution
name. The names must compare in the same order as the distribution
chronology. For instance, &lt;em&gt;foo-1.2-1&lt;/em&gt; would be renamed into
&lt;em&gt;foo-1.2-1\~3wheezy&lt;/em&gt;. Such a behavior is intrusive and may not be
appropriate if building for a single distribution. The proposed names
are as follow, for each of the supported distributions, following the
&lt;a href="http://backports.debian.org/Contribute/#index5h3"&gt;Debian GNU/Linux
backport&lt;/a&gt; naming
scheme, with the distribution name added for clarity:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://wiki.ubuntu.com/Releases&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Ubuntu&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
** natty = ~bpo1104natty+1
** maverick = ~bpo1010maverick+1
** lucid = ~bpo1004lucid+1
** etc.
* &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://wiki.debian.org/DebianReleases&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Debian GNU/Linux&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
** wheezy = ~bpo70wheezy+1
** squeeze = ~bpo60squeeze+1
** lenny = ~bpo50lenny+1
** etch = ~bpo40etch+1
** etc.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For the record, here is the chat log that led to the proposal above.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;46&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;loicd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Hi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;#39;m facing a problem organizing repositories made with reprepro. A package (the name is xivo) is fit to build for Debian wheezy, unstable &amp;amp; Ubunty maverick and naty, for i386 &amp;amp; amd64, without requiring any change. Because reprepro uses a pool to store the packages, these four packages (for wheezy, unstable, maverick &amp;amp; naty) cannot coexist with the exact same name. I could either a) change the package name by adding the target distribution although these packages are strictly identical, b) make a separate repository for each distribution (which still is useful to aggregate the various architectures). Do you have any advice ?&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(10:30:43 AM) twb: FWIW I just use apt-ftparchive&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(10:31:44 AM) twb: http://paste.debian.net/115729/&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(10:31:49 AM) twb: Not very nice, but it does the job&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(10:32:51 AM) loicd: twb: you mean that it is imune to this kind of trouble (the pool) ? (10:34:57 AM) twb: Basically each dir is an apt repo&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(10:35:26 AM) twb: So instead of dists/ and pool/x/xivo, you&amp;#39;d&lt;/span&gt; &lt;span class="s s-Atom"&gt;just&lt;/span&gt; &lt;span class="s s-Atom"&gt;have&lt;/span&gt; &lt;span class="s s-Atom"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s s-Atom"&gt;as&lt;/span&gt; &lt;span class="s s-Atom"&gt;a&lt;/span&gt; &lt;span class="s s-Atom"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;and&lt;/span&gt; &lt;span class="s s-Atom"&gt;you&lt;/span&gt; &lt;span class="s s-Atom"&gt;can&lt;/span&gt; &lt;span class="s s-Atom"&gt;point&lt;/span&gt; &lt;span class="s s-Atom"&gt;whatever&lt;/span&gt; &lt;span class="s s-Atom"&gt;distros&lt;/span&gt; &lt;span class="s s-Atom"&gt;you&lt;/span&gt; &lt;span class="s s-Atom"&gt;want&lt;/span&gt; &lt;span class="s s-Atom"&gt;at&lt;/span&gt; &lt;span class="nf"&gt;it&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;loicd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;twb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;it&lt;/span&gt; &lt;span class="s s-Atom"&gt;looks&lt;/span&gt; &lt;span class="s s-Atom"&gt;like&lt;/span&gt; &lt;span class="s s-Atom"&gt;what&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;#39;m after. One drawback of having the same package name for two distro is upgrade. The following use case is broken : a) install wheezy + xivo, b) upgrade to unstable =&amp;gt; xivo does not get upgraded. Although the source packages are the same, the resulting .deb are different because the context is different. The ideal situation would be to be able to create .deb with a name that contains the distro in such a way that it upgrades.&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(10:41:54 AM) ***OdyX does -1 upload to Debian, then -1~n0 to natty, -1~m0 to maverick -1~l0 to lucid.&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(10:44:39 AM) loicd: OdyX: smart :-)&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(10:45:24 AM) OdyX: loicd: more or less ~. It means you have to rebuild+upload each time (only source if you upload to PPAs)&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(10:46:55 AM) loicd: twb: I actually have the same problem with squeeze + wheezy. &lt;/span&gt;
&lt;span class="s s-Atom"&gt;(10:47:09 AM) twb: loicd: squeeze is BPO&amp;#39;s&lt;/span&gt; &lt;span class="s s-Atom"&gt;problem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;not&lt;/span&gt; &lt;span class="s s-Atom"&gt;yours&lt;/span&gt; &lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;P&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;loicd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s s-Atom"&gt;~s0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s s-Atom"&gt;squeeze&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s s-Atom"&gt;~&lt;/span&gt;&lt;span class="nf"&gt;w0&lt;/span&gt; 
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;loicd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;that&lt;/span&gt; &lt;span class="s s-Atom"&gt;works&lt;/span&gt; &lt;span class="nf"&gt;too&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;37&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;loicd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;twb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;actually&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;it&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;The&lt;/span&gt; &lt;span class="s s-Atom"&gt;vendor&lt;/span&gt; &lt;span class="s s-Atom"&gt;of&lt;/span&gt; &lt;span class="s s-Atom"&gt;the&lt;/span&gt; &lt;span class="s s-Atom"&gt;software&lt;/span&gt; &lt;span class="s s-Atom"&gt;needs&lt;/span&gt; &lt;span class="s s-Atom"&gt;to&lt;/span&gt; &lt;span class="s s-Atom"&gt;provide&lt;/span&gt; &lt;span class="s s-Atom"&gt;squeeze&lt;/span&gt; &lt;span class="s s-Atom"&gt;backports&lt;/span&gt; &lt;span class="s s-Atom"&gt;to&lt;/span&gt; &lt;span class="s s-Atom"&gt;its&lt;/span&gt; &lt;span class="s s-Atom"&gt;clients&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;This&lt;/span&gt; &lt;span class="s s-Atom"&gt;happens&lt;/span&gt; &lt;span class="s s-Atom"&gt;usually&lt;/span&gt; &lt;span class="s s-Atom"&gt;in&lt;/span&gt; &lt;span class="s s-Atom"&gt;a&lt;/span&gt; &lt;span class="s s-Atom"&gt;rush&lt;/span&gt; &lt;span class="s s-Atom"&gt;and&lt;/span&gt; &lt;span class="s s-Atom"&gt;before&lt;/span&gt; &lt;span class="s s-Atom"&gt;it&lt;/span&gt; &lt;span class="s s-Atom"&gt;becomes&lt;/span&gt; &lt;span class="s s-Atom"&gt;available&lt;/span&gt; &lt;span class="s s-Atom"&gt;to&lt;/span&gt; &lt;span class="s s-Atom"&gt;bpo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;It&lt;/span&gt; &lt;span class="s s-Atom"&gt;actually&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="s s-Atom"&gt;a&lt;/span&gt; &lt;span class="s s-Atom"&gt;concern&lt;/span&gt; &lt;span class="s s-Atom"&gt;shared&lt;/span&gt; &lt;span class="s s-Atom"&gt;by&lt;/span&gt; &lt;span class="s s-Atom"&gt;most&lt;/span&gt; &lt;span class="s s-Atom"&gt;software&lt;/span&gt; &lt;span class="s s-Atom"&gt;vendors&lt;/span&gt; &lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;the&lt;/span&gt; &lt;span class="s s-Atom"&gt;delays&lt;/span&gt; &lt;span class="s s-Atom"&gt;between&lt;/span&gt; &lt;span class="s s-Atom"&gt;meeting&lt;/span&gt; &lt;span class="s s-Atom"&gt;the&lt;/span&gt; &lt;span class="s s-Atom"&gt;client&lt;/span&gt; &lt;span class="s s-Atom"&gt;request&lt;/span&gt; &lt;span class="s s-Atom"&gt;and&lt;/span&gt; &lt;span class="s s-Atom"&gt;meeting&lt;/span&gt; &lt;span class="s s-Atom"&gt;the&lt;/span&gt; &lt;span class="s s-Atom"&gt;debian&lt;/span&gt; &lt;span class="s s-Atom"&gt;requirements&lt;/span&gt; &lt;span class="s s-Atom"&gt;do&lt;/span&gt; &lt;span class="o"&gt;not&lt;/span&gt; &lt;span class="s s-Atom"&gt;always&lt;/span&gt; &lt;span class="s s-Atom"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;loicd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="s s-Atom"&gt;think&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="s s-Atom"&gt;will&lt;/span&gt; &lt;span class="s s-Atom"&gt;go&lt;/span&gt; &lt;span class="s s-Atom"&gt;for&lt;/span&gt; &lt;span class="s s-Atom"&gt;names&lt;/span&gt; &lt;span class="s s-Atom"&gt;that&lt;/span&gt; &lt;span class="s s-Atom"&gt;use&lt;/span&gt; &lt;span class="s s-Atom"&gt;the&lt;/span&gt; &lt;span class="s s-Atom"&gt;version&lt;/span&gt; &lt;span class="s s-Atom"&gt;number&lt;/span&gt; &lt;span class="s s-Atom"&gt;to&lt;/span&gt; &lt;span class="s s-Atom"&gt;ensure&lt;/span&gt; &lt;span class="s s-Atom"&gt;it&lt;/span&gt; &lt;span class="s s-Atom"&gt;compares&lt;/span&gt; &lt;span class="s s-Atom"&gt;as&lt;/span&gt; &lt;span class="s s-Atom"&gt;expected&lt;/span&gt; &lt;span class="s s-Atom"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="s s-Atom"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s s-Atom"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s s-Atom"&gt;~&lt;/span&gt;&lt;span class="mf"&gt;7.0&lt;/span&gt;&lt;span class="nf"&gt;wheezy&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s s-Atom"&gt;wheezy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s s-Atom"&gt;~&lt;/span&gt;&lt;span class="mf"&gt;7.0&lt;/span&gt;&lt;span class="s s-Atom"&gt;wheezy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;squeeze&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s s-Atom"&gt;~&lt;/span&gt;&lt;span class="mf"&gt;6.0&lt;/span&gt;&lt;span class="s s-Atom"&gt;squeeze&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;lenny&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s s-Atom"&gt;~&lt;/span&gt;&lt;span class="mf"&gt;5.0&lt;/span&gt;&lt;span class="s s-Atom"&gt;lenny&lt;/span&gt; &lt;span class="s s-Atom"&gt;etc&lt;/span&gt;&lt;span class="p"&gt;.).&lt;/span&gt; &lt;span class="nv"&gt;What&lt;/span&gt; &lt;span class="s s-Atom"&gt;do&lt;/span&gt; &lt;span class="s s-Atom"&gt;you&lt;/span&gt; &lt;span class="s s-Atom"&gt;think&lt;/span&gt; &lt;span class="s s-Atom"&gt;?&lt;/span&gt; 
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;daemonkeeper&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;why&lt;/span&gt; &lt;span class="s s-Atom"&gt;use&lt;/span&gt; &lt;span class="s s-Atom"&gt;the&lt;/span&gt; &lt;span class="s s-Atom"&gt;codename&lt;/span&gt; &lt;span class="s s-Atom"&gt;at&lt;/span&gt; &lt;span class="s s-Atom"&gt;all&lt;/span&gt; &lt;span class="s s-Atom"&gt;then?&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;twb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;If&lt;/span&gt; &lt;span class="s s-Atom"&gt;the&lt;/span&gt; &lt;span class="s s-Atom"&gt;backport&lt;/span&gt; &lt;span class="s s-Atom"&gt;doesn&amp;#39;t involve a source package change, I don&amp;#39;t&lt;/span&gt; &lt;span class="s s-Atom"&gt;really&lt;/span&gt; &lt;span class="s s-Atom"&gt;see&lt;/span&gt; &lt;span class="s s-Atom"&gt;why&lt;/span&gt; &lt;span class="s s-Atom"&gt;it&amp;#39;s necessary to fuck about at all&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(11:45:14 AM) pabs: loicd: don&amp;#39;t&lt;/span&gt; &lt;span class="s s-Atom"&gt;you&lt;/span&gt; &lt;span class="s s-Atom"&gt;want&lt;/span&gt; &lt;span class="s s-Atom"&gt;dch&lt;/span&gt; &lt;span class="s s-Atom"&gt;--bpo?&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt; &lt;span class="nv"&gt;AM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;loicd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;daemonkeeper&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;for&lt;/span&gt; &lt;span class="s s-Atom"&gt;readability&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="s s-Atom"&gt;agree&lt;/span&gt; &lt;span class="s s-Atom"&gt;it&amp;#39;s redundant.&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(11:46:06 AM) loicd: but it will help the customer support, I suppose&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(11:48:37 AM) loicd: twb: because the dependencies change and the binary packages being built are actually different. I agree that it would be completly pointless if they were python sources for instance. But in the case of compiled binaries, if the distribution is being upgraded the binary package must also be upgraded. If it had the same name it would not upgrade and be broken.&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(11:49:05 AM) twb: loicd: ah right&lt;/span&gt;
&lt;span class="s s-Atom"&gt;(12:07:54 PM) loicd: pabs: thanks for pointing out bpo. I will follow the bpo naming scheme so that it&amp;#39;s&lt;/span&gt; &lt;span class="s s-Atom"&gt;compatible&lt;/span&gt; &lt;span class="s s-Atom"&gt;with&lt;/span&gt; &lt;span class="s s-Atom"&gt;bpo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;And&lt;/span&gt; &lt;span class="s s-Atom"&gt;it&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s s-Atom"&gt;s&lt;/span&gt; &lt;span class="s s-Atom"&gt;a&lt;/span&gt; &lt;span class="s s-Atom"&gt;lot&lt;/span&gt; &lt;span class="s s-Atom"&gt;better&lt;/span&gt; &lt;span class="s s-Atom"&gt;to&lt;/span&gt; &lt;span class="s s-Atom"&gt;adopt&lt;/span&gt; &lt;span class="s s-Atom"&gt;an&lt;/span&gt; &lt;span class="s s-Atom"&gt;existing&lt;/span&gt; &lt;span class="s s-Atom"&gt;convention&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="s s-Atom"&gt;-&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nn"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="s s-Atom"&gt;backports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;debian&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;Contribute&lt;/span&gt;&lt;span class="s s-Atom"&gt;/#&lt;/span&gt;&lt;span class="nf"&gt;index5h3&lt;/span&gt; &lt;span class="o"&gt;:-&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;natty support and documentation&lt;/h4&gt;
&lt;p&gt;Support for &lt;a href="https://wiki.ubuntu.com/NattyNarwhal"&gt;natty&lt;/a&gt; was added by
creating a virtual machine using &lt;a href="http://mirrors.ircam.fr/pub/ubuntu/releases//natty/ubuntu-11.04-server-amd64.iso"&gt;the server
distribution&lt;/a&gt;
and creating i386 and x86_64 chroots with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pbuilder --create --architecture i386 --basetgz /var/cache/pbuilder/natty-i386.tgz
pbuilder --create --architecture amd64 --basetgz /var/cache/pbuilder/natty-amd64.tgz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and untaring them into the packaging-farm &lt;a href="http://packaging-farm.dachary.org/chroot/"&gt;rsync
repository&lt;/a&gt; for
&lt;a href="http://packaging-farm.dachary.org/chroot/debian/i386/natty/"&gt;i386&lt;/a&gt; and
&lt;a href="http://packaging-farm.dachary.org/chroot/debian/x86_64/natty/"&gt;x86_64&lt;/a&gt;.The
content of the &lt;em&gt;packaging-farm.conf&lt;/em&gt; was documented as a manual page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;NAME
       packaging-farm.conf - define the default environment to build a package


DESCRIPTION
       The  packaging-farm command uses makefiles to run. Each package defines
       variables to influence the way it is built, as described in the packag-
       ing-farm(1)  manual  page.  The  packaging-farm.conf  file  is included
       before the package specific makefile and can be used  to  define  vari-
       ables common to all packages. The packaging-farm.conf is a makefile and
       its syntax depends on GNU make

       There are no default values. If a variable is commented out, it will be
       set to a value that triggers an error.  The default packaging-farm.conf
       file distributed contains sensible defaults, there is no fallback.   If
       they are removed, it is presumably because of a typo or an error and it
       needs to trigger an error instead of silently falling back on an  unex-
       pected default.


VARIABLES
       For  each variable listed below, the values that can be used are listed
       in the comments of the  distributed  packaging-farm.conf  file.  It  is
       important  to  check that a variable does not contain a trailing space.
       Otherwise it will be used and lead to unexpected results.


       DISTRIBUTIONS
          is the white space separated list of distributions for  which  a
          package must be built.


       ARCHITECTURES
          is  the  white space separated list of architectures for which a
          package must be built.  For each DISTRIBUTION, the package  will
          be  built  for  all ARCHITECTURES. For instance if DISTRIBUTIONS
          contains squeeze and maverick and  ARCHITECTURES  contains  i386
          and   x86_64,  the  package  will  be  built  for  squeeze+i386,
          squeeze+x86_64, maverick+i386 and maverick+x86_64.  There is  no
          way  to  ask that only i386 is built for squeeze and only x86_64
          is built for maverick.


       PACKAGES
          The list of the packages for which dependencies must  be  calcu-
          lated with

          packaging-farm depends

          so  that  package1  is  always built before package2 if package2
          depends on package1. It is recommended to not manually set  this
          variable.   Instead,  the  &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CACHEDIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/build  (which  is usually
          /var/cache/packaging-farm/build ) should only  contain  directo-
          ries  matching  the  names  of  the packages to work on. And the
          variable can be set with:

          PACKAGES=$(shell ls &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CACHEDIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/build)


       AUFS   The AUFS File System (http://aufs.sourceforge.net/) is  used  by
          the  packaging  farm  to  create a local copy of a chroot with a
          minimum overhead. If not available (value set  to  no)  a  rsync
          based  copy  will  be  used  instead.  This uses a lot more disk
          space.  On  Debian  GNU/Linux,  aufs  is  usually  available  by
          default and can be loaded with modprobe aufs


       CHROOT_WANTED
          The  list  of  chroot  that must be loaded in order to build the
          packages.   They   are   retrieved    from    rsync://packaging-
          farm.dachary.org/packaging-farm via the command:

          packaging-farm chroot-master-sync

          For instance

          CHROOT_WANTED=debian/i386/squeeze debian/x86_64/squeeze

          will retrieve squeeze for the i386 and x86_64 architectures. The
          chroot repository can be browsed via the web  at  http://packag-
          ing-farm.dachary.org/chroot/.   The  available chroot must cover
          all combinations of the DISTRIBUTIONS  and  ARCHITECTURES  vari-
          ables,  both in the packaging-farm.conf file and in the invivid-
          ual makefiles of each package. For  instance,  if  a  packaging-
          farm.conf  has DISTRIBUTIONS=squeeze ARCHITECTURES=i386 only but
          a package overrides this  with  DISTRIBUTIONS=wheezy  packaging-
          farm will need debian/i386/wheezy to build it.  If the distribu-
          tion is omitted, all chroot for a  given  architecture  will  be
          retrieved.

          packaging-farm CHROOT_WANTED=debian/i386 chroot-master-sync

          A  cron  job will synchronize on a daily basis. There is no need
          to manually run the synchronization, unless a specific update is
          needed immediately.  After being copied, the chroot will get the
          /etc/resolv.conf file from the host.


       CHROOT_ROOT
          Directory in which copies of the CHROOT_WANTED are kept.  As  of
          May, 2011, if CHROOT_WANTED=debian it will use 5GB.


       SUBMIT The suffix of the submit script that will be used when running:

          packaging-farm submit

          The  action  is  carried out by as script named after this vari-
          able.

          /var/lib/packaging-farm/submit/submit-&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;SUBMIT&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;.sh


TROUBLESHOOTING
       check for trailing spaces in variable values
          DISTRIBUTIONS=A B with a trailing space is different  from  DIS-
          TRIBUTIONS=A  B  withing a trailing space and will lead to unex-
          pected behavior.


SEE ALSO
       submit-xivo.sh(1), packaging-farm(1)


AUTHORS
       Loic Dachary &lt;span class="nt"&gt;&amp;lt;loic&lt;/span&gt;&lt;span class="err"&gt;@dachary.org&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;



                     local      packaging-farm.conf(5)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The default &lt;em&gt;packaging-farm.conf&lt;/em&gt; file was self documented and set with
defaultvalues so that the user only need to copy/paste from it without a
need to actuallyunderstand the details.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;########################################################################
#
# White space separated list of the distributions for which the packages
# must be built.
# There must be NO SPACE at the end of the line
#
# DISTRIBUTIONS=lenny squeeze wheezy unstable maverick natty
#
DISTRIBUTIONS=unstable
#
########################################################################
#
# White space separated list of the distributions for which the packages
# must be built. 
# There must be NO SPACE at the end of the line
#
# ARCHITECTURES=i386 x86_64
# 
ARCHITECTURES=x86_64
#
########################################################################
#
# The list of the packages for which dependencies must be calculated
# with
#
# packaging-farm depends
#
# so that package1 is always built before package2 if package2 depends
# on package1. It is recommended to not manually set this variable.
# Instead, the &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CACHEDIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/build (which is usually 
# /var/cache/packaging-farm/build ) should only contain directories
# matching the names of the packages to work on.
# There must be NO SPACE at the end of the line
#
# PACKAGES=package1 package2
#
PACKAGES=$(shell ls &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CACHEDIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/build)
#
########################################################################
#
# The AUFS File System (http://aufs.sourceforge.net/) is used by the
# packaging farm to create a local copy of a chroot with a minimum
# overhead. If not available (value set to no) a rsync based copy will
# be used instead. This uses a lot more disk space.
# On Debian GNU/Linux, aufs is usually available by default and
# can be loaded with modprobe aufs
#
#AUFS=yes
AUFS=no
#
########################################################################
#
# The list of chroot that must be loaded in order to build the
# packages. They are retrieved from rsync://packaging-farm.dachary.org/packaging-farm
# For instance:
# CHROOT_WANTED=debian/i386/squeeze debian/x86_64/squeeze 
# will retrieve squeeze for the i386 and x86_64 architectures.
#
# The values are:
#
# debian/i386/lenny
# debian/i386/maverick
# debian/i386/natty
# debian/i386/squeeze
# debian/i386/unstable
# debian/i386/wheezy
# debian/x86_64/lenny
# debian/x86_64/maverick
# debian/x86_64/natty
# debian/x86_64/squeeze
# debian/x86_64/unstable
# debian/x86_64/wheezy
#
# There must be NO SPACE at the end of the line
#
# Retreive all of debian
# CHROOT_WANTED=debian
# Retreive all of i386 debian
# CHROOT_WANTED=debian/i386
# Retreive all of x86_64 debian
# CHROOT_WANTED=debian/x86_64
#
CHROOT_WANTED=debian/x86_64/unstable
#
########################################################################
#
# Directory in which copies of the CHROOT_WANTED 
# are kept.
#
CHROOT_ROOT=/chroot
#
########################################################################
#
# The suffix of the submit script that will be used
# when running:
#
# packaging-farm submit
#
######
# Read man submit-xivo.sh(1) for more information
# SUBMIT=xivo
#####
# Not yet documented.
# SUBMIT=pokersource
#
SUBMIT=none
#
########################################################################
#
# If set, the debsign(1) command will be called to
# sign the package, if it is built successfully.
#
# debsign &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;SIGN_debian&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; *.changes
#
# It should specify the key with which the package should be
# signed. The meta-packages will use SIGN_WITH to sign
# the packages.
#
#SIGN_debian=-kABCDEFGH
SIGN_debian=
#
########################################################################
#
# Sign the packages of the repository created for a meta-package
# See reprepro(1) for more information.
#
#SIGN_WITH=SignWith: yes
SIGN_WITH=
#
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>An alternate XiVO gallifrey repository (part 2/2)</title><link href="http://blog.xivo.io/an-alternate-xivo-gallifrey-repository-part-22.html" rel="alternate"></link><updated>2011-04-27T05:47:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-04-27:an-alternate-xivo-gallifrey-repository-part-22.html</id><summary type="html">&lt;h4&gt;composing gallifrey&lt;/h4&gt;
&lt;p&gt;The gallifrey repository is made of packages built from the GIT
repositories, some extracted from the official repository because they
are not under GIT and others built for the occasion (kernel-modules and
meta-packages). The source of each package is documented in
&lt;strong&gt;/var/cache/packaging-farm/build/gallifrey/Makefile&lt;/strong&gt; which is the
meta-package that depends on all the others:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Submitted from the GIT repositories&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; for dir in asterisk dahdi-linux asterisk-sounds-gsm-de-de asterisk-sounds-wav-en-us asterisk-sounds-wav-es-es asterisk-sounds-wav-fr-ca \&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;       prompts-xivo prompts asternic-stats agid base-config ctiservers ctiwebclient extra fetchfw \&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;       lib-python provisioning queues-logger sysconfd utils web-interface ; do packaging-farm DIRECTORY=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="x"&gt; submit ; done&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Retrieved from dak.proformatique.com because they are not yet in the GIT repositories&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; deb-src http://dak.proformatique.com/debian/ lenny-xivo-gallifrey-dev main&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; for package in asterisk-chan-capi libasterisk-perl libpri misdn-kernel misdn-user \&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;                sangoma-wanpipe spandsp pf-xivo pf-xivo-backup  ; \&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;                do ( rm -fr &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; mkdir &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; cd &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; apt-get source &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ) ; done&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Hand made packages&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; gallifrey&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; dahdi-linux-modules&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; sangoma-wanpipe-modules&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; misdn-kernel-modules&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The hand made packages (i.e. Makefiles) can be retrieved from their
respective repositories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://gallifrey.dachary.org/packaging-farm/gallifrey/Makefile&lt;/li&gt;
&lt;li&gt;http://gallifrey.dachary.org/packaging-farm/dahdi-linux-modules/Makefile&lt;/li&gt;
&lt;li&gt;http://gallifrey.dachary.org/packaging-farm/misdn-kernel-modules/Makefile&lt;/li&gt;
&lt;li&gt;http://gallifrey.dachary.org/packaging-farm/sangoma-wanpipe-modules/Makefile&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mirroring the http://gallifrey.dachary.org/packaging-farm/ directory is
enough to get all the information required to re-install a
packaging-farm from scratch.&lt;/p&gt;
&lt;h4&gt;comparing repositories&lt;/h4&gt;
&lt;p&gt;In order to make sure that the new &lt;a href="http://gallifrey.dachary.org/packaging-farm/gallifrey/gnulinux/debian/"&gt;gallifrey
repository&lt;/a&gt;
does not deviate from the &lt;a href="http://dak.proformatique.com/debian/dists/lenny-xivo-gallifrey-dev/"&gt;existing
dak&lt;/a&gt;,
the packages it contains were extracted from sources and compared.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; deb-src http://dak.proformatique.com/debian/ lenny-xivo-gallifrey-dev main&lt;/span&gt;
&lt;span class="x"&gt;dak:&lt;/span&gt;
&lt;span class="x"&gt;        mkdir -p dak&lt;/span&gt;
&lt;span class="x"&gt;        apt-get update&lt;/span&gt;
&lt;span class="x"&gt;        cd dak ; awk &amp;#39;/^Package/&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;print &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="x"&gt;2}&amp;#39; /var/lib/apt/lists/dak.proformatique.com_debian_dists_lenny-xivo-gallifrey-dev_main_source_Sources | \&lt;/span&gt;
&lt;span class="x"&gt;        while read package ; do ( rm -fr &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; mkdir &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; cd &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; apt-get source &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ) ; done&lt;/span&gt;

&lt;span class="x"&gt;farm:&lt;/span&gt;
&lt;span class="x"&gt;        rm -fr farm ; mkdir -p farm&lt;/span&gt;
&lt;span class="x"&gt;        cd farm ; for package in `ls /var/lib/packaging-farm` ; do \&lt;/span&gt;
&lt;span class="x"&gt;                if [ -f &amp;quot;`echo /var/lib/packaging-farm/&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt;/gnulinux/debian/i386/lenny/src/*.dsc`&amp;quot; ] ; then \&lt;/span&gt;
&lt;span class="x"&gt;                        ( \&lt;/span&gt;
&lt;span class="x"&gt;                                mkdir &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; cd &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; \&lt;/span&gt;
&lt;span class="x"&gt;                                dpkg-source -x /var/lib/packaging-farm/&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt;/gnulinux/debian/i386/lenny/src/*.dsc ; \&lt;/span&gt;
&lt;span class="x"&gt;                        ) \&lt;/span&gt;
&lt;span class="x"&gt;                fi ; \&lt;/span&gt;
&lt;span class="x"&gt;        done&lt;/span&gt;

&lt;span class="x"&gt;diff:&lt;/span&gt;
&lt;span class="x"&gt;        cd farm ; for package in * ; do \&lt;/span&gt;
&lt;span class="x"&gt;                if [ -d ../dak/&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ] ; then \&lt;/span&gt;
&lt;span class="x"&gt;                        farm_dir=`find &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt;/* -maxdepth 0 -type d` ; \&lt;/span&gt;
&lt;span class="x"&gt;                        dak_dir=`find ../dak/&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt;/* -maxdepth 0 -type d` ; \&lt;/span&gt;
&lt;span class="x"&gt;                        diff -ur &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;dak_dir&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;farm_dir&lt;/span&gt;&lt;span class="x"&gt; ; \&lt;/span&gt;
&lt;span class="x"&gt;                else \&lt;/span&gt;
&lt;span class="x"&gt;                        echo &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; not in dak ; \&lt;/span&gt;
&lt;span class="x"&gt;                fi ; \&lt;/span&gt;
&lt;span class="x"&gt;        done &amp;gt; /var/www/diff/diff-`date +%Y-%m-%d`.txt&lt;/span&gt;
&lt;span class="x"&gt;        cd dak ; for package in * ; do \&lt;/span&gt;
&lt;span class="x"&gt;                if [ ! -d ../farm/&lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ] ; then \&lt;/span&gt;
&lt;span class="x"&gt;                        echo &lt;/span&gt;&lt;span class="p"&gt;$$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; not in farm ; \&lt;/span&gt;
&lt;span class="x"&gt;                fi ; \&lt;/span&gt;
&lt;span class="x"&gt;        done &amp;gt;&amp;gt; /var/www/diff/diff-`date +%Y-%m-%d`.txt&lt;/span&gt;

&lt;span class="x"&gt;.PHONY: dak farm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The result is &lt;a href="http://gallifrey.dachary.org/diff/"&gt;archived with a
timestamp&lt;/a&gt;.According to Nicolas
Hicher, the numerous SVN tag substitutions that are missing because of
the migration to GIT will be harmless:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;pf_magic_pickupmark&lt;/span&gt;
&lt;span class="x"&gt;-       &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;Revision&lt;/span&gt;&lt;span class="x"&gt;: 10011 &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;-       &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;Date&lt;/span&gt;&lt;span class="x"&gt;: 2011-01-21 17:22:28 +0100 (Fri, 21 Jan 2011) &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;+       &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;Revision&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;+       &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;packaging-farm release 1.2.39&lt;/h4&gt;
&lt;p&gt;A few &lt;a href="http://packaging-farm.dachary.org/#Issue"&gt;issues&lt;/a&gt; were reported
against the latest packaging-farm, but they were not fixed because they
are not blocking. Other problems required immediate attention and they
were fixed in the &lt;a href="http://packaging-farm.dachary.org/download/"&gt;1.2.39&lt;/a&gt;
release&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* home/www/packaging-farm/packaging-farm/lib/Makefile:
        kill all processes left over in a chroot before trying to umount
        [dd63f7ecef41] 

        * home/www/packaging-farm/packaging-farm/debian/changelog, home/www
        /packaging-farm/packaging-farm/debian/control, home/www/packaging-
        farm/packaging-farm/lib/Makefile, home/www/packaging-farm/packaging-
        farm/lib/debian/official-op.sh, home/www/packaging-farm/packaging-
        farm/lib/debian/submit.sh, home/www/packaging-farm/packaging-
        farm/lib/kernel-module/depends.sh:
        add support for wheezy
        [8f9a40627f0b]

        * home/www/packaging-farm/packaging-farm/lib/report.sh:
        add support for debian src format 3.0 by recognizing the
        .debian.tar.gz
        [36b30f22e4d8]

        * home/www/packaging-farm/packaging-farm/etc/packaging-farm.conf:
        change the semantic and example of SIGN_debian
        [d3215a3a920f]

        * home/www/packaging-farm/packaging-farm/submit/submit-xivo.sh:
        preserve epoch from version, if any
        [6deaae005d9a]

        * home/www/packaging-farm/packaging-farm/bin/packaging-farm.1:
        document the updating of the chroots and add a section on
        troubleshooting
        [2af56b21eb6a]
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary></entry><entry><title>An alternate XiVO gallifrey repository (part 1/2)</title><link href="http://blog.xivo.io/an-alternate-xivo-gallifrey-repository-part-12.html" rel="alternate"></link><updated>2011-04-18T16:40:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-04-18:an-alternate-xivo-gallifrey-repository-part-12.html</id><summary type="html">&lt;h4&gt;Kernel module dependencies&lt;/h4&gt;
&lt;p&gt;When binary kernel modules need to be rebuilt, a Makefile containing
&lt;em&gt;ROLE = kernel-module&lt;/em&gt; is created for the packaging-farm to work with,
as explained in the manual page. It depends on the source package
providing the &lt;em&gt;MODULE = module-source&lt;/em&gt; package. A script was added to
the global dependency computation facility of packaging-farm&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm depends
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to figure out if the source package is known. If it is a dependency, it
is added to the &lt;em&gt;/var/cache/packaing-farm/depends.mk&lt;/em&gt; file so that it is
rebuilt before the binary kernel modules.&lt;/p&gt;
&lt;h4&gt;Gallifrey dedicated farm.&lt;/h4&gt;
&lt;p&gt;A &lt;a href="http://gallifrey.dachary.org/packaging-farm/"&gt;dedicated virtual
machine&lt;/a&gt; was created to
host the making of gallifrey packages and the resulting repository. It
has been installed from scratch, using the latest
&lt;a href="http://packaging-farm.dachary.org/download/"&gt;packaging-farm&lt;/a&gt; package.It
turned out that the submission form of &lt;em&gt;submit-xivo.sh(1)&lt;/em&gt; relies on
being able to find some dependencies of the source package being
submitted, such as &lt;em&gt;cdbs&lt;/em&gt; or &lt;em&gt;quilt&lt;/em&gt;. Although the &lt;em&gt;dpkg-buildpackage
-d&lt;/em&gt; command is used (which is supposed to be insensitive to the lack of
source dependencies), it could not work unless it is able to interpret
the &lt;em&gt;debian/rules&lt;/em&gt; file. The &lt;em&gt;cdbs&lt;/em&gt; and &lt;em&gt;quilt&lt;/em&gt; dependencies were added
to the packaging-farm package and all general purpose dependencies
should be as well.&lt;/p&gt;
&lt;h4&gt;Patching debian configuration&lt;/h4&gt;
&lt;p&gt;When something is not right with the debian package, it can be patched
directly on the farm instead of going thru the repository. It may be
useful as a temporary measure when the correct patch is still unclear.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /var/cache/packaging-farm/sources/PACKAGE
# fix something in PACKAGE/debian/rules
dpkg-source -b PACKAGE
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that once the fix is correct, it must be saved because the sources
will be overriden when&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm DIRECTORY=PACKAGE submit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;is run.This method was used to produce patches for
&lt;a href="https://projects.proformatique.com/issues/2194"&gt;asterisk&lt;/a&gt;,
&lt;a href="https://projects.proformatique.com/issues/2195"&gt;dahdi-linux&lt;/a&gt; and
&lt;a href="https://projects.proformatique.com/issues/2196"&gt;dahdi-tools&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Configuring packaging-farm&lt;/h4&gt;
&lt;p&gt;In order for the packages to be signed, a GPG key is generated, without
a password and added tothe &lt;em&gt;packaging-farm.conf&lt;/em&gt; file (see below
SIGN_debian=-kD08ED067 )&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg --gen-key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;em&gt;/etc/packaging-farm/packaging-farm.conf&lt;/em&gt; was modified for
&lt;em&gt;gallifrey&lt;/em&gt; as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#
# Exclusively built for lenny
#
DISTRIBUTIONS=lenny
#
# Exclusively built for i386
#
ARCHITECTURES=i386
#
# Source submission porcess configuration
#
SUBMIT=xivo
#
# gallifrey only ships for lenny
#
export SUITE=lenny
export XIVO=gallifrey
#
# List of subdirectories of CHROOT_SOURCE that are cached
# localy in CHROOT_ROOT on a daily basis with
# packaging-farm chroot-master-sync
#
CHROOT_WANTED=debian/i386/lenny
#
# Signing related options for Debian GNU/Linux
# See dpkg-buildpackage(1) for more information
#
SIGN_debian=-kD08ED067
#
# Signing related options for Debian GNU/Linux
# See reprepro(1) for more information
#
SIGN_WITH=SignWith: yes
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Collecting gallifrey modules.&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;gallifrey&lt;/em&gt; sources and debian packages are to be found in the
following repositories:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http://git.xivo.fr/xivo-gallifrey.git/ sources
http://git.xivo.fr/debian/lenny-xivo-gallifrey.git/ debian packages
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the following were submitted :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;for dir in dahdi-linux asterisk-sounds-gsm-de-de asterisk-sounds-wav-en-us asterisk-sounds-wav-es-es asterisk-sounds-wav-fr-ca prompts-xivo prompts asternic-stats agid base-config ctiservers ctiwebclient extra fetchfw lib-python provisioning queues-logger sysconfd utils web-interface ; do packaging-farm DIRECTORY=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="x"&gt; submit ; done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, some of them were rebuilt manually:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dahdi-linux-modules libasterisk-perl libpri misdn-kernel misdn-kernel-modules pf-asterisk-prompt-fr-xivo pf-xivo pf-xivo-backup sangoma-wanpipe sangoma-wanpipe-modules spandsp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and must be retrieved from the development repository:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;http://dak.proformatique.com/debian/&lt;/span&gt; &lt;span class="kp"&gt;lenny-xivo-gallifrey-dev&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;using the method laid out in the &lt;a href="http://blog.xivo.fr/index.php?post/2011/02/21/Creating-an-independant-XiVO-Debian-GNU/Linux-repository-from-scratch-%28part-3%29"&gt;Creating an independant XiVO Debian
GNU/Linux repository from
scratch&lt;/a&gt;
series.At the moment the development repository is incomplete. But it is
being worked on and the making of the repository will resume when it is
back online.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Signing and naming XiVO packages</title><link href="http://blog.xivo.io/signing-and-naming-xivo-packages.html" rel="alternate"></link><updated>2011-04-11T17:15:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-04-11:signing-and-naming-xivo-packages.html</id><summary type="html">&lt;h4&gt;signing packages&lt;/h4&gt;
&lt;p&gt;A GPG
&lt;a href="http://packaging-farm.dachary.org/download/packaging-farm.gpg"&gt;key&lt;/a&gt; was
created for &lt;a href="http://packaging-farm.dachary.org"&gt;packaging-farm&lt;/a&gt; and used
to sign the &lt;a href="http://packaging-farm.dachary.org/downloads/"&gt;1.2.37&lt;/a&gt;
release. It can be imported using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://packaging-farm.dachary.org/download/packaging-farm.gpg | sudo apt-key add -
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Two variables were added to the packaging-farm configuration file to
instruct dpkg-buildpackage and repreprothat they must sign the packages
and repositories.If the GPG private key for the packager (as listed in
the debian/changelogfor instance) is found (in the home of the user
building the package)and that SIGN_debian is provided the packages will
be signed with it.The relevant packaging-farm.conf(5) lines are:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#
# Signing related options for Debian GNU/Linux
# See dpkg-buildpackage(1) for more information
#
SIGN_debian=-k840233
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the GPG private key for the packager (as listed in the
debian/changelogfor instance) is found (in the home of the user building
the packages)and that SIGN_WITH is set the packages and the content of
the repository will be signed with it.The relevant
packaging-farm.conf(5) lines are:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#
# Signing related options for Debian GNU/Linux
# See reprepro(1) for more information
#
#SIGN_WITH=SignWith: yes
SIGN_WITH=
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;packages versioning&lt;/h4&gt;
&lt;p&gt;The package version policy as found in the proformatique internal wiki
is:&lt;/p&gt;
&lt;h3&gt;Packages Externes&lt;/h3&gt;
&lt;p&gt;La source pourra être Debian ou n'importe quel autre source fiable de
ports et backports.Le nom du package devra rester identique à la version
originelle.Nos uploads seront considérés comme des NMU, et le sufixe
utilisé pour la version du package sera selon les cas :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;+pf.&amp;lt;n&amp;gt; : packages généraux ne faisant partie d'aucun projet
    (&amp;lt;n&amp;gt; étant la révision Proformatique pour la même
    version Debian)&lt;/li&gt;
&lt;li&gt;+pf.&amp;lt;project&amp;gt;.&amp;lt;ver&amp;gt; : packages contenant des correctifs
    ou améliorations &lt;em&gt;'spécifiques&lt;/em&gt;' à un projet, comme xivo / eyefar
    / ... (&amp;lt;project&amp;gt; étant le nom du projet commercial et
    &amp;lt;ver&amp;gt; la version du projet (et pas du composant en question))&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dans d'un sufixe contenant une version qui n'est pas finale, il faut
rajouter l'information de révision (SVN par exemple) de cette façon
:.&amp;lt;project&amp;gt;.&amp;lt;ver&amp;gt;\~&amp;lt;rev&amp;gt; (avec &amp;lt;ver&amp;gt; la version
de la dernière release / branche stable, et &amp;lt;rev&amp;gt; du style "svn42"
/ "baz42" / "rc3" / ...)Examples :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.6.8p12-4 -&amp;gt; 1.6.8p12-4+pf.1, puis 1.6.8p12-4+pf.2, ...&lt;/li&gt;
&lt;li&gt;1.6.8p12-4 -&amp;gt; 1.6.8p12-4+pf.xivo.0.5, puis
    1.6.8p12-4+pf.xivo.0.5&lt;a&gt;&lt;/a&gt;svn103&lt;/li&gt;
&lt;li&gt;(cas d'une nouvelle version upstream) 1.6.8p12-4 -&amp;gt;
    1.6.10-0+pf.1, ...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Packages Proformatique&lt;/h3&gt;
&lt;p&gt;Nous n'utiliserons pas de packages natifs, vu que ce ne seront
généralement pas les même personnes qui feront la dev et le packaging.
Les données de packaging pourront cependant être mis dans un RCS séparé
si besoin.Le nom du package suivra la forme : pf-&amp;lt;project/usage&amp;gt;
(avec &amp;lt;project&amp;gt; le nom du projet éventuellement suivi du
sous-projet : &amp;lt;project&amp;gt;-&amp;lt;subproject&amp;gt;, ou &amp;lt;usage&amp;gt; pour
un usage spécifique comme les meta-packages)La version suivra la forme :
&amp;lt;ver&amp;gt;-&amp;lt;debver&amp;gt; ou &amp;lt;ver&amp;gt;\~&amp;lt;rev&amp;gt;-&amp;lt;debver&amp;gt;
(avec &amp;lt;ver&amp;gt; et &amp;lt;rev&amp;gt; comme pour les packages externes)Par
exemple paquet &lt;em&gt;pf-xivo-web-interface&lt;/em&gt; version &lt;em&gt;1.2.3\~svn123-1&lt;/em&gt; pour du
developpement ou &lt;em&gt;1.2.3-1&lt;/em&gt; pour une release.Le Maintainer du package
sera : &lt;em&gt;Proformatique Maintainance Team
&amp;lt;technique@proformatique.com&amp;gt;&lt;/em&gt;On ajoutera dans les Uploaders la
liste de toutes les personnes attachées à son entretient.&lt;/p&gt;
&lt;h3&gt;implementation in submit-xivo.sh&lt;/h3&gt;
&lt;p&gt;After discussions with Nicolas Hicher and Sylvain Boily, the package
version numbers produced by
&lt;a href="http://packaging-farm.dachary.org/packaging-farm/packaging-farm/submit/submit-xivo.sh"&gt;submit-xivo.sh&lt;/a&gt;
must start with the upstream version and ends with a version number
computed from the date and a mercurial hash. It is computed for packages
for which a *-VERSION file found in the corresponding &lt;a href="http://git.xivo.fr/xivo-skaro.git/"&gt;source
directory&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Introduction to the plugin model of the new provisioning server</title><link href="http://blog.xivo.io/introduction-to-the-plugin-model-of-the-new-provisioning-server.html" rel="alternate"></link><updated>2011-04-11T15:30:00-04:00</updated><author><name>hexanol</name></author><id>tag:blog.xivo.io,2011-04-11:introduction-to-the-plugin-model-of-the-new-provisioning-server.html</id><summary type="html">&lt;p&gt;What must be understood is that if you install provd but you do not
install any plugins, the server won't be able to configure anything.
This means that without plugins, provd is pretty useless.&lt;/p&gt;
&lt;p&gt;Each plugin can configure devices from configuration specifications.
Plugins can also offer some additional services, like the downloading of
external files, like firmware or dictionary files for example. So what
was done before by xivo_fetchfw is now partially integrated in each and
every plugin.&lt;/p&gt;
&lt;p&gt;One important particularity of this system is that each plugin is
isolated from the others. Besides, and unlike the old provisioning
server, the plugins doesn't share a common directory like /tftpboot.
This way, there's never a conflict between the files used by the
different plugins, and this make it easy to have for example a
xivo-aastra-3.2.0.1011 and a xivo-aastra-2.6.0.2019 plugin on the same
server.&lt;/p&gt;
&lt;p&gt;This means that with provd, you can have at the same time and on the
same network, for example, two Aastra 6730i, one using the 2.6.0.2019
firmware and another using the 3.2.0.1011 firmware, and this using the
same DHCP server configuration for the two devices. From the point of
view of both devices, their firmware will be located at
http://&amp;lt;provd_ip&amp;gt;/6730i.st, but for one, this will be a firmware
in version 2.6.0.2019, and for the other, a firmware in version
3.2.0.1011. And if you are curious and point your web browser to this
URL, you'll get an error 404 !&lt;/p&gt;
&lt;p&gt;We must know that provd, unlike the old provisioning server, doesn't
depend on an external HTTP/TFTP server to process the requests, since it
handles these requests by itself. This was becoming necessary with the
introduction of the plugin system and the 'dynamic' request processing.&lt;/p&gt;
&lt;p&gt;Now, if you are a mentally sane person, you might be asking yourself if
this whole system is based on sound principles. And I have a good news
for you; you are not insane, this system is not based on sound
principles &lt;em&gt;a priori&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In fact, for this system to becomes reliable, a precondition must be
true: for each request, it should be possible to unambiguously identify
which device is behind it. With this unambiguous information available,
we can then lookup in our device database for the complete information
we have on this device, and then find which plugin should handle the
request, and redirect the request to this plugin.&lt;/p&gt;
&lt;p&gt;The good thing about this is that most devices provide this unique
information. For example, the Aastras send their MAC address in the
User-Agent header of each HTTP request they make.&lt;/p&gt;
&lt;p&gt;That said, some device doesn't give as much information, like the Cisco
7900, which can only do TFTP requests. This means that sometimes, and
only for some requests, the only 'unique' information we can extract
from a request is the IP address. This does not generally cause problem,
except if you are constantly changing the IP addresses on your network.
And if you enable the provd-DHCP server integration, it will make sure
that the MAC-IP association is always up to date, and this means the
system will be reliable once again.&lt;/p&gt;
&lt;p&gt;So, part of provd is only about making this system reliable and finely
tunable if there's any need to fine-tune the behaviour of the system.
And to make thing a bit more clear, here's a high level view of what
happens when an HTTP request is made to the provisioning server:&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/provd/provd-http-request-flow.png" title="Example HTTP request flow"&gt;&lt;img alt="Example HTTP request
flow" src="/public/provd/.provd-http-request-flow_m.jpg" title="Example HTTP request flow, avr. 2011" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;An Aastra 6730i using firmware 2.6.0.2019, with MAC
    XX:XX:XX:XX:XX:XX and IP Y.Y.Y.Y, does an HTTP GET request for
    /aastra.cfg to the provd server&lt;/li&gt;
&lt;li&gt;The HTTP server component in provd receive the request. It then
    sends it to the 'request processing' component. Note that TFTP
    requests are also being processed by the request
    processing component.&lt;/li&gt;
&lt;li&gt;The first step in the request processing is to extract information
    from the request. The goal is to extract the maximum of information
    about the device behind the request, like its MAC address, model,
    vendor, firmware version, serial number, IP address, etc. By
    default, each plugin can participate in this step. In this case, at
    the end of this step, we know that the request comes from an Aastra
    6730i in version 2.6.0.2019, that its MAC address is
    XX:XX:XX:XX:XX:XX and its IP address is Y.Y.Y.Y.&lt;/li&gt;
&lt;li&gt;The second step in the request processing is to retrieve the device
    from the device database using the information extracted at 3. In
    this case, we suppose there was already a device with MAC
    XX:XX:XX:XX:XX:XX in the device database, so we retrieve it.&lt;/li&gt;
&lt;li&gt;The third step is to update the retrieved device using the
    extracted information. For example, we can update information we
    didn't know about the device. We can also do generic operation in
    this step if we needs to. Anyway, in our case, this step is actually
    a no-op.&lt;/li&gt;
&lt;li&gt;The last step is to route the request to the HTTP handler that will
    answer the request. In our case, from the device retrieved at 4, we
    know that its associated plugin is xivo-aastra-2.6.0.2019, so the
    request is routed to the HTTP handler of the
    xivo-aastra-2.6.0.2019 plugin.&lt;/li&gt;
&lt;li&gt;Finaly, the handler chosen at 6 answer the request. In this case,
    the xivo-aastra-2.6.0.2019 plugin will return the content of its
    var/tftpboot/aastra.cfg file.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, you might be wondering how this work when an unknown device make a
request to the provisioning server. By default, at step 4, if no device
can be found in the database, a new one is added.&lt;/p&gt;
&lt;p&gt;Then, at step 5, if a device has no plugin associated to it, an
automatic device association process occurs. Also at this step, a device
with no config associated to it can have a default config associated to
it. So, at the end of step 5, we then have a device with a default
config and an associated plugin although the device was not known from
the provisioning server when the request was received.&lt;/p&gt;
&lt;p&gt;So this is what conclude our brief introduction to the plugin model of
the new provisioning server. If you are interested into digging into the
details, you might want to start by looking at the
provd/devices/ident.py python source file (this make me thing I should
rename this file) and the various *.py.conf.* configuration file.&lt;/p&gt;
&lt;p&gt;Note that to keep this text at the introduction level, some things
stated here have been slightly simplified and are not 100% exact.&lt;/p&gt;
&lt;/p&gt;</summary><category term="xivo 1.2"></category><category term="provisioning"></category></entry><entry><title>XiVO 1.2 -*- Queues Diversions -*-</title><link href="http://blog.xivo.io/xivo-12-queues-diversions-.html" rel="alternate"></link><updated>2011-04-08T09:08:00-04:00</updated><author><name>gbour</name></author><id>tag:blog.xivo.io,2011-04-08:xivo-12-queues-diversions-.html</id><summary type="html">&lt;p&gt;&lt;ins&gt;Asterisk queues&lt;/ins&gt; have limited possibilities of
interactions.The only way to know how a call was processed and decide
what to do next is falling back on &lt;strong&gt;\${QUEUESTATUS}&lt;/strong&gt; when the call
exits the queue.  &lt;/p&gt;
&lt;p&gt;If something goes wrong, \${QUEUESTATUS} is set to one of the following
values: &lt;em&gt;TIMEOUT&lt;/em&gt;, &lt;em&gt;FULL&lt;/em&gt;, &lt;em&gt;JOINEMPTY&lt;/em&gt;, &lt;em&gt;LEAVEEMPTY&lt;/em&gt;, &lt;em&gt;JOINUNAVAIL&lt;/em&gt; and
&lt;em&gt;LEAVEUNAVAIL&lt;/em&gt;. &lt;ins&gt;In XiVO, it fits to queues &lt;strong&gt;No answer&lt;/strong&gt; tab.&lt;/ins&gt;&lt;/p&gt;
&lt;h2&gt;Queue diversions&lt;/h2&gt;
&lt;p&gt;But in XiVO 1.2 we add a new functionality called &lt;strong&gt;diversions&lt;/strong&gt;&lt;br /&gt;
Diversions are preconditions tested &lt;em&gt;before&lt;/em&gt; a call enter into the
queue. If one precondition &lt;strong&gt;matches&lt;/strong&gt;, the incoming call is not sent
into the queue, but rerouted to the destination associated with the
condition. This allows a finer-grained control on how calls are accepted
or not into a queue  &lt;/p&gt;
&lt;p&gt;Currently, we have defined 4 preconditions. They are evaluated in order,
one after another; the first to be validated is triggering call
rerouting to the associated destination.Here they are:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;CTI status presence&lt;/em&gt;.&lt;br /&gt;
calls are diverted if some of queue agents have required statuses.I.e,
if we have more than 50 agents with *inline* status, new incoming
calls are transfered to our *indian* call center&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="/public/queue-diversions/queue-diversion-cti-presences.png" title="queue-diversion-cti-presences.png"&gt;&lt;img alt="queue-diversion-cti-presences.png" src="/public/queue-diversions/.queue-diversion-cti-presences_m.jpg" title="queue-diversion-cti-presences.png, avr. 2011" /&gt;&lt;/a&gt;&lt;br /&gt;
2. &lt;em&gt;CTI status absence&lt;/em&gt;.&lt;br /&gt;
On the contrary, we may want to divert calls when no agents have a
required status.&lt;br /&gt;
I.e, if less than 5 agents with status *ready to hold* are logged in
the queue, we considered it to be closed, and redirect calls to a
voicemail&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/queue-diversions/queue-diversion-cti-nonpresences.png" title="queue-diversion-cti-nonpresences.png"&gt;&lt;img alt="queue-diversion-cti-nonpresences.png" src="/public/queue-diversions/.queue-diversion-cti-nonpresences_m.jpg" title="queue-diversion-cti-nonpresences.png, avr. 2011" /&gt;&lt;/a&gt;&lt;br /&gt;
3. &lt;em&gt;Estimated waiting time&lt;/em&gt;.&lt;br /&gt;
When the estimated wait time is exceeding a threshold value, we do not
want new calls to enter into the queue (callers do not like to wait!),
It is then possible to redirect them to another destination.&lt;br /&gt;
I.e if the wait time is higher than 5 minutes, redirect incalls to an
IVR&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/queue-diversions/queue-diversion-waittime.png" title="queue-diversion-waittime.png"&gt;&lt;img alt="queue-diversion-waittime.png" src="/public/queue-diversions/.queue-diversion-waittime_m.jpg" title="queue-diversion-waittime.png, avr. 2011" /&gt;&lt;/a&gt;&lt;br /&gt;
4. &lt;em&gt;Waiting calls/Available agents&lt;/em&gt; ratio.&lt;br /&gt;
If there are more calls waiting in the queue that available agents can
handle in a relative short delay, new calls will only increase
congestion. With this diversion, you can reroute incoming calls when
this situation arises.I.e, if there is less than 1 agent for 2 waiting
calls, hangup!&lt;/p&gt;
&lt;p&gt;&lt;a href="/public/queue-diversions/queue-diversion-ratio.png" title="queue-diversion-ratio.png"&gt;&lt;img alt="queue-diversion-ratio.png" src="/public/queue-diversions/.queue-diversion-ratio_m.jpg" title="queue-diversion-ratio.png, avr. 2011" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE: the ratio is a percent&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A value of 100 means there is 1 agent for 1 call&lt;/li&gt;
&lt;li&gt;A value of 50 means a call can be handled by 2 agents&lt;/li&gt;
&lt;li&gt;A value of 200 means there is 1 agent for 2 calls&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary><category term="xivo 1.2"></category><category term="web-interface"></category><category term="skaro"></category><category term="queues"></category><category term="diversion"></category></entry><entry><title>packaging infrastructure for XiVO</title><link href="http://blog.xivo.io/packaging-infrastructure-for-xivo.html" rel="alternate"></link><updated>2011-04-04T10:51:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-04-04:packaging-infrastructure-for-xivo.html</id><summary type="html">&lt;h4&gt;Trying out packaging-farm&lt;/h4&gt;
&lt;p&gt;Nicolas Hicher and Loic Dachary worked together on building the skaro
repository available at:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://xivo.dachary.org/packaging-farm/skaro/gnulinux/debian&lt;/span&gt; &lt;span class="kp"&gt;skaro-squeeze&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;http://xivo.dachary.org/packaging-farm/skaro/gnulinux/debian&lt;/span&gt; &lt;span class="kp"&gt;skaro-squeeze&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The goal was to demonstrate the use of the packaging-farm and discover
show stoppers. A few documentation shortcomings led to modifications of
the manual page for packaging-farm. A problem with the handling of the
dependencies was identified and fixed. The &lt;a href="http://packaging-farm.dachary.org/downloads/"&gt;1.2.36
release&lt;/a&gt; was published
with the corresponding changes.Nicolas Hicher feels confortable to give
a try to the packaging-farm. That will help uncover real world usage
issues.&lt;/p&gt;
&lt;h4&gt;VM host installation&lt;/h4&gt;
&lt;p&gt;A hardware (500GB disk, 8GB RAM, Intel(R) Xeon(R) CPU X3430 @ 2.40GHz)
was installed at 66.254.41.119 to be dedicated to XiVO packaging. It was
configured to host kvm based virtual machines using
&lt;a href="http://code.google.com/p/ganeti/"&gt;ganeti&lt;/a&gt;.To better track the changes,
a git repository was created in /etc and used to archive the
configuration changes described below.&lt;/p&gt;
&lt;h3&gt;LVM and DRBD&lt;/h3&gt;
&lt;p&gt;In squeeze all the software required to run ganeti2 are standard. A year
ago it was significantly more difficult as it required the compilation
of the DRBD from sources, among other things.The second partition of the
disk was set for LVM:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@host01:/srv/ganeti# pvs
  PV         VG   Fmt  Attr PSize   PFree
  /dev/sda2  all  lvm2 a-   442.38g 332.38g
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and that was bound to the all volume group:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@host01:/srv/ganeti# vgs
  VG   #PV #LV #SN Attr   VSize   VFree
  all    1   3   0 wz--n- 442.38g 332.38g
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The default DRBD configuration was removed so that ganeti can handle it
on its own. It is not used at the moment but will come handy when
another hardware is added.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mv /etc/drbd.conf /etc/drbd.conf.old
touch /etc/drbd.conf
/etc/init.d/drbd reload
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Network&lt;/h3&gt;
&lt;p&gt;A bridge and a fake lo:1 local interface were created in
/etc/network/interfaces:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;auto lo:1
iface lo:1 inet static
    address 10.10.0.10
    netmask 255.255.255.255
    up ip route add blackhole 10.0.0.0/8

auto br0
iface br0 inet static
        address 10.10.0.254
        netmask 255.255.255.255
        bridge_ports none
        bridge_stp off
    bridge_maxwait 5
        up ip route add 10.10.0.254 dev br0
        up ip route add 10.10.60.0/24 dev br0
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;BIND and DHCP&lt;/h3&gt;
&lt;p&gt;Ganeti hosts and virtual machines names are DNS entries. It would be
possible to use a publicDNS to create them. A local DNS configuration is
created locally instead, toreduce the propagation delays, ensure it can
always be reached and isolate the maintainanceof the name space into a
private network. The top level domain farm was createdand divided into
host??.farm ( bound to 10.10.59.0/24 ) for all the ganeti hostsand
vm.farm ( bound to 10.10.60.0/24 ) for all the virtual machines.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/bind/named.conf.options&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Do not listen or answer on public IPs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;allow-recursion { 127.0.0.1; 10.0.0.0/8; };
listen-on { 127.0.0.1; 10.10.0.254; };
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;/etc/bind/named.conf.local&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;zone &amp;quot;10.10.in-addr.arpa&amp;quot; {
    type master;
    file &amp;quot;/etc/bind/db.10.10&amp;quot;;
};

zone &amp;quot;farm&amp;quot; {
        type master;
        file &amp;quot;/etc/bind/db.farm&amp;quot;;
};
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;/etc/bind/db.10.10&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;zone&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;
&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;BIND&lt;/span&gt; &lt;span class="nt"&gt;reverse&lt;/span&gt; &lt;span class="nt"&gt;data&lt;/span&gt; &lt;span class="nt"&gt;file&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;broadcast&lt;/span&gt; &lt;span class="nt"&gt;zone&lt;/span&gt;
&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;TTL&lt;/span&gt;    &lt;span class="nt"&gt;604800&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;       &lt;span class="nt"&gt;IN&lt;/span&gt;      &lt;span class="nt"&gt;SOA&lt;/span&gt;     &lt;span class="nt"&gt;localhost&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;root&lt;/span&gt;&lt;span class="nc"&gt;.localhost&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nt"&gt;2011031200&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;serial&lt;/span&gt;
                         &lt;span class="nt"&gt;604800&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Refresh&lt;/span&gt;
                          &lt;span class="nt"&gt;86400&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Retry&lt;/span&gt;
                        &lt;span class="nt"&gt;2419200&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Expire&lt;/span&gt;
                         &lt;span class="nt"&gt;604800&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Negative&lt;/span&gt; &lt;span class="nt"&gt;Cache&lt;/span&gt; &lt;span class="nt"&gt;TTL&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;       &lt;span class="nt"&gt;IN&lt;/span&gt;      &lt;span class="nt"&gt;NS&lt;/span&gt;      &lt;span class="nt"&gt;localhost&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;;;&lt;/span&gt;
&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;perl&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;print if(s/(\S+)\s+IN\s+A\s+10\.10\.(\d+)\.(\d+)/\3.\2\tIN\tPTR\t\1.farm./)&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nt"&gt;db&lt;/span&gt;&lt;span class="nc"&gt;.farm&lt;/span&gt;
&lt;span class="o"&gt;;;&lt;/span&gt;
&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.60&lt;/span&gt;    &lt;span class="nt"&gt;IN&lt;/span&gt;      &lt;span class="nt"&gt;PTR&lt;/span&gt;     &lt;span class="nt"&gt;dev&lt;/span&gt;&lt;span class="nc"&gt;.dachary.vm.farm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="nc"&gt;.60&lt;/span&gt;    &lt;span class="nt"&gt;IN&lt;/span&gt;      &lt;span class="nt"&gt;PTR&lt;/span&gt;     &lt;span class="nt"&gt;skaro&lt;/span&gt;&lt;span class="nc"&gt;.xivo.vm.farm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;/etc/bind/db.farm&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;zone&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;
&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;TTL&lt;/span&gt; &lt;span class="nt"&gt;1h&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;default&lt;/span&gt; &lt;span class="nt"&gt;Time-to-Live&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;defines&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;duration&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;record&lt;/span&gt; &lt;span class="nt"&gt;may&lt;/span&gt; &lt;span class="nt"&gt;be&lt;/span&gt; &lt;span class="nt"&gt;cached&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;24h&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;ORIGIN&lt;/span&gt; &lt;span class="nt"&gt;farm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;                       &lt;span class="nt"&gt;IN&lt;/span&gt;      &lt;span class="nt"&gt;SOA&lt;/span&gt;             &lt;span class="nt"&gt;ns&lt;/span&gt; &lt;span class="nt"&gt;hostmaster&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
                        &lt;span class="nt"&gt;2011031200&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;serial&lt;/span&gt;
                                &lt;span class="nt"&gt;1h&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;refresh&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;time&lt;/span&gt; &lt;span class="nt"&gt;when&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;slave&lt;/span&gt; &lt;span class="nt"&gt;will&lt;/span&gt; &lt;span class="nt"&gt;try&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;refresh&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;zone&lt;/span&gt; &lt;span class="nt"&gt;from&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;master&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;8h&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                                &lt;span class="nt"&gt;30m&lt;/span&gt;             &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;update&lt;/span&gt; &lt;span class="nt"&gt;retry&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;time&lt;/span&gt; &lt;span class="nt"&gt;between&lt;/span&gt; &lt;span class="nt"&gt;retries&lt;/span&gt; &lt;span class="nt"&gt;if&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;slave&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;secondary&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;2h&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                                                &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;fails&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;contact&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;master&lt;/span&gt; &lt;span class="nt"&gt;when&lt;/span&gt; &lt;span class="nt"&gt;refresh&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;above&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;has&lt;/span&gt; &lt;span class="nt"&gt;expired&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
                                &lt;span class="nt"&gt;2w&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;expiry&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;time&lt;/span&gt; &lt;span class="nt"&gt;slave&lt;/span&gt; &lt;span class="nt"&gt;will&lt;/span&gt; &lt;span class="nt"&gt;continue&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;supply&lt;/span&gt; &lt;span class="nt"&gt;authoritative&lt;/span&gt; &lt;span class="nt"&gt;data&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;zone&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1w&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                                                &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;after&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;master&lt;/span&gt; &lt;span class="nt"&gt;died&lt;/span&gt;
                                &lt;span class="nt"&gt;30m&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;            &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;minimum&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;time&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;NAME&lt;/span&gt; &lt;span class="nt"&gt;ERROR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;NXDOMAIN&lt;/span&gt; &lt;span class="nt"&gt;record&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;cached&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;24h&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

                &lt;span class="nt"&gt;IN&lt;/span&gt;      &lt;span class="nt"&gt;NS&lt;/span&gt;      &lt;span class="nt"&gt;ns&lt;/span&gt;

&lt;span class="nt"&gt;ns&lt;/span&gt;              &lt;span class="nt"&gt;IN&lt;/span&gt;      &lt;span class="nt"&gt;A&lt;/span&gt;       &lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="nc"&gt;.10.0.254&lt;/span&gt;

&lt;span class="nt"&gt;gnt-cluster&lt;/span&gt;     &lt;span class="nt"&gt;IN&lt;/span&gt;      &lt;span class="nt"&gt;A&lt;/span&gt;       &lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="nc"&gt;.10.59.1&lt;/span&gt;
&lt;span class="nt"&gt;host01&lt;/span&gt;          &lt;span class="nt"&gt;IN&lt;/span&gt;      &lt;span class="nt"&gt;A&lt;/span&gt;       &lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="nc"&gt;.10.59.10&lt;/span&gt;

&lt;span class="nt"&gt;dev&lt;/span&gt;&lt;span class="nc"&gt;.dachary.vm&lt;/span&gt;  &lt;span class="nt"&gt;IN&lt;/span&gt;      &lt;span class="nt"&gt;A&lt;/span&gt;       &lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="nc"&gt;.10.60.1&lt;/span&gt;
&lt;span class="nt"&gt;skaro&lt;/span&gt;&lt;span class="nc"&gt;.xivo.vm&lt;/span&gt;   &lt;span class="nt"&gt;IN&lt;/span&gt;      &lt;span class="nt"&gt;A&lt;/span&gt;       &lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="nc"&gt;.10.60.2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A DHCP server is setup for each VM to use.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/default/isc-dhcp-server&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;INTERFACES=&amp;quot;br0&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;/etc/dhcp/dhcpd.conf&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A MAC address is generated with the following oneliner:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;MACADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;52:54:$(dd if=/dev/urandom count=1 2&amp;gt;/dev/null | md5sum | sed &amp;#39;s/^\(..\)\(..\)\(..\)\(..\).*$/\1:\2:\3:\4/&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;MACADDR&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and used to define the entries&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;group&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;farm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="n"&gt;routers&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;254&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;254&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;subnet&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;netmask&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dachary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;hardware&lt;/span&gt; &lt;span class="n"&gt;ethernet&lt;/span&gt; &lt;span class="m"&gt;52&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;54&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;bf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;d4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ef&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dachary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="n"&gt;subnet&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;host&lt;/span&gt; &lt;span class="nt"&gt;skaro&lt;/span&gt;&lt;span class="nc"&gt;.xivo.vm.farm&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;hardware&lt;/span&gt; &lt;span class="n"&gt;ethernet&lt;/span&gt; &lt;span class="m"&gt;52&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;54&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;fb&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;77&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;82&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="n"&gt;skaro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="n"&gt;subnet&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Cluster and instance creation&lt;/h3&gt;
&lt;p&gt;The hostname of the machine is host01.farm. When creating a cluster, the
hostname is used to create the first node of the cluster and make it the
master. Its IP set in /etc/hosts to 10.10.59.10. It is permanently set
on eth0 in the /etc/network/interface as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;up ip addr add 10.10.59.10/32 broadcast 10.10.59.255 dev eth0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The prerequisite to run gnt-cluster init were met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;host01.farm is not 127.0.0.1&lt;/li&gt;
&lt;li&gt;gnt-cluster.host.farm IP is not bound to any interface&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The cluster was created with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gnt-cluster init --no-etc-hosts --enabled-hypervisors=kvm --nic-parameters link=br0 --master-netdev br0 --vg-name all gnt-cluster.farm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After downloading the installation CD of Debian GNU/Linux squeeze, the
skaro.xivo.vm.farm instance was created:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gnt-instance add -d -t plain -s 30G -B memory=512M,vcpus=1 -H kvm:boot_order=cdrom,cdrom_image_path=/srv/ganeti/debian-6.0.1a-amd64-CD-1.iso,vnc_bind_address=0.0.0.0 -n host01.farm -o debootstrap+default --net 0:mac=52:54:fb:77:1e:82 skaro.xivo.vm.farm
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Copying the development VM&lt;/h3&gt;
&lt;p&gt;Instead of proceeding with a regular installation, a copy of the VM at
http://xivo.dachary.org/ was made. It was stored in a 13GB bzip2 file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@host01:/srv/ganeti# ls -lh
-rw-r--r-- 1 root root  13G Mar 31 15:39 xivo.dachary.vm.gnt.bz2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The newly created instance was shutdown&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gnt-instance shutdown --timeout=1 skaro.xivo.vm.farm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The location of its disk retrieved:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@host01:/srv/ganeti# gnt-instance info skaro.xivo.vm.farm | grep /dev/all
      on primary:  /dev/all/97500dbf-ca9e-49b8-a4c9-4d96e5152916.disk0 (254:2)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the backup unpacked into it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bunzip2 &amp;lt; xivo.dachary.vm.gnt.bz2 &amp;gt; /dev/all/97500dbf-ca9e-49b8-a4c9-4d96e5152916.disk0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It ended with an error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;bunzip2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;O&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bailing&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;Possible&lt;/span&gt; &lt;span class="n"&gt;reason&lt;/span&gt; &lt;span class="n"&gt;follows&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;bunzip2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;
        &lt;span class="n"&gt;Input&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which was ignored. To make sure the restoration was sane, the partition
was checked:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@montreal:/srv/ganeti# kpartx -av /dev/all/97500dbf-ca9e-49b8-a4c9-4d96e5152916.disk0
add map all-97500dbf--ca9e--49b8--a4c9--4d96e5152916.disk0p1 (254:3): 0 61865984 linear /dev/all/97500dbf-ca9e-49b8-a4c9-4d96e5152916.disk0 2048
add map all-97500dbf--ca9e--49b8--a4c9--4d96e5152916.disk0p2 (254:4): 0 1046528 linear /dev/all/97500dbf-ca9e-49b8-a4c9-4d96e5152916.disk0 61868032
root@montreal:/srv/ganeti# fsck -f /dev/mapper/all-97500dbf--ca9e--49b8--a4c9--4d96e5152916.disk0p1
fsck from util-linux-ng 2.17.2
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/mapper/all-97500dbf--ca9e--49b8--a4c9--4d96e5152916.disk0p1: 260424/1925760 files (3.8% non-contiguous), 4826992/7733248 blocks
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;firewall&lt;/h4&gt;
&lt;p&gt;A &lt;a href="http://shorewall.net/"&gt;shorewall&lt;/a&gt; based firewall was configured based
on the two interface example found at
&lt;strong&gt;/usr/share/doc/shorewall/examples/two-interfaces/&lt;/strong&gt; and replacing the
eth1 interface with br0. The idea is that the bridge contains virtual
machines that are treated as if they were machines in the LAN for which
this example was designed.&lt;/p&gt;
&lt;h4&gt;reverse proxy&lt;/h4&gt;
&lt;p&gt;A &lt;a href="http://nginx.org/"&gt;nginx&lt;/a&gt; based reverse proxy was installed on the to
demultiplex the incoming http connections. The first configuration was
added in /etc/nginx/sites-available/skaro.dachary.org to get to the
virtual machine that will eventually replace http://xivo.dachary.org/&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;skaro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dachary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;access_log&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;skaro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dachary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;proxy_pass&lt;/span&gt;   &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;skaro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;farm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the HTTP port was accepted in the firewall in /etc/shorewall/rules&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;DNAT           net             loc:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;VM_SKARO_XIVO&lt;/span&gt;&lt;span class="x"&gt;:22 tcp             22002           -       &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;IP_FAILOVER&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Sourcing the components and scripting the components parts e-shops (digikey, ...)</title><link href="http://blog.xivo.io/sourcing-the-components-and-scripting-the-components-parts-e-shops-digikey.html" rel="alternate"></link><updated>2011-03-30T17:19:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-03-30:sourcing-the-components-and-scripting-the-components-parts-e-shops-digikey.html</id><summary type="html">&lt;p&gt;As I am constantly searching for informations on the different parts
(i.e. components on the PCB), &lt;strong&gt;i have scripted www.digikey.com&lt;/strong&gt; (the
HTML form is quite stable) in python in order to automatize the search
on the website.&lt;/p&gt;
&lt;p&gt;The script can be found here :
&lt;a href="http://carcelle.fu8.com/digikey.py" title="digikey.py"&gt;digikey.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This script can be used like : python digikey.py BC847BVNDITR-ND
(BC847BVNDITR-ND is a part reference on the digikey website).&lt;/p&gt;
&lt;p&gt;I am looking for similar that can be used/optimized for the other e-shop
such as Farnell, Mouser, Radiospares in order to have a common script
tool able to search all these e-shops in one and give a report on the
availability for parts in a db run daily or weekly.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>building XiVO skaro from sources</title><link href="http://blog.xivo.io/building-xivo-skaro-from-sources.html" rel="alternate"></link><updated>2011-03-29T14:45:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-03-29:building-xivo-skaro-from-sources.html</id><summary type="html">&lt;h4&gt;packaging-farm documentation&lt;/h4&gt;
&lt;p&gt;The XiVO package submission &lt;a href="http://blog.xivo.fr/index.php?post/2011/03/22/XiVO-sources-conventions-implemented-and-documented"&gt;was
documented&lt;/a&gt;
but the packaging-farm command line that is used to build the submitted
packages was not. An extensive manual page was written, focusing on the
developer and the packager point of view. It does not go into the
details of the packaging-farm implementation but should be enough for
most purposes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;packaging-farm(1)&lt;/span&gt;                        &lt;span class="err"&gt;packaging-farm(1)&lt;/span&gt;



&lt;span class="err"&gt;NAME&lt;/span&gt;
       &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;-&lt;/span&gt; &lt;span class="err"&gt;build&lt;/span&gt; &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;from&lt;/span&gt; &lt;span class="err"&gt;sources&lt;/span&gt; &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;multiple&lt;/span&gt; &lt;span class="err"&gt;distributions&lt;/span&gt;


&lt;span class="err"&gt;SYNOPSIS&lt;/span&gt;
       &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;SUBMIT=xivo&lt;/span&gt; &lt;span class="err"&gt;[OPTIONS]&lt;/span&gt; &lt;span class="err"&gt;submit&lt;/span&gt;

       &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;SUBMIT=pokersource&lt;/span&gt; &lt;span class="err"&gt;[OPTIONS]&lt;/span&gt; &lt;span class="err"&gt;submit&lt;/span&gt;

       &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;generate&lt;/span&gt;

       &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;[OPTIONS]&lt;/span&gt; &lt;span class="err"&gt;package_name&lt;/span&gt;


&lt;span class="err"&gt;DESCRIPTION&lt;/span&gt;
       &lt;span class="err"&gt;The&lt;/span&gt;  &lt;span class="err"&gt;first&lt;/span&gt;  &lt;span class="err"&gt;forms&lt;/span&gt;  &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;SUBMIT=...&lt;/span&gt; &lt;span class="err"&gt;submit&lt;/span&gt; &lt;span class="err"&gt;creates&lt;/span&gt; &lt;span class="err"&gt;job&lt;/span&gt; &lt;span class="err"&gt;request&lt;/span&gt;
       &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;and&lt;/span&gt; &lt;span class="err"&gt;stores&lt;/span&gt; &lt;span class="err"&gt;it&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;/var/cache/packaging-farm/sources&lt;/span&gt;

       &lt;span class="err"&gt;For&lt;/span&gt; &lt;span class="err"&gt;instance&lt;/span&gt;

          &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;SUBMIT=xivo&lt;/span&gt; &lt;span class="err"&gt;DIRECTORY=asterisk&lt;/span&gt; &lt;span class="err"&gt;submit&lt;/span&gt;

       &lt;span class="err"&gt;will&lt;/span&gt;    &lt;span class="err"&gt;create&lt;/span&gt;    &lt;span class="err"&gt;a&lt;/span&gt;    &lt;span class="err"&gt;source&lt;/span&gt;    &lt;span class="err"&gt;package&lt;/span&gt;    &lt;span class="err"&gt;in&lt;/span&gt;    &lt;span class="err"&gt;/var/cache/packaging-&lt;/span&gt;
       &lt;span class="err"&gt;farm/sources/asterisk&lt;/span&gt;

       &lt;span class="err"&gt;The&lt;/span&gt;   &lt;span class="err"&gt;last&lt;/span&gt;   &lt;span class="err"&gt;form&lt;/span&gt;   &lt;span class="err"&gt;builds&lt;/span&gt;   &lt;span class="err"&gt;the&lt;/span&gt;   &lt;span class="err"&gt;package_name&lt;/span&gt;  &lt;span class="err"&gt;package&lt;/span&gt;  &lt;span class="err"&gt;as&lt;/span&gt;  &lt;span class="err"&gt;found&lt;/span&gt;  &lt;span class="err"&gt;in&lt;/span&gt;
       &lt;span class="err"&gt;/var/cache/packaging-farm/sources&lt;/span&gt;   &lt;span class="err"&gt;and&lt;/span&gt;   &lt;span class="err"&gt;stores&lt;/span&gt;    &lt;span class="err"&gt;the&lt;/span&gt;    &lt;span class="err"&gt;result&lt;/span&gt;    &lt;span class="err"&gt;in&lt;/span&gt;
       &lt;span class="err"&gt;/var/lib/packaging-farm&lt;/span&gt;  &lt;span class="err"&gt;as&lt;/span&gt;  &lt;span class="err"&gt;repositories&lt;/span&gt; &lt;span class="err"&gt;specific&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;each&lt;/span&gt; &lt;span class="err"&gt;distribution&lt;/span&gt;
       &lt;span class="err"&gt;that&lt;/span&gt; &lt;span class="err"&gt;can&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;browsed&lt;/span&gt; &lt;span class="err"&gt;at&lt;/span&gt; &lt;span class="err"&gt;http://localhost/packaging-farm/&lt;/span&gt;

       &lt;span class="err"&gt;For&lt;/span&gt; &lt;span class="err"&gt;instance&lt;/span&gt; &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;asterisk&lt;/span&gt; &lt;span class="err"&gt;would&lt;/span&gt;  &lt;span class="err"&gt;create&lt;/span&gt;  &lt;span class="err"&gt;a&lt;/span&gt;  &lt;span class="err"&gt;i386&lt;/span&gt;  &lt;span class="err"&gt;repository&lt;/span&gt;
       &lt;span class="err"&gt;that&lt;/span&gt; &lt;span class="err"&gt;can&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;added&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;/etc/apt/sources.list&lt;/span&gt; &lt;span class="err"&gt;file&lt;/span&gt; &lt;span class="err"&gt;as:&lt;/span&gt;

          &lt;span class="err"&gt;deb&lt;/span&gt; &lt;span class="err"&gt;http://localhost/packaging-farm/asterisk/gnulinux/debian/i386/squeeze/src&lt;/span&gt; &lt;span class="err"&gt;./&lt;/span&gt;
          &lt;span class="err"&gt;deb-src&lt;/span&gt; &lt;span class="err"&gt;http://localhost/packaging-farm/asterisk/gnulinux/debian/i386/squeeze/src&lt;/span&gt; &lt;span class="err"&gt;./&lt;/span&gt;

       &lt;span class="err"&gt;The&lt;/span&gt; &lt;span class="err"&gt;form&lt;/span&gt; &lt;span class="err"&gt;before&lt;/span&gt; &lt;span class="err"&gt;last&lt;/span&gt;

          &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;SUBMIT=xivo&lt;/span&gt; &lt;span class="err"&gt;DIRECTORY=asterisk&lt;/span&gt; &lt;span class="err"&gt;submit&lt;/span&gt;

       &lt;span class="err"&gt;recomputes&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;dependency&lt;/span&gt; &lt;span class="err"&gt;graph&lt;/span&gt; &lt;span class="err"&gt;at&lt;/span&gt; &lt;span class="err"&gt;/var/cache/packaging-farm/depends.mk&lt;/span&gt;
       &lt;span class="err"&gt;by&lt;/span&gt; &lt;span class="err"&gt;scanning&lt;/span&gt; &lt;span class="err"&gt;/var/cache/packaging-farm/sources&lt;/span&gt; &lt;span class="err"&gt;and&lt;/span&gt; &lt;span class="err"&gt;creates&lt;/span&gt;  &lt;span class="err"&gt;the&lt;/span&gt;  &lt;span class="err"&gt;default&lt;/span&gt;
       &lt;span class="err"&gt;Makefiles&lt;/span&gt; &lt;span class="err"&gt;if&lt;/span&gt; &lt;span class="err"&gt;needed&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;/var/cache/packaging-farm/build&lt;/span&gt;


&lt;span class="err"&gt;BUILD&lt;/span&gt; &lt;span class="err"&gt;FILES&lt;/span&gt;
       &lt;span class="err"&gt;The&lt;/span&gt;  &lt;span class="err"&gt;packaging&lt;/span&gt;  &lt;span class="err"&gt;farm&lt;/span&gt; &lt;span class="err"&gt;jobs&lt;/span&gt; &lt;span class="err"&gt;are&lt;/span&gt; &lt;span class="err"&gt;described&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;files&lt;/span&gt; &lt;span class="err"&gt;found&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;directory&lt;/span&gt;
       &lt;span class="err"&gt;/var/cache/packaging-farm/build&lt;/span&gt; &lt;span class="err"&gt;under&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;directory&lt;/span&gt; &lt;span class="err"&gt;named&lt;/span&gt; &lt;span class="err"&gt;after&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;pack-&lt;/span&gt;
       &lt;span class="err"&gt;age.&lt;/span&gt;  &lt;span class="err"&gt;It&lt;/span&gt;  &lt;span class="err"&gt;contains&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;Makefile&lt;/span&gt; &lt;span class="err"&gt;which&lt;/span&gt; &lt;span class="err"&gt;instructs&lt;/span&gt; &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;about&lt;/span&gt; &lt;span class="err"&gt;what&lt;/span&gt;
       &lt;span class="err"&gt;needs&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;done.&lt;/span&gt; &lt;span class="err"&gt;When&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;new&lt;/span&gt; &lt;span class="err"&gt;source&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;submitted&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;farm&lt;/span&gt; &lt;span class="err"&gt;with&lt;/span&gt; &lt;span class="err"&gt;pack-&lt;/span&gt;
       &lt;span class="err"&gt;aging-farm&lt;/span&gt;  &lt;span class="err"&gt;submit&lt;/span&gt;  &lt;span class="err"&gt;a&lt;/span&gt;  &lt;span class="err"&gt;default&lt;/span&gt; &lt;span class="err"&gt;Makefile&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;created&lt;/span&gt; &lt;span class="err"&gt;if&lt;/span&gt; &lt;span class="err"&gt;it&lt;/span&gt; &lt;span class="err"&gt;does&lt;/span&gt; &lt;span class="err"&gt;not&lt;/span&gt; &lt;span class="err"&gt;exist&lt;/span&gt;
       &lt;span class="err"&gt;yet.&lt;/span&gt;

       &lt;span class="err"&gt;For&lt;/span&gt;  &lt;span class="err"&gt;example,&lt;/span&gt;  &lt;span class="err"&gt;/var/cache/packaging-farm/build/asterisk/Makefile&lt;/span&gt;   &lt;span class="err"&gt;con-&lt;/span&gt;
       &lt;span class="err"&gt;tains:&lt;/span&gt;
          &lt;span class="err"&gt;PACKAGE=asterisk&lt;/span&gt;
          &lt;span class="err"&gt;LIBDIR&lt;/span&gt; &lt;span class="err"&gt;?=&lt;/span&gt; &lt;span class="err"&gt;/usr/lib/packaging-farm&lt;/span&gt;
          &lt;span class="err"&gt;include&lt;/span&gt; &lt;span class="err"&gt;/usr/lib/packaging-farm/Makefile&lt;/span&gt;

       &lt;span class="err"&gt;The&lt;/span&gt;  &lt;span class="err"&gt;following&lt;/span&gt; &lt;span class="err"&gt;variables&lt;/span&gt; &lt;span class="err"&gt;can&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;set&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;Makefile.&lt;/span&gt; &lt;span class="err"&gt;They&lt;/span&gt; &lt;span class="err"&gt;are&lt;/span&gt; &lt;span class="err"&gt;common&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt;
       &lt;span class="err"&gt;all&lt;/span&gt; &lt;span class="err"&gt;packages.&lt;/span&gt;


       &lt;span class="err"&gt;ROLE&lt;/span&gt;   &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;default&lt;/span&gt; &lt;span class="err"&gt;value&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;and&lt;/span&gt; &lt;span class="err"&gt;it&lt;/span&gt; &lt;span class="err"&gt;can&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;set&lt;/span&gt;  &lt;span class="err"&gt;to&lt;/span&gt;  &lt;span class="err"&gt;meta-package&lt;/span&gt;
          &lt;span class="err"&gt;(see&lt;/span&gt;  &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;META&lt;/span&gt; &lt;span class="err"&gt;PACKAGES&lt;/span&gt; &lt;span class="err"&gt;section&lt;/span&gt; &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;more&lt;/span&gt; &lt;span class="err"&gt;information)&lt;/span&gt; &lt;span class="err"&gt;or&lt;/span&gt; &lt;span class="err"&gt;kernel-&lt;/span&gt;
          &lt;span class="err"&gt;module&lt;/span&gt; &lt;span class="err"&gt;(see&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;KERNEL&lt;/span&gt; &lt;span class="err"&gt;MODULE&lt;/span&gt; &lt;span class="err"&gt;section&lt;/span&gt; &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;more&lt;/span&gt; &lt;span class="err"&gt;information).&lt;/span&gt;


       &lt;span class="err"&gt;PACKAGE&lt;/span&gt;
          &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;name&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;meta&lt;/span&gt; &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;and&lt;/span&gt; &lt;span class="err"&gt;it&lt;/span&gt; &lt;span class="err"&gt;must&lt;/span&gt; &lt;span class="err"&gt;match&lt;/span&gt;  &lt;span class="err"&gt;the&lt;/span&gt;  &lt;span class="err"&gt;name&lt;/span&gt;  &lt;span class="err"&gt;of&lt;/span&gt;
          &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;directory&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;which&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;Makefile&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;found.&lt;/span&gt;


       &lt;span class="err"&gt;DISTRIBUTIONS&lt;/span&gt;
          &lt;span class="err"&gt;is&lt;/span&gt;  &lt;span class="err"&gt;the&lt;/span&gt;  &lt;span class="err"&gt;white&lt;/span&gt; &lt;span class="err"&gt;space&lt;/span&gt; &lt;span class="err"&gt;separated&lt;/span&gt; &lt;span class="err"&gt;list&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;distributions&lt;/span&gt; &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;which&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt;
          &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;must&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;built.&lt;/span&gt;  &lt;span class="err"&gt;The&lt;/span&gt; &lt;span class="err"&gt;default&lt;/span&gt; &lt;span class="err"&gt;value&lt;/span&gt; &lt;span class="err"&gt;can&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;displayed&lt;/span&gt;  &lt;span class="err"&gt;with&lt;/span&gt;
          &lt;span class="err"&gt;packaging-farm&lt;/span&gt;  &lt;span class="err"&gt;--var&lt;/span&gt;  &lt;span class="err"&gt;DISTRIBUTIONS&lt;/span&gt;  &lt;span class="err"&gt;and&lt;/span&gt;  &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;list&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;supported&lt;/span&gt;
          &lt;span class="err"&gt;distributions&lt;/span&gt; &lt;span class="err"&gt;can&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;displayed&lt;/span&gt; &lt;span class="err"&gt;with&lt;/span&gt;  &lt;span class="err"&gt;packaging-farm&lt;/span&gt;  &lt;span class="err"&gt;--var&lt;/span&gt;  &lt;span class="err"&gt;SUP-&lt;/span&gt;
          &lt;span class="err"&gt;PORTED_DISTRIBUTIONS&lt;/span&gt;


       &lt;span class="err"&gt;ARCHITECTURES&lt;/span&gt;
          &lt;span class="err"&gt;is&lt;/span&gt;  &lt;span class="err"&gt;the&lt;/span&gt;  &lt;span class="err"&gt;white&lt;/span&gt; &lt;span class="err"&gt;space&lt;/span&gt; &lt;span class="err"&gt;separated&lt;/span&gt; &lt;span class="err"&gt;list&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;architectures&lt;/span&gt; &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;which&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt;
          &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;must&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;built.&lt;/span&gt;  &lt;span class="err"&gt;The&lt;/span&gt; &lt;span class="err"&gt;default&lt;/span&gt; &lt;span class="err"&gt;value&lt;/span&gt; &lt;span class="err"&gt;can&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;displayed&lt;/span&gt;  &lt;span class="err"&gt;with&lt;/span&gt;
          &lt;span class="err"&gt;packaging-farm&lt;/span&gt;  &lt;span class="err"&gt;--var&lt;/span&gt;  &lt;span class="err"&gt;ARCHITECTURES&lt;/span&gt;  &lt;span class="err"&gt;and&lt;/span&gt;  &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;list&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;supported&lt;/span&gt;
          &lt;span class="err"&gt;architectures&lt;/span&gt; &lt;span class="err"&gt;can&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;displayed&lt;/span&gt; &lt;span class="err"&gt;with&lt;/span&gt;  &lt;span class="err"&gt;packaging-farm&lt;/span&gt;  &lt;span class="err"&gt;--var&lt;/span&gt;  &lt;span class="err"&gt;SUP-&lt;/span&gt;
          &lt;span class="err"&gt;PORTED_ARCHITECTURES&lt;/span&gt;


&lt;span class="err"&gt;META&lt;/span&gt; &lt;span class="err"&gt;PACKAGES&lt;/span&gt;
       &lt;span class="err"&gt;A&lt;/span&gt;  &lt;span class="err"&gt;meta&lt;/span&gt;  &lt;span class="err"&gt;package&lt;/span&gt;  &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;aggregation&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;packages&lt;/span&gt; &lt;span class="err"&gt;into&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;repository&lt;/span&gt; &lt;span class="err"&gt;that&lt;/span&gt;
       &lt;span class="err"&gt;has&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;same&lt;/span&gt; &lt;span class="err"&gt;format&lt;/span&gt; &lt;span class="err"&gt;as&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;official&lt;/span&gt; &lt;span class="err"&gt;repositories.&lt;/span&gt; &lt;span class="err"&gt;The&lt;/span&gt; &lt;span class="err"&gt;definition&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt;
       &lt;span class="err"&gt;meta&lt;/span&gt; &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;found&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;/var/cache/packaging-farm/build&lt;/span&gt;

       &lt;span class="err"&gt;For&lt;/span&gt;  &lt;span class="err"&gt;instance,&lt;/span&gt;  &lt;span class="err"&gt;the&lt;/span&gt;  &lt;span class="err"&gt;skaro&lt;/span&gt;  &lt;span class="err"&gt;meta&lt;/span&gt; &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;can&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;defined&lt;/span&gt; &lt;span class="err"&gt;by&lt;/span&gt; &lt;span class="err"&gt;creating&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt;
       &lt;span class="err"&gt;/var/cache/packaging-farm/build/skaro/Makefile&lt;/span&gt; &lt;span class="err"&gt;with&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;following&lt;/span&gt;  &lt;span class="err"&gt;con-&lt;/span&gt;
       &lt;span class="err"&gt;tent:&lt;/span&gt;

          &lt;span class="err"&gt;PACKAGE=skaro&lt;/span&gt;
          &lt;span class="err"&gt;DISTRIBUTIONS=squeeze&lt;/span&gt;
          &lt;span class="err"&gt;COMPONENT=main&lt;/span&gt;
          &lt;span class="err"&gt;ARCHITECTURES=i386&lt;/span&gt; &lt;span class="err"&gt;x86_64&lt;/span&gt;
          &lt;span class="err"&gt;CHILD_PACKAGES&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;asterisk&lt;/span&gt; &lt;span class="err"&gt;dahdi-linux&lt;/span&gt;

          &lt;span class="err"&gt;ROLE&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;meta-package&lt;/span&gt;

          &lt;span class="err"&gt;LIBDIR&lt;/span&gt; &lt;span class="err"&gt;?=&lt;/span&gt; &lt;span class="err"&gt;/usr/lib/packaging-farm&lt;/span&gt;
          &lt;span class="err"&gt;include&lt;/span&gt; &lt;span class="err"&gt;${LIBDIR}/Makefile&lt;/span&gt;

       &lt;span class="err"&gt;and&lt;/span&gt;  &lt;span class="err"&gt;the&lt;/span&gt;  &lt;span class="err"&gt;resulting&lt;/span&gt;  &lt;span class="err"&gt;repository&lt;/span&gt;  &lt;span class="err"&gt;can&lt;/span&gt;  &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;added&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;/etc/apt/sources.list&lt;/span&gt;
       &lt;span class="err"&gt;with:&lt;/span&gt;

          &lt;span class="err"&gt;deb&lt;/span&gt; &lt;span class="err"&gt;http://localhost/packaging-farm/asterisk/gnulinux/debian&lt;/span&gt; &lt;span class="err"&gt;skaro-squeeze&lt;/span&gt; &lt;span class="err"&gt;main&lt;/span&gt;
          &lt;span class="err"&gt;deb-src&lt;/span&gt; &lt;span class="err"&gt;http://localhost/packaging-farm/asterisk/gnulinux/debian&lt;/span&gt; &lt;span class="err"&gt;skaro-squeeze&lt;/span&gt; &lt;span class="err"&gt;main&lt;/span&gt;


       &lt;span class="err"&gt;CHILD_PACKAGES&lt;/span&gt;
          &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;white&lt;/span&gt; &lt;span class="err"&gt;space&lt;/span&gt; &lt;span class="err"&gt;separated&lt;/span&gt; &lt;span class="err"&gt;list&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;packages&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;aggregated&lt;/span&gt; &lt;span class="err"&gt;into&lt;/span&gt;
          &lt;span class="err"&gt;the&lt;/span&gt;  &lt;span class="err"&gt;meta-package.&lt;/span&gt;  &lt;span class="err"&gt;The&lt;/span&gt;  &lt;span class="err"&gt;list&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;known&lt;/span&gt; &lt;span class="err"&gt;packages&lt;/span&gt; &lt;span class="err"&gt;can&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;displayed&lt;/span&gt;
          &lt;span class="err"&gt;with&lt;/span&gt; &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;--var&lt;/span&gt; &lt;span class="err"&gt;PACKAGES&lt;/span&gt;


       &lt;span class="err"&gt;COMPONENT&lt;/span&gt;
          &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;component,&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;Debian&lt;/span&gt; &lt;span class="err"&gt;GNU/Linux&lt;/span&gt; &lt;span class="err"&gt;sense,&lt;/span&gt; &lt;span class="err"&gt;provided&lt;/span&gt; &lt;span class="err"&gt;by&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt;
          &lt;span class="err"&gt;meta&lt;/span&gt; &lt;span class="err"&gt;package.&lt;/span&gt; &lt;span class="err"&gt;It&lt;/span&gt; &lt;span class="err"&gt;must&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;single&lt;/span&gt; &lt;span class="err"&gt;string.&lt;/span&gt;


&lt;span class="err"&gt;KERNEL&lt;/span&gt; &lt;span class="err"&gt;MODULES&lt;/span&gt;
       &lt;span class="err"&gt;Binary&lt;/span&gt;  &lt;span class="err"&gt;kernel&lt;/span&gt;  &lt;span class="err"&gt;modules&lt;/span&gt;  &lt;span class="err"&gt;are&lt;/span&gt;  &lt;span class="err"&gt;built&lt;/span&gt;  &lt;span class="err"&gt;from&lt;/span&gt; &lt;span class="err"&gt;kernel&lt;/span&gt; &lt;span class="err"&gt;module&lt;/span&gt; &lt;span class="err"&gt;source&lt;/span&gt; &lt;span class="err"&gt;packages&lt;/span&gt;
       &lt;span class="err"&gt;using&lt;/span&gt; &lt;span class="err"&gt;module-assistant(1).&lt;/span&gt;

       &lt;span class="err"&gt;For&lt;/span&gt; &lt;span class="err"&gt;instance&lt;/span&gt;  &lt;span class="err"&gt;/var/cache/packaging-farm/build/dahdi-linux-modules/Make-&lt;/span&gt;
       &lt;span class="err"&gt;file&lt;/span&gt; &lt;span class="err"&gt;contains:&lt;/span&gt;

          &lt;span class="err"&gt;ROLE=kernel-module&lt;/span&gt;
          &lt;span class="err"&gt;PACKAGE=dahdi-linux-modules&lt;/span&gt;
          &lt;span class="err"&gt;MODULE=dahdi-linux-source&lt;/span&gt;
          &lt;span class="err"&gt;DISTRIBUTIONS=squeeze&lt;/span&gt;
          &lt;span class="err"&gt;ARCHITECTURES=i386&lt;/span&gt; &lt;span class="err"&gt;x86_64&lt;/span&gt;
          &lt;span class="err"&gt;LIBDIR&lt;/span&gt; &lt;span class="err"&gt;?=&lt;/span&gt; &lt;span class="err"&gt;/usr/lib/packaging-farm&lt;/span&gt;
          &lt;span class="err"&gt;include&lt;/span&gt; &lt;span class="err"&gt;${LIBDIR}/Makefile&lt;/span&gt;


       &lt;span class="err"&gt;MODULE&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt;  &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;that&lt;/span&gt; &lt;span class="err"&gt;will&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;given&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;module-assistant(1)&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;create&lt;/span&gt;
          &lt;span class="err"&gt;binary&lt;/span&gt; &lt;span class="err"&gt;kernel&lt;/span&gt; &lt;span class="err"&gt;module&lt;/span&gt; &lt;span class="err"&gt;packages.&lt;/span&gt;


&lt;span class="err"&gt;DEPENDENCIES&lt;/span&gt;
       &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;needs&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;dependency&lt;/span&gt; &lt;span class="err"&gt;graph&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt;  &lt;span class="err"&gt;figure&lt;/span&gt;  &lt;span class="err"&gt;out&lt;/span&gt;  &lt;span class="err"&gt;which&lt;/span&gt;  &lt;span class="err"&gt;package&lt;/span&gt;
       &lt;span class="err"&gt;needs&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;built&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;order&lt;/span&gt; &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;others&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;succeed.&lt;/span&gt; &lt;span class="err"&gt;This&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;done&lt;/span&gt; &lt;span class="err"&gt;with&lt;/span&gt;

          &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;depends&lt;/span&gt;

       &lt;span class="err"&gt;and&lt;/span&gt;  &lt;span class="err"&gt;must&lt;/span&gt;  &lt;span class="err"&gt;be&lt;/span&gt;  &lt;span class="err"&gt;run&lt;/span&gt; &lt;span class="err"&gt;manually&lt;/span&gt; &lt;span class="err"&gt;when&lt;/span&gt; &lt;span class="err"&gt;modifying&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;meta&lt;/span&gt; &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;(see&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;META&lt;/span&gt;
       &lt;span class="err"&gt;PACKAGES&lt;/span&gt; &lt;span class="err"&gt;section).&lt;/span&gt; &lt;span class="err"&gt;It&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;run&lt;/span&gt; &lt;span class="err"&gt;as&lt;/span&gt; &lt;span class="err"&gt;part&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt;

          &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;submit&lt;/span&gt;

       &lt;span class="err"&gt;The&lt;/span&gt; &lt;span class="err"&gt;dependency&lt;/span&gt; &lt;span class="err"&gt;graph&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;output&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt;  &lt;span class="err"&gt;/var/cache/packaging-farm/depends.mk&lt;/span&gt;
       &lt;span class="err"&gt;and&lt;/span&gt;  &lt;span class="err"&gt;the&lt;/span&gt;  &lt;span class="err"&gt;dependency&lt;/span&gt;  &lt;span class="err"&gt;timestamps&lt;/span&gt; &lt;span class="err"&gt;that&lt;/span&gt; &lt;span class="err"&gt;remember&lt;/span&gt; &lt;span class="err"&gt;what&lt;/span&gt; &lt;span class="err"&gt;was&lt;/span&gt; &lt;span class="err"&gt;built&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt;
       &lt;span class="err"&gt;directory&lt;/span&gt;  &lt;span class="err"&gt;/var/cache/packaging-farm/depends&lt;/span&gt;  &lt;span class="err"&gt;For&lt;/span&gt;   &lt;span class="err"&gt;instance&lt;/span&gt;   &lt;span class="err"&gt;a&lt;/span&gt;   &lt;span class="err"&gt;file&lt;/span&gt;
       &lt;span class="err"&gt;/var/cache/packaging-farm/depends/asterisk&lt;/span&gt; &lt;span class="err"&gt;dated&lt;/span&gt; &lt;span class="err"&gt;march&lt;/span&gt; &lt;span class="err"&gt;28th,&lt;/span&gt; &lt;span class="err"&gt;2011&lt;/span&gt; &lt;span class="err"&gt;means&lt;/span&gt;
       &lt;span class="err"&gt;that&lt;/span&gt; &lt;span class="err"&gt;asterisk&lt;/span&gt; &lt;span class="err"&gt;was&lt;/span&gt; &lt;span class="err"&gt;successfully&lt;/span&gt; &lt;span class="err"&gt;built&lt;/span&gt; &lt;span class="err"&gt;on&lt;/span&gt; &lt;span class="err"&gt;that&lt;/span&gt; &lt;span class="err"&gt;date.&lt;/span&gt;


&lt;span class="err"&gt;DEBUGGING&lt;/span&gt;
       &lt;span class="err"&gt;The&lt;/span&gt; &lt;span class="err"&gt;output&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;extremely&lt;/span&gt; &lt;span class="err"&gt;verbose.&lt;/span&gt; &lt;span class="err"&gt;If&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;build&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;(say&lt;/span&gt;  &lt;span class="err"&gt;aster-&lt;/span&gt;
       &lt;span class="err"&gt;isk)&lt;/span&gt; &lt;span class="err"&gt;fails&lt;/span&gt; &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;given&lt;/span&gt; &lt;span class="err"&gt;distribution&lt;/span&gt; &lt;span class="err"&gt;(say&lt;/span&gt; &lt;span class="err"&gt;squeeze)&lt;/span&gt; &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;given&lt;/span&gt; &lt;span class="err"&gt;architec-&lt;/span&gt;
       &lt;span class="err"&gt;ture&lt;/span&gt; &lt;span class="err"&gt;(say&lt;/span&gt; &lt;span class="err"&gt;i386),&lt;/span&gt; &lt;span class="err"&gt;it&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;archived&lt;/span&gt; &lt;span class="err"&gt;at&lt;/span&gt; &lt;span class="err"&gt;/var/cache/packaging-farm/build/ask-&lt;/span&gt;
       &lt;span class="err"&gt;terisk/build/squeeze-i386.out&lt;/span&gt;

       &lt;span class="err"&gt;When&lt;/span&gt; &lt;span class="err"&gt;run&lt;/span&gt; &lt;span class="err"&gt;from&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;command&lt;/span&gt; &lt;span class="err"&gt;line,&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;output&lt;/span&gt; &lt;span class="err"&gt;from&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;BUILD&lt;/span&gt; &lt;span class="err"&gt;START&amp;#39;&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;BUILD&lt;/span&gt;
       &lt;span class="err"&gt;END&amp;#39;&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;displayed&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;case&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;failure&lt;/span&gt;  &lt;span class="err"&gt;and&lt;/span&gt;  &lt;span class="err"&gt;the&lt;/span&gt;  &lt;span class="err"&gt;relevant&lt;/span&gt;  &lt;span class="err"&gt;message&lt;/span&gt;  &lt;span class="err"&gt;is&lt;/span&gt;
       &lt;span class="err"&gt;likely&lt;/span&gt;  &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;last&lt;/span&gt; &lt;span class="err"&gt;few&lt;/span&gt; &lt;span class="err"&gt;lines.&lt;/span&gt; &lt;span class="err"&gt;The&lt;/span&gt; &lt;span class="err"&gt;error&lt;/span&gt; &lt;span class="err"&gt;handling&lt;/span&gt; &lt;span class="err"&gt;policy&lt;/span&gt; &lt;span class="err"&gt;through-&lt;/span&gt;
       &lt;span class="err"&gt;out&lt;/span&gt; &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;abort&lt;/span&gt; &lt;span class="err"&gt;as&lt;/span&gt; &lt;span class="err"&gt;soon&lt;/span&gt; &lt;span class="err"&gt;as&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;failure&lt;/span&gt; &lt;span class="err"&gt;occurs.&lt;/span&gt;

       &lt;span class="err"&gt;The&lt;/span&gt; &lt;span class="err"&gt;chroot&lt;/span&gt; &lt;span class="err"&gt;used&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;build&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;can&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;entered&lt;/span&gt; &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;further&lt;/span&gt;  &lt;span class="err"&gt;inves-&lt;/span&gt;
       &lt;span class="err"&gt;tigation&lt;/span&gt; &lt;span class="err"&gt;with&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;command:&lt;/span&gt;

          &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;--cd&lt;/span&gt; &lt;span class="err"&gt;asterisk&lt;/span&gt; &lt;span class="err"&gt;DISTRIBUTION=squeeze&lt;/span&gt; &lt;span class="err"&gt;ARCHITECTURE=x86_64&lt;/span&gt; &lt;span class="err"&gt;chroot-login&lt;/span&gt;

       &lt;span class="err"&gt;Note&lt;/span&gt; &lt;span class="err"&gt;that&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;content&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;chroot&lt;/span&gt; &lt;span class="err"&gt;will&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;reset&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;virgin&lt;/span&gt; &lt;span class="err"&gt;installa-&lt;/span&gt;
       &lt;span class="err"&gt;tion&lt;/span&gt; &lt;span class="err"&gt;when&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;next&lt;/span&gt; &lt;span class="err"&gt;build&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;packag&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;run&lt;/span&gt; &lt;span class="err"&gt;with&lt;/span&gt;

          &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;asterisk&lt;/span&gt;

       &lt;span class="err"&gt;Note&lt;/span&gt; &lt;span class="err"&gt;that&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;chroot&lt;/span&gt; &lt;span class="err"&gt;must&lt;/span&gt; &lt;span class="err"&gt;be&lt;/span&gt; &lt;span class="err"&gt;exited&lt;/span&gt; &lt;span class="err"&gt;before&lt;/span&gt;  &lt;span class="err"&gt;running&lt;/span&gt;  &lt;span class="err"&gt;a&lt;/span&gt;  &lt;span class="err"&gt;new&lt;/span&gt;  &lt;span class="err"&gt;build.&lt;/span&gt;  &lt;span class="err"&gt;If&lt;/span&gt;
       &lt;span class="err"&gt;still&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;chroot,&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;build&lt;/span&gt; &lt;span class="err"&gt;will&lt;/span&gt; &lt;span class="err"&gt;fail.&lt;/span&gt;


&lt;span class="err"&gt;USE&lt;/span&gt; &lt;span class="err"&gt;CASE&lt;/span&gt; &lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="err"&gt;IMPORT&lt;/span&gt; &lt;span class="err"&gt;PACKAGE&lt;/span&gt;
       &lt;span class="err"&gt;Paul&lt;/span&gt;  &lt;span class="err"&gt;wants&lt;/span&gt;  &lt;span class="err"&gt;to&lt;/span&gt;  &lt;span class="err"&gt;build&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;libpri&lt;/span&gt; &lt;span class="err"&gt;found&lt;/span&gt; &lt;span class="err"&gt;at&lt;/span&gt; &lt;span class="err"&gt;http://dak.proforma-&lt;/span&gt;
       &lt;span class="err"&gt;tique.com/debian&lt;/span&gt;

       &lt;span class="err"&gt;He&lt;/span&gt; &lt;span class="err"&gt;add&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt;
          &lt;span class="err"&gt;deb-src&lt;/span&gt; &lt;span class="err"&gt;http://dak.proformatique.com/debian&lt;/span&gt; &lt;span class="err"&gt;squeeze-xivo-skaro-dev&lt;/span&gt; &lt;span class="err"&gt;main&lt;/span&gt;
       &lt;span class="err"&gt;line&lt;/span&gt; &lt;span class="err"&gt;in&lt;/span&gt; &lt;span class="err"&gt;/etc/apt/sources.list.&lt;/span&gt;

       &lt;span class="err"&gt;He&lt;/span&gt; &lt;span class="err"&gt;downloads&lt;/span&gt; &lt;span class="err"&gt;it&lt;/span&gt; &lt;span class="err"&gt;into&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;sources&lt;/span&gt; &lt;span class="err"&gt;directory&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;packaging-farm:&lt;/span&gt;
          &lt;span class="err"&gt;apt-get&lt;/span&gt; &lt;span class="err"&gt;update&lt;/span&gt;
          &lt;span class="err"&gt;mkdir&lt;/span&gt; &lt;span class="err"&gt;/var/cache/packaging-farm/sources/libpri&lt;/span&gt;
          &lt;span class="err"&gt;cd&lt;/span&gt; &lt;span class="err"&gt;/var/cache/packaging-farm/sources/libpri&lt;/span&gt;
          &lt;span class="err"&gt;apt-get&lt;/span&gt; &lt;span class="err"&gt;source&lt;/span&gt; &lt;span class="err"&gt;libpri&lt;/span&gt;
          &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;generate&lt;/span&gt;

       &lt;span class="err"&gt;He&lt;/span&gt; &lt;span class="err"&gt;builds&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;package&lt;/span&gt; &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;default&lt;/span&gt; &lt;span class="err"&gt;distributions&lt;/span&gt; &lt;span class="err"&gt;and&lt;/span&gt; &lt;span class="err"&gt;architectures:&lt;/span&gt;
          &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;libpri&lt;/span&gt;


&lt;span class="err"&gt;SEE&lt;/span&gt; &lt;span class="err"&gt;ALSO&lt;/span&gt;
       &lt;span class="err"&gt;submit-xivo.sh(1)&lt;/span&gt;


&lt;span class="err"&gt;AUTHORS&lt;/span&gt;
       &lt;span class="err"&gt;Loic&lt;/span&gt; &lt;span class="err"&gt;Dachary&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;loic@gnu.org&amp;gt;&lt;/span&gt;



                     &lt;span class="err"&gt;local&lt;/span&gt;           &lt;span class="err"&gt;packaging-farm(1)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;packaging-farm 1.2.35&lt;/h4&gt;
&lt;p&gt;A new release was
&lt;a href="http://packaging-farm.dachary.org/download"&gt;published&lt;/a&gt; with the manual
page displayed above and the following bug fixes and improvements.The
BUILD START and BUILD END markers are added to the output so that it is
easier for the developer to figure out the relevant errors. It is also
used by the showerrors target. The showerrors target is run after
building a package so that the command line user does not need to dig in
the verbose output to find the source of the problem. The showerrors
target was added to display the build log of a given package for a given
architecture and a given distribution, if and only if it failed to
build. The ARCHITECTURES variable is exported so that packging-farm -
-var ARCHITECTURES can be used to display the default value.
submit-xivo.sh creates a new entry in the debian/changelog when
processing a package. If this entry is not committed because
GIT_DRY_RUN=true was set, it will prevent a git pull. The command git
reset --hard HEAD is run to get rid of such pending modifications. The
.orig.tar.gz created contained a spurious directory named after the
package : it was removed and its content moved back to the root. A third
party package is detected when a *-VERSION file is found in the sources
directory instead of SOURCE- VERSION which is more restrictive&lt;/p&gt;
&lt;h4&gt;XiVO bug fixes and versions&lt;/h4&gt;
&lt;p&gt;While attempting to recompile the XiVO packages, the following bugs were
filled together with the patches fixing them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.proformatique.com/issues/2125"&gt;freeswitch patch : cdbs dependency + version insensitive
    package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://projects.proformatique.com/issues/2120"&gt;dahdi-linux patch : version insensitive
    packaging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://projects.proformatique.com/issues/2129"&gt;asterisk patch : misdn depencencies in
    skaro-squeeze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://projects.proformatique.com/issues/2121"&gt;dahdi-tools patch : version insensitive
    packaging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Discussing with Nicolas Hicher on irc.freenode.net#xivo about these
patches led to a debate about the versions of the packages which was
brought to &lt;a href=""&gt;the development mailing list&lt;/a&gt;The
&lt;a href="http://downloads.asterisk.org/pub/telephony/libpri/"&gt;libpri&lt;/a&gt; library is
not yet available in the xivo skaro source repositories and it was
imported as described in the corresponding use case in the
packaging-farm manual page.&lt;/p&gt;
&lt;h4&gt;Architecture&lt;/h4&gt;
&lt;p&gt;A draft workflow description for packaging-farm was drawn. However, it
turns out to be at a level of detail that most packaging-farm users
would find useless. It would belong to an implementor guide.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;==============&lt;/span&gt; &lt;span class="err"&gt;net&lt;/span&gt; &lt;span class="err"&gt;=============&lt;/span&gt;

       &lt;span class="err"&gt;+---------------+&lt;/span&gt;        &lt;span class="err"&gt;+-----------------+&lt;/span&gt;
       &lt;span class="err"&gt;|&lt;/span&gt;  &lt;span class="err"&gt;Debian&lt;/span&gt; &lt;span class="err"&gt;GIT&lt;/span&gt;   &lt;span class="err"&gt;|&lt;/span&gt;        &lt;span class="err"&gt;|&lt;/span&gt;   &lt;span class="err"&gt;Sources&lt;/span&gt; &lt;span class="err"&gt;GIT&lt;/span&gt;   &lt;span class="err"&gt;|&lt;/span&gt;
       &lt;span class="err"&gt;+------+--------+&lt;/span&gt;        &lt;span class="err"&gt;+--------+--------+&lt;/span&gt;
              &lt;span class="err"&gt;|&lt;/span&gt;                          &lt;span class="err"&gt;|&lt;/span&gt;
              &lt;span class="err"&gt;v&lt;/span&gt;                          &lt;span class="err"&gt;v&lt;/span&gt;            &lt;span class="err"&gt;===&lt;/span&gt; &lt;span class="err"&gt;/var/cache/packaging-farm&lt;/span&gt; &lt;span class="err"&gt;==&lt;/span&gt;
       &lt;span class="err"&gt;+---------------+&lt;/span&gt;        &lt;span class="err"&gt;+------------------+&lt;/span&gt;
       &lt;span class="err"&gt;|&lt;/span&gt;  &lt;span class="err"&gt;VCS/debian&lt;/span&gt;   &lt;span class="err"&gt;|&lt;/span&gt;        &lt;span class="err"&gt;|&lt;/span&gt;  &lt;span class="err"&gt;VCS/sources&lt;/span&gt;     &lt;span class="err"&gt;|&lt;/span&gt;
       &lt;span class="err"&gt;+-------------+-+&lt;/span&gt;        &lt;span class="err"&gt;+--+---------------+&lt;/span&gt;
                     &lt;span class="err"&gt;|&lt;/span&gt;             &lt;span class="err"&gt;|&lt;/span&gt;
                     &lt;span class="err"&gt;v&lt;/span&gt;             &lt;span class="err"&gt;v&lt;/span&gt;
                    &lt;span class="err"&gt;+----------------+&lt;/span&gt;
                    &lt;span class="err"&gt;(&lt;/span&gt; &lt;span class="err"&gt;submit-xivo.sh&lt;/span&gt; &lt;span class="err"&gt;)&lt;/span&gt;
                    &lt;span class="err"&gt;+--+-------------+&lt;/span&gt;
                       &lt;span class="err"&gt;|&lt;/span&gt;            &lt;span class="err"&gt;v&lt;/span&gt;
                       &lt;span class="err"&gt;|&lt;/span&gt;           &lt;span class="err"&gt;+------------------+&lt;/span&gt;
                       &lt;span class="err"&gt;v&lt;/span&gt;           &lt;span class="err"&gt;|&lt;/span&gt;  &lt;span class="err"&gt;sources/skaro&lt;/span&gt;   &lt;span class="err"&gt;+------&amp;gt;-------&amp;gt;----------------+&lt;/span&gt;
                       &lt;span class="err"&gt;|&lt;/span&gt;           &lt;span class="err"&gt;+------------------+&lt;/span&gt;                               &lt;span class="err"&gt;|&lt;/span&gt;
       &lt;span class="err"&gt;+--------------------+&lt;/span&gt;                                                         &lt;span class="err"&gt;|&lt;/span&gt;
       &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;sources/asterisk&lt;/span&gt;   &lt;span class="err"&gt;+--------------------------------&amp;gt;-------&amp;gt;----------------+&lt;/span&gt;
       &lt;span class="err"&gt;+--------------------+&lt;/span&gt;                                                         &lt;span class="err"&gt;|&lt;/span&gt;
                                                                                      &lt;span class="err"&gt;|&lt;/span&gt;
       &lt;span class="err"&gt;+--------------------+&lt;/span&gt;                           &lt;span class="err"&gt;+-------------------------+&lt;/span&gt;   &lt;span class="err"&gt;|&lt;/span&gt;
       &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;depends.mk&lt;/span&gt;         &lt;span class="err"&gt;+-------------&amp;lt;-------------(&lt;/span&gt;  &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;depends&lt;/span&gt; &lt;span class="err"&gt;)-&amp;lt;-+&lt;/span&gt;
       &lt;span class="err"&gt;+--+-----------------+&lt;/span&gt;                           &lt;span class="err"&gt;+-------------------------+&lt;/span&gt;   &lt;span class="err"&gt;|&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;                                                                           &lt;span class="err"&gt;|&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;                                             &lt;span class="err"&gt;+-------------------------+&lt;/span&gt;   &lt;span class="err"&gt;|&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;              &lt;span class="err"&gt;+---------------------------+--(&lt;/span&gt; &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;generate&lt;/span&gt; &lt;span class="err"&gt;)-&amp;lt;-+&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;              &lt;span class="err"&gt;|&lt;/span&gt;                           &lt;span class="err"&gt;|&lt;/span&gt;  &lt;span class="err"&gt;+-------------------------+&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;              &lt;span class="err"&gt;v&lt;/span&gt;                           &lt;span class="err"&gt;v&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;              &lt;span class="err"&gt;|&lt;/span&gt;                           &lt;span class="err"&gt;|&lt;/span&gt;
          &lt;span class="err"&gt;v&lt;/span&gt;     &lt;span class="err"&gt;+--------+-----------+&lt;/span&gt;     &lt;span class="err"&gt;+---------+---------+&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;     &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;build/asterisk&lt;/span&gt;     &lt;span class="err"&gt;|&lt;/span&gt;     &lt;span class="err"&gt;|&lt;/span&gt;  &lt;span class="err"&gt;build/skaro&lt;/span&gt;      &lt;span class="err"&gt;|&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;     &lt;span class="err"&gt;+--------+-----------+&lt;/span&gt;     &lt;span class="err"&gt;+-------+-----------+&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;              &lt;span class="err"&gt;v&lt;/span&gt;                         &lt;span class="err"&gt;v&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;              &lt;span class="err"&gt;|&lt;/span&gt;                         &lt;span class="err"&gt;|&lt;/span&gt;             &lt;span class="err"&gt;+----------------------+&lt;/span&gt;
          &lt;span class="err"&gt;+--------------&amp;gt;-----------&amp;gt;-------------+-------------(&lt;/span&gt; &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;skaro&lt;/span&gt; &lt;span class="err"&gt;)&lt;/span&gt;
                                                                 &lt;span class="err"&gt;+-+--------+-----------+&lt;/span&gt;
         &lt;span class="err"&gt;===&lt;/span&gt; &lt;span class="err"&gt;/var/cache/packaging-farm/build/{asterisk,skaro}&lt;/span&gt; &lt;span class="err"&gt;==&lt;/span&gt;   &lt;span class="err"&gt;|&lt;/span&gt;        &lt;span class="err"&gt;|&lt;/span&gt;
                                                                   &lt;span class="err"&gt;|&lt;/span&gt;        &lt;span class="err"&gt;|&lt;/span&gt;
         &lt;span class="err"&gt;+---------------------------------------+&lt;/span&gt;        &lt;span class="err"&gt;+--------v--------v-----------+&lt;/span&gt;
         &lt;span class="err"&gt;|&lt;/span&gt;    &lt;span class="err"&gt;build/debian/i386/squeeze&lt;/span&gt;          &lt;span class="err"&gt;&amp;lt;--------(&lt;/span&gt; &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;chroot-login&lt;/span&gt; &lt;span class="err"&gt;)&lt;/span&gt;
         &lt;span class="err"&gt;+---------------------------------------+&lt;/span&gt;        &lt;span class="err"&gt;+-----------------------------+&lt;/span&gt;
         &lt;span class="err"&gt;+---------------------------------------+&lt;/span&gt;        &lt;span class="err"&gt;+-----------------------------+&lt;/span&gt;
         &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;build/debian/i386/squeeze/usr/src&lt;/span&gt;     &lt;span class="err"&gt;&amp;lt;--------(&lt;/span&gt; &lt;span class="err"&gt;packaging-farm&lt;/span&gt; &lt;span class="err"&gt;all&lt;/span&gt;          &lt;span class="err"&gt;)&lt;/span&gt;
         &lt;span class="err"&gt;+---------------------------------------+&lt;/span&gt;        &lt;span class="err"&gt;+-----------------------------+&lt;/span&gt;
                                                               &lt;span class="err"&gt;|&lt;/span&gt;        &lt;span class="err"&gt;|&lt;/span&gt;
         &lt;span class="err"&gt;===&lt;/span&gt; &lt;span class="err"&gt;/var/cache/packaging-farm/build/asterisk&lt;/span&gt; &lt;span class="err"&gt;==&lt;/span&gt;       &lt;span class="err"&gt;|&lt;/span&gt;        &lt;span class="err"&gt;|&lt;/span&gt;
           &lt;span class="err"&gt;etc...&lt;/span&gt;                                              &lt;span class="err"&gt;|&lt;/span&gt;        &lt;span class="err"&gt;|&lt;/span&gt;
         &lt;span class="err"&gt;=====&lt;/span&gt; &lt;span class="err"&gt;/var/lib/packaging-farm&lt;/span&gt; &lt;span class="err"&gt;=================&lt;/span&gt;       &lt;span class="err"&gt;|&lt;/span&gt;        &lt;span class="err"&gt;|&lt;/span&gt;
                                                               &lt;span class="err"&gt;v&lt;/span&gt;        &lt;span class="err"&gt;v&lt;/span&gt;
          &lt;span class="err"&gt;+------------------+&lt;/span&gt;                                 &lt;span class="err"&gt;|&lt;/span&gt;        &lt;span class="err"&gt;|&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;  &lt;span class="err"&gt;asterisk&lt;/span&gt;        &lt;span class="err"&gt;+------------------&amp;lt;--------------+&lt;/span&gt;        &lt;span class="err"&gt;|&lt;/span&gt;
          &lt;span class="err"&gt;+------------------+&lt;/span&gt;                                          &lt;span class="err"&gt;|&lt;/span&gt;
          &lt;span class="err"&gt;+------------------+&lt;/span&gt;                                          &lt;span class="err"&gt;|&lt;/span&gt;
          &lt;span class="err"&gt;|&lt;/span&gt;  &lt;span class="err"&gt;skaro&lt;/span&gt;           &lt;span class="err"&gt;+------------------&amp;lt;-----------------------+&lt;/span&gt;
          &lt;span class="err"&gt;+------------------+&lt;/span&gt;


         &lt;span class="err"&gt;=====&lt;/span&gt; &lt;span class="err"&gt;target&lt;/span&gt; &lt;span class="err"&gt;system&lt;/span&gt; &lt;span class="err"&gt;===========================&lt;/span&gt;

         &lt;span class="err"&gt;deb&lt;/span&gt; &lt;span class="err"&gt;http://xivo.dachary.org/packaging-farm/skaro/gnulinux/debian&lt;/span&gt; &lt;span class="err"&gt;skaro-squeeze&lt;/span&gt; &lt;span class="err"&gt;main&lt;/span&gt;
         &lt;span class="err"&gt;deb-src&lt;/span&gt; &lt;span class="err"&gt;http://xivo.dachary.org/packaging-farm/skaro/gnulinux/debian&lt;/span&gt; &lt;span class="err"&gt;skaro-squeeze&lt;/span&gt; &lt;span class="err"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>New schedule jquery widget for upcoming XiVO</title><link href="http://blog.xivo.io/new-schedule-jquery-widget-for-upcoming-xivo.html" rel="alternate"></link><updated>2011-03-25T09:26:00-04:00</updated><author><name>gbour</name></author><id>tag:blog.xivo.io,2011-03-25:new-schedule-jquery-widget-for-upcoming-xivo.html</id><summary type="html">&lt;p&gt;&lt;span class="Apple-style-span"
style="font-size: 15px; font-weight: bold; "&gt;How to use it&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Click once on the field with calendar icon to show the widget. Click
again to hide it (or on the cross at title bar right's).Once visible,
you can define your intervals:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;for months and days&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;select each month/day individually (a selected one move from
    gray to yellow background)&lt;/li&gt;
&lt;li&gt;all/none button allow toggling all values at once&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;for the time interval&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;click down start or end toggle, then slide to adjust the value&lt;/li&gt;
&lt;li&gt;for a fine adjustment, use mouse wheel or up/down keyboard keys&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;NOTE: &lt;strong&gt;A datetime is considered in the schedule if it match all
intervals (months, month days, week days and hours)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Lets see with a quick example:  &lt;/p&gt;
&lt;p&gt;&lt;a href="/public/xivo-schedule/example.png" title="example.png"&gt;&lt;img alt="example.png" src="/public/xivo-schedule/.example_s.jpg" title="example.png, mar. 2011" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We have selected workdays from January to April, 8AM to 7PM.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;all datetimes with time lower than 8AM or higher than 7PM are out of
    the schedule&lt;/li&gt;
&lt;li&gt;2011, march 25 9.30AM is in schedule, while 2012, march 25 9:30AM is
    out (first is a friday, while last is a sunday)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Developpers: Including xivo-schedule in you pages&lt;/h3&gt;
&lt;p&gt;While developped for xivo, it can easily be integrated in other
projects. xivo-schedule support jquery-ui themes and is multilingual
(only french and english available at the moment).  &lt;/p&gt;
&lt;p&gt;xivo-schedule widget require jquery (&amp;gt;= 1.5), jquery-ui (&amp;gt;=1.8)
and optionally jquery.mousewheel
(&lt;a href="http://brandonaaron.net/code/mousewheel/docs"&gt;http://brandonaaron.net/code/mousewheel/docs&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;``` {style="font-size:small;"}
&lt;link rel="stylesheet"   href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.11/themes/ui-lightness/jquery-ui.css"   type="text/css" media="all" /&gt;&lt;script type="text/javascript" src="http://code.jquery.com/jquery-1.5.1.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.11/jquery-ui.min.js"&gt;&lt;/script&gt;&lt;script src="jquery.mousewheel.min.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Then include xivo-schedule javascript and css files. Note that you can
also include langpack(s) you want to use.

``` {style=&amp;quot;font-size:small;&amp;quot;}
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;xivo.schedule.css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../src/xivo.schedule.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../src/xivo.schedule-fr.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;xivo-schedule required a text input to be attached to. If you want to
get schedule intervals back, you also need 4 others text fields (one for
months, monthdays, weekdays and time intervals), which will be filled
with intervals raw value when the user will manipulate schedule widget.&lt;/p&gt;
&lt;p&gt;``` {style="font-size:small;"}
    &lt;form&gt;
      &lt;div style="float:left"&gt;
        &lt;input id="schedule" type="text" /&gt;&lt;br/&gt;
      &lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style="float:left; margin-left: 100px;"&gt;
        &lt;label for="sched-months"&gt;months :&lt;/label&gt;&lt;input id="sched-months"    type="text" disabled /&gt;&lt;br/&gt;
        &lt;label for="sched-monthdays"&gt;month days :&lt;/label&gt;&lt;input id="sched-monthdays" type="text" disabled /&gt;&lt;br/&gt;
        &lt;label for="sched-weekdays"&gt;week days :&lt;/label&gt;&lt;input id="sched-weekdays"  type="text" disabled /&gt;&lt;br/&gt;
        &lt;label for="sched-hours"&gt;hours :&lt;/label&gt;&lt;input id="sched-hours"     type="text" disabled /&gt;
      &lt;/div&gt;
    &lt;/form&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Finally, you initialize your schedule widget:

``` {style=&amp;quot;font-size:small;&amp;quot;}
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  $(function(){    $(&amp;#39;#schedule&amp;#39;).schedule({      &amp;#39;language&amp;#39;: &amp;#39;fr&amp;#39;,      &amp;#39;inputs&amp;#39;: {          &amp;#39;months&amp;#39;   : $(&amp;#39;#sched-months&amp;#39;),          &amp;#39;monthdays&amp;#39;: $(&amp;#39;#sched-monthdays&amp;#39;),          &amp;#39;weekdays&amp;#39; : $(&amp;#39;#sched-weekdays&amp;#39;),          &amp;#39;hours&amp;#39;    : $(&amp;#39;#sched-hours&amp;#39;)      },      &amp;#39;defaults&amp;#39;: {          &amp;#39;months&amp;#39;   : &amp;#39;1,3-6,11,12&amp;#39;,          &amp;#39;monthdays&amp;#39;: &amp;#39;1,3,5,8,10,12-13,15,17,20,22,24-25,27,29&amp;#39;,          &amp;#39;weekdays&amp;#39; : &amp;#39;1,4-6&amp;#39;,          &amp;#39;hours&amp;#39;    : &amp;#39;08:35-17:30&amp;#39;      }    });  });&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and voila! see attached file for the complete sample.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;xivo-schedule can be downloaded from &lt;a href="git://git.xivo.fr/xivo-dalek.git"&gt;our git
repository&lt;/a&gt; or &lt;a href="https://github.com/gbour/xivo-schedule"&gt;on
github&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/p&gt;</summary><category term="skaro"></category><category term="web-interface"></category><category term="schedule"></category><category term="javascript"></category><category term="jquery"></category><category term="software"></category></entry><entry><title>XiVO sources conventions implemented and documented</title><link href="http://blog.xivo.io/xivo-sources-conventions-implemented-and-documented.html" rel="alternate"></link><updated>2011-03-21T23:49:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-03-21:xivo-sources-conventions-implemented-and-documented.html</id><summary type="html">&lt;p&gt;The &lt;a href="http://git.xivo.fr/debian"&gt;debian GNU/Linux packages repository&lt;/a&gt;
was made public a few days ago. The
&lt;a href="http://xivo.dachary.org/pf-release.sh"&gt;pf-release.sh&lt;/a&gt; shell script
based on the internal SVN repository has been updated to use the public
GIT repository instead.&lt;/p&gt;
&lt;p&gt;In order to make it more convenient for the developer to submit a job to
&lt;a href="http://packaging-farm.dachary.org/"&gt;packaging-farm&lt;/a&gt; the workflow was
modified. It previously provided a single submission script that was
independent from the building of the package. A new target, &lt;code&gt;submit&lt;/code&gt; has
been introduced together with a global SUBMIT configuration variable. If
SUBMIT=xivo, the submit target will call the
/usr/lib/packaging-farm/submit/submit-xivo.sh script and expect it to do
something useful based on the environment variables it finds.&lt;/p&gt;
&lt;p&gt;During the installation of the Debian GNU/Linux packaging-farm-client
package, the former rsync limit and origin of the chroot used to build
the packages were deprecated in favor of the value of the SUBMIT
configuration variable. It has two choices : the existing
&lt;a href="http://pokersource.info/"&gt;pokersource&lt;/a&gt; convention and the XiVO
convention.&lt;/p&gt;
&lt;p&gt;A &lt;a href=""&gt;new release (1.2.34)&lt;/a&gt; of packaging-farm has been published with
this integration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;submit-xivo(1)                          submit-xivo(1)

NAME
       submit-xivo.sh - create a source package from XiVO repositories

SYNOPSIS
       [DIRECTORY=] submit-xivo.sh

       [VERBOSE=false] [GIT_DRY_RUN=false] \
     [VCS_DIR=/var/cache/packaging-farm/VCS] \
     [PACKAGES_DIR=/var/cache/packaging-farm/sources] \
     [XIVO=skaro] \
     [SUITE=squeeze] \
     [SOURCE_GIT=git://git.xivo.fr] \
     [DEBIAN_GIT=git://git.xivo.fr/debian] \
     [DEBEMAIL=technique@proformatique.com] \
     [DEBFULLNAME=&amp;quot;Proformatique Maintainance Team&amp;quot;] \
     [DIRECTORY=] \
     submit-xivo.sh [TEST]

DESCRIPTION
       When  run  as DIRECTORY=asterisk submit.xivo.sh will merge the asterisk
       sources with the corresponding Debian  GNU/Linux  package  instructions
       and build a source package.


       step 1 - update the git repositories
          the  SOURCE_GIT  and  DEBIAN_GIT  repositories are pulled in the
          VCS_DIR directory.

       step 2 - merge sources and Debian GNU/Linux package
          the source  and  Debian  package  information  are  copied  from
          VCS_DIR and merged into PACKAGES_DIR

       step 3 - build source package
          without  any attempt at resolving dependencies, a source package
          is built using dpkg-buildpackage

          When invoked without the  DIRECTORY  environment  variable  set,
          submit-xivo.sh will display a usage and sample commands that can
          be copy/pasted to the command line.  It is designed as a  helper
          to the packaging-farm(1) command the sample commands make use of
          it.

DEFINITIONS
       SUITE  is the name of a Debian GNU/Linux distribution, such as  squeeze
          or lenny.


       XIVO   is the name of a XiVO release such as skaro or gallifrey.


       component
          is  the name of a repository containing a set of packages, as in
          the reprepro(1) configuration files. A component is of the  form
          SUITE-xivo-XIVO  For instance, lenny-xivo-dalek, lenny-xivo-gal-
          lifrey and  squeeze-xivo-skaro.

VERSIONS
       The XiVO source  packages  have  no  version  information.  The  Debian
       GNU/Linux  package  version  numbers are generated based on the date of
       the last commit and its short hash.  YYYYMMDD.HHMMSS.HASH will  be  the
       version  number  of  a package where the last commit in the sources was
       made on YYYYMMDD.HHMMSS. This last commit hash is appended to the  ver-
       sion number.  Example: asterisk-20110312.102015.8ff428-1

       When  merging  a source with its matching Debian GNU/Linux package, the
       first line of the debian/changelog file must contain the computed  ver-
       sion  number.  If  it  does not, a new changelog entry is used with the
       following template:
          echo &amp;quot;&lt;span class="nv"&gt;$package&lt;/span&gt; (&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;debian_version&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;) &lt;span class="nv"&gt;$component&lt;/span&gt;; urgency=low&amp;quot;
          echo
          echo &amp;quot;  * upstream update&amp;quot;
          echo
          echo -n &amp;quot; -- &lt;span class="nv"&gt;$DEBFULLNAME&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;$DEBEMAIL&lt;/span&gt;&amp;gt;  &amp;quot;
          date &amp;#39;+%a, %d %b %Y %R:%S %z&amp;#39;
          echo

TARBALL CONSISTENCY
       If a source tarball already exists for a given version, it will be left
       untouched.   Although  the  contents would be the same if re-generated,
       the checksum will be different when it is  compressed.  Such  a  change
       introduce  an unnecessary and confusing variance when issuing more than
       one Debian GNU/Linux package for a given source.

NAMESPACES
       git://git.xivo.fr source tree
          contains one repository for each component
          http://git.xivo.fr/xivo-dalek.git
          http://git.xivo.fr/xivo-gallifrey.git
          http://git.xivo.fr/xivo-skaro.git Within  each  repository,  the
          directories  containing a Makefile.pkg file contain sources that
          are candidates for packaging.


       git://git.xivo.fr/debian package tree
          contains one repository for each component
          http://git.xivo.fr/debian/lenny-xivo-dalek.git
          http://git.xivo.fr/debian/lenny-xivo-gallifrey.git
          http://git.xivo.fr/debian/squeeze-xivo-skaro.git   Within   each
          repository, each directory contains a trunk/debian sub-directory
          matching the corresponding DEB_PKG in the source directory.


       VCS_DIR tree
          contains a debian sub-directory where  all  debian  repositories
          are  cloned and a sources sub-directory where all source reposi-
          tories are cloned


       PACKAGES_DIR tree
          for each package found  in  the  VCS_DIR/debian  subdirectories,
          there  exists a corresponding directory in PACKAGES_DIR with the
          dsc of the package and a subdirectory with the same name as  the
          package containing the actual sources.

ENVIRONMENT
       Each  environment  variable  is shown with its default value. It can be
       overriden if set before the  submit-xivo.sh  is  called.  For  instance
       PACKAGES_DIR=/tmp DIRECTORY=asterisk


       XIVO=skaro
          The  name  of  the skaro distribution. Can be one of skaro, gal-
          lifrey.


       SUITE=squeeze
          A Debian GNU/Linux suite. Can be one of squeeze, lenny.


       VCS_DIR=/var/cache/packaging-farm/VCS
          The directory in which the source and debian  repositories  will
          be cloned.


       PACKAGES_DIR=/var/cache/packaging-farm/sources
          The  directory  in  which  the resulting source packages will be
          stored.


       SOURCE_GIT=git://git.xivo.fr
          The directory containing the source code repositories  for  each
          XiVO suite.


       DEBIAN_GIT=git://git.xivo.fr/debian
          The  directory  containing the Debian GNU/Linux repositories for
          each XiVO suite.


       GIT_DRY_RUN=false
          If set to true, no changes  will  be  committed  to  the  Debian
          GNU/Linux repository if a debian/changelog entry is added.


       DEBEMAIL=technique@proformatique.com
          The mail used when generating a debian/changelog entry.


       DEBFULLNAME=&amp;quot;Proformatique Maintainance Team&amp;quot;
          The user name used when generating a debian/changelog entry.

TESTING
       When  run  as  VERBOSE=true submit-xivo.sh TEST a test suite embeded in
       the shell script is run. It uses files created in /tmp exclusively  and
       will not modify anything outside it. All features and bug fixes have an
       associated test case.

AUTHORS
       Loic Dachary &lt;span class="nt"&gt;&amp;lt;loic&lt;/span&gt;&lt;span class="err"&gt;@dachary.org&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary></entry><entry><title>Creating a Debian GNU/Linux source package from the VCS (2/2)</title><link href="http://blog.xivo.io/creating-a-debian-gnulinux-source-package-from-the-vcs-22.html" rel="alternate"></link><updated>2011-03-14T22:04:00-04:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-03-14:creating-a-debian-gnulinux-source-package-from-the-vcs-22.html</id><summary type="html">&lt;h4&gt;pf-release.sh&lt;/h4&gt;
&lt;p&gt;The &lt;a href="http://xivo.dachary.org/pf-release.sh"&gt;pf-release.sh shell script&lt;/a&gt;
merges the &lt;a href="http://git.xivo.fr/xivo-skaro.git/"&gt;GIT repository&lt;/a&gt;
containing the sources and the SVN repository containing the debian
packages into a well formed Debian GNU/Linux source package. For
instance&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pf-release.sh lib-javascript squeeze skaro
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;would create the &lt;em&gt;pf-xivo-lib-js&lt;/em&gt; package. The discussion about the
&lt;a href="https://lists.proformatique.com/pipermail/xivo-dev/2011-March/000012.html"&gt;publication of the private SVN
repostory&lt;/a&gt;
concluded that it will be bound to a public GIT repository shortly. When
it is ready, the pf-release.sh script will be updated accordingly.In
order to test the &lt;em&gt;pf-release.sh&lt;/em&gt; code, it can be run with the &lt;em&gt;TEST&lt;/em&gt;
argument:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pf-release.sh TEST
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will simulate border cases using a temporary direcotry to check
that it behaves as expected. Reading the tests (which are embeded in the
script) is currently the only documentation.&lt;/p&gt;
&lt;h4&gt;packaging-farm submission&lt;/h4&gt;
&lt;p&gt;The output of &lt;em&gt;pf-release.sh&lt;/em&gt; is stored in a directory that uses the
same conventions as packaging-farm. Because of that, submitting the
package to the host running the packaging farm can be done by copying
the directory as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rsync -av pf-xivo-lib-js/ packaging-farm.org:/var/lib/packaging-farm/sources/pf-xivo-lib-js/
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;dependency generation&lt;/h4&gt;
&lt;p&gt;A recent addition to the packaging-farm was the automatic generation of
dependencies. It calculates which source package depends on other
packages built by the packaging-farm. Support for meta packages was
added to the dependency generation. In the packaging-farm vocabulary, a
meta package is a package that aggregates others but has no sources of
its own. For instance, the meta package &lt;em&gt;skaro&lt;/em&gt; was created to produce
the &lt;a href="http://xivo.dachary.org/packaging-farm/skaro/gnulinux/debian/"&gt;skaro squeeze
repository&lt;/a&gt;.
When running the depencency generations as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm depends
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;it includes the meta packages in the graph so that skaro can be built
with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm skaro
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If, for instance, &lt;em&gt;pf-xivo-lib-js&lt;/em&gt; has been updated as shown with the
&lt;em&gt;rsync&lt;/em&gt; command above it will be rebuilt because the skaro meta package
depends on it.&lt;/p&gt;
&lt;h4&gt;makefile generation&lt;/h4&gt;
&lt;p&gt;Each package entering the packaging-farm must have a &lt;em&gt;Makefile&lt;/em&gt;
associated with it. Setting the variables in this &lt;em&gt;Makefile&lt;/em&gt; allows the
administrator to tune the behaviour on a per package basis. When a
package is simple enough, its &lt;em&gt;Makefile&lt;/em&gt; can be automatically generated
as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm makefiles
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;packaging-farm sensible defaults&lt;/h4&gt;
&lt;p&gt;The &lt;a href="http://packaging-farm.dachary.org/download/"&gt;version 1.2.33&lt;/a&gt; of
packaging-farm includes the modifications above to help reduce the
number of steps required to rebuild a suite or a specific package.
Submitting a package requires four steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pf-release.sh&lt;/li&gt;
&lt;li&gt;rsync&lt;/li&gt;
&lt;li&gt;packaging-farm generate which calls depends and makefiles&lt;/li&gt;
&lt;li&gt;packaging-farm the_package&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This completes the making of the building blocks enabling the creation
and maintainance of packages based on the XiVO development repository.
The next step will be to document and simplify the usage, reducing the
learning curve to a minimum.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>The road to the final PCB layout routing of the CPU board</title><link href="http://blog.xivo.io/the-road-to-the-final-pcb-layout-routing-of-the-cpu-board.html" rel="alternate"></link><updated>2011-03-11T12:07:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-03-11:the-road-to-the-final-pcb-layout-routing-of-the-cpu-board.html</id><summary type="html">&lt;p&gt;We are now entering the road to the final PCB layout routing of the CPU
board of our XiVO IPBX OpenHardware with the gathering of our schematic
design on the CPU board of our IPBX. The current step is to place the
component, check the package of each component in the library (Lbr in
Eagle), double-check the schematics associated to the layout and prepare
the final routing of the netwire optimized for our 10-layers design. We
will document the BoM step with different posts coming up and namely the
optimization of the components sourcing.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Creating a Debian GNU/Linux source package from the XiVO VCS (1/2)</title><link href="http://blog.xivo.io/creating-a-debian-gnulinux-source-package-from-the-xivo-vcs-12.html" rel="alternate"></link><updated>2011-03-07T19:10:00-05:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-03-07:creating-a-debian-gnulinux-source-package-from-the-xivo-vcs-12.html</id><summary type="html">&lt;h4&gt;Source GIT structure&lt;/h4&gt;
&lt;p&gt;The &lt;a href="http://git.xivo.fr/xivo-skaro.git/"&gt;GIT repository&lt;/a&gt; can be
extracted as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone git://git.xivo.fr/xivo-skaro.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It contains a directory for each source package found in the &lt;a href="http://dak.proformatique.com/debian/dists/squeeze-xivo-skaro-dev/"&gt;skaro
repository&lt;/a&gt;.
The names of the directories are mapped to the package names as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;agid -&amp;gt; pf-xivo-agid
app_nv_faxdetect -&amp;gt; pf-asterisk-app-nv-faxdetect
asterisk -&amp;gt; asterisk
base-config -&amp;gt; pf-xivo-base-config
bntools -&amp;gt; bntools
chan_sccp -&amp;gt; asterisk-chan-sccp
confgen -&amp;gt; pf-xivo-confgen
ctiservers -&amp;gt; pf-xivo-cti-server
dahdi-linux -&amp;gt; dahdi-linux
dahdi-tools -&amp;gt; dahdi-tools
extra -&amp;gt; pf-xivo-extra
fetchfw -&amp;gt; pf-xivo-fetchfw
freeswitch -&amp;gt; freeswitch
lib-javascript -&amp;gt; pf-xivo-lib-js
lib-python -&amp;gt; pf-xivo-lib-python
monitoring -&amp;gt; pf-xivo-monitoring
provisioning -&amp;gt; pf-xivo-provisioning
queues-logger -&amp;gt; pf-xivo-queues-logger
res_watchdog -&amp;gt; pf-asterisk-res-watchdog
sysconfd -&amp;gt; pf-xivo-sysconfd
utils -&amp;gt; pf-xivo-utils
web-interface -&amp;gt; pf-xivo-web-interface
xivo-sounds -&amp;gt; pf-xivo-sounds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The mapping is found in the &lt;code&gt;*/Makefile.pkg&lt;/code&gt; file, in the &lt;code&gt;DEB_PKG&lt;/code&gt;
variable, such as&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DEB_PKG=&amp;quot;pf-xivo-monitoring&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are two sets of directories : the software imported from a third
party (asterisk, for instance) and the software developped natively.The
source tarbal of a native package is created from a tar of the
directory, not including the directory name. For instance, the
&lt;a href="http://dak.proformatique.com/debian/pool/main/p/pf-xivo-cti-server/pf-xivo-cti-server_1.2~svn10269.orig.tar.gz"&gt;pf-xivo-cti-server
tarbal&lt;/a&gt;
contains:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-rw-r--r--    root/root        305 ./Makefile.pkg
 -rw-r--r--    root/root       6922 ./xivo_daemon.conf
 -rw-r--r--    root/root      35068 ./LICENSE
 drwxr-xr-x    root/root          0 ./xivo_ctiservers/
 -rw-r--r--    root/root       8011 ./xivo_ctiservers/cti_trunklist.py
 -rw-r--r--    root/root      13509 ./xivo_ctiservers/xivo_phones.py
 -rw-r--r--    root/root       3199 ./xivo_ctiservers/cti_presence.py
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The source tarbal of a third party package is created with a tar of the
&lt;code&gt;patches&lt;/code&gt; and &lt;code&gt;tarballs&lt;/code&gt; directories alone. The rest of the files are
used during the development cycle ( such as asterisk/fetch_tarball.sh
to synchronize with the asterisk upstream ) and are out of the scope of
this discussion. For instance, the content of the &lt;a href="http://dak.proformatique.com/debian/pool/main/d/dahdi-linux/dahdi-linux_2.4.1.0+dfsg+pf.xivo.1.2~svn10330.orig.tar.gz"&gt;dahdi-linux
tarbal&lt;/a&gt;
is as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;drwxr-xr-x    root/root          0 ./patches/
 -rw-r--r--    root/root       1106 ./patches/enable_oslec.diff
 -rw-r--r--    root/root        776 ./patches/no_firmware_download
 -rw-r--r--    root/root         39 ./patches/series
 -rw-r--r--    root/root    1147443 ./dahdi-linux_2.4.1.0+dfsg.orig.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the tarbal is moved up one directory and the &lt;code&gt;tarballs&lt;/code&gt;
directory does not show. The actual content of the corresponding GIT
repository is as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dahdi-linux/prepare_test_sources
dahdi-linux/sources.pkg
dahdi-linux/SOURCE-VERSION
dahdi-linux/AUTOBUILD-IGNORE
dahdi-linux/Makefile.pkg
dahdi-linux/tarballs
dahdi-linux/tarballs/dahdi-linux_2.4.1+dfsg.orig.tar.gz
dahdi-linux/fetch_sources
dahdi-linux/patches/series
dahdi-linux/patches/no_firmware_download
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;None of the source directories contain version numbers. A convention
involving a SVN version number (a SVN repository is used behind the GIT)
and the content of the &lt;code&gt;VERSION&lt;/code&gt; file (1.2 for skaro) is used to
generate a version (such as the &lt;code&gt;1.2~svn10330&lt;/code&gt; part of
&lt;code&gt;dahdi-linux_2.4.1.0+dfsg+pf.xivo.1.2~svn10330.orig.tar.gz&lt;/code&gt;). A simpler
convention is &lt;a href="https://lists.proformatique.com/pipermail/xivo-dev/2011-March/000008.html"&gt;being
discussed&lt;/a&gt;
to cope with two issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the SVN version is not available to the general public&lt;/li&gt;
&lt;li&gt;the global version number (1.2 for skaro) is redundant and could be
    ignored&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The directory &lt;code&gt;tools&lt;/code&gt; is not a package. It contains files shared and
duplicated in some native packages. For instance &lt;code&gt;gwr.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;app_nv_faxdetect/gwr.py -&amp;gt; ../tools/gwr.py
 res_watchdog/gwr.py -&amp;gt; ../tools/gwr.py
 tools/gwr.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In order to ensure the inclusion of the file itself when the tarbal is
created, the &lt;code&gt;-h&lt;/code&gt; is used to store the content of the symbolic link
instead of the symbolic link itself.Some sources, such as &lt;code&gt;libpri&lt;/code&gt; are
unmodified ports of the standard package and do not require special
handling.&lt;/p&gt;
&lt;h4&gt;Debian package SVN structure&lt;/h4&gt;
&lt;p&gt;The Debian GNU/Linux package are stored in an internal SVN and its
publication is &lt;a href="https://lists.proformatique.com/pipermail/xivo-dev/2011-March/000012.html"&gt;being
discussed&lt;/a&gt;.
The information can be retrieved from the source packages but the
history is lost to the general public. The SVN tree is structured using
a path named after the XiVO version and the Debian GNU/Linux version it
is based on. For instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;package=asterisk
    suite=squeeze
    xivo=skaro

    means the packaging information will be found in

    packages/branches/official/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;suite&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;-xivo-&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/trunk/debian
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the version found in &lt;code&gt;debian/changelog&lt;/code&gt; does not reflect the source
version number (for instance 2.4.1.0+dfsg+pf.xivo.1.2\~svn10330 in the
chapter above), a new changelog entry will be created to match it. When
this sanity check is done (and assuming the source tarbal is available
in the upper directory), the source package can be created with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg-buildpackage -S -uc -us
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Although most packages contain a
&lt;a href="http://cdbs-doc.duckcorp.org/en/cdbs-doc.xhtml"&gt;debian/control.in&lt;/a&gt;
file, the corresponding &lt;code&gt;debian/control&lt;/code&gt; is commited to in the SVN
repository. The CDBS documentation suggests it is not a mature feature
and it could probably be ignored. The newer &lt;a href="http://en.wikipedia.org/wiki/Debhelper#Overview"&gt;debhelper version
7&lt;/a&gt; could prefered to
CDBS in the future.&lt;/p&gt;
&lt;h4&gt;Implementing the source package logic&lt;/h4&gt;
&lt;p&gt;A &lt;a href="http://xivo.dachary.org/pf-release.sh"&gt;shell script stub has been
created&lt;/a&gt; to implement the logic
described above, together with embeded tests. When the SVN containing
the Debian GNU/Linux packaging information will be available, it will
create the source packages that can be fed to
&lt;a href="packaging-farm"&gt;http://packaging-farm.dachary.org/&lt;/a&gt; in order to create
a &lt;a href="http://xivo.dachary.org/packaging-farm/skaro/gnulinux/debian/"&gt;XiVO skaro
repository&lt;/a&gt;
described in the &lt;a href="http://blog.xivo.fr/index.php?post/2011/02/22/Creating-an-independant-XiVO-Debian-GNU/Linux-repository-from-scratch-%28part-4/4%29"&gt;series on building an independant XiVO
repository&lt;/a&gt;.In
the second part of this entry, the script will be complete and a the
XiVO skaro repository updated.&lt;/p&gt;
&lt;/p&gt;</summary><category term="packages"></category></entry><entry><title>Looking for technical documentation on the Matra RC1173A</title><link href="http://blog.xivo.io/looking-for-technical-documentation-on-the-matra-rc1173a.html" rel="alternate"></link><updated>2011-03-04T11:08:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-03-04:looking-for-technical-documentation-on-the-matra-rc1173a.html</id><summary type="html">&lt;p&gt;The picture below presents the only connector available on the Matra
RC1173A  &lt;/p&gt;
&lt;p&gt;&lt;img alt="RC1173A
connector" src="/public/.P1050040_m.jpg" title="RC1173A connector, mar. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;After some studies, it seems that device is a "pupitre" from MATRA that
sould be connected to a PABX Matracom (45xx series) of CGCT type.The
device seems to be using a micro-controler Philips/RTC 84C21 and 84C85
using probably the firmware HX00070xx et HX00072xx&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Candidate XiVO skaro repository for x86_64</title><link href="http://blog.xivo.io/candidate-xivo-skaro-repository-for-x86_64.html" rel="alternate"></link><updated>2011-02-28T21:08:00-05:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-02-28:candidate-xivo-skaro-repository-for-x86_64.html</id><summary type="html">&lt;h4&gt;XiVO skaro repository for x86_64&lt;/h4&gt;
&lt;p&gt;Last week Nicolas Hicher completed a release candidate for the &lt;a href="http://dak.proformatique.com/debian/dists/squeeze-xivo-skaro-dev/"&gt;i386
XiVO skaro
repository&lt;/a&gt;.
Although the repository claims to support the x86_64/amd64
architecture, the &lt;a href="http://dak.proformatique.com/debian/dists/squeeze-xivo-skaro-dev/main/binary-amd64/Packages"&gt;amd64 packages are
missing&lt;/a&gt;.
All the source packages were fetched in an attempt to build a x86_64
repository. The following problems were found and fixed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.proformatique.com/issues/1998"&gt;dahdi-linux patch for
    squeeze-i386&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://projects.proformatique.com/issues/1999"&gt;spandsp patch for
    squeeze-x86_64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://projects.proformatique.com/issues/2000"&gt;asterisk-1.8 unresolved dependency to postgres 8.3 on
    debian/squeeze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://projects.proformatique.com/issues/2001"&gt;pf-xivo-fetchfw missing dependency for
    skaro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://projects.proformatique.com/issues/2002"&gt;pf-xivo-provisioning missing dependency for
    skaro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://projects.proformatique.com/issues/2006"&gt;pf-xivo-confgen missing dependency for
    skaro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A problem on the &lt;a href="https://projects.proformatique.com/issues/2003"&gt;misdn-kernel
modules&lt;/a&gt; was left
unresolved, in the hope that Nicolas Hicher already knows the solution.
A &lt;a href="https://projects.proformatique.com/issues/2007"&gt;question&lt;/a&gt; about an
unusual pf-xivo-base-config and pf-xivo-web-interface interdendency was
posted for discussion. None of these problems were blockers and their
resolution was not mandatory.&lt;/p&gt;
&lt;h4&gt;Installation on Debian GNU/Linux squeeze&lt;/h4&gt;
&lt;p&gt;The resulting repository was added as follows to a fresh install of
Debian GNU/Linux squeeze:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://xivo.dachary.org/packaging-farm/skaro/gnulinux/debian&lt;/span&gt; &lt;span class="kp"&gt;skaro-squeeze&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A single package was missing ( &lt;code&gt;pf-sys-ca&lt;/code&gt; ) and required the addition
of a repository:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://dak.proformatique.com/debian&lt;/span&gt; &lt;span class="kp"&gt;lenny-dev&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the hope of reducing the configuration work,
&lt;a href="http://wiki.debian.org/DebianInstaller/Preseed"&gt;preseed&lt;/a&gt; information
was extracted from the &lt;a href="git://git.proformatique.com/official/debian-installer.git"&gt;debian-installer XiVO
repository&lt;/a&gt;
and applied as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;wget&lt;/span&gt; &lt;span class="nt"&gt;-O&lt;/span&gt; &lt;span class="nt"&gt;installed&lt;/span&gt;&lt;span class="nc"&gt;.cfg&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://git.proformatique.com/?p=official/debian-installer.git;a=blob_plain;f=squeeze/installer.cfg;hb=6ee3ad5851ea7c0bb841cbd05e53835f483dd867&amp;#39;&lt;/span&gt;
&lt;span class="nt"&gt;debconf-set-selections&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nt"&gt;installed&lt;/span&gt;&lt;span class="nc"&gt;.cfg&lt;/span&gt;
&lt;span class="nt"&gt;wget&lt;/span&gt; &lt;span class="nt"&gt;-O&lt;/span&gt; &lt;span class="nt"&gt;pkg&lt;/span&gt;&lt;span class="nc"&gt;.cfg&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://git.proformatique.com/?p=official/debian-installer.git;a=blob_plain;f=squeeze/pkg.cfg;hb=127c11ffdb8f4ad42f59fce971f274cd0e079745&amp;#39;&lt;/span&gt;
&lt;span class="nt"&gt;debconf-set-selections&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nt"&gt;pkg&lt;/span&gt;&lt;span class="nc"&gt;.cfg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;a href="http://xivo.dachary.org/2011-02-28-manual-installation.txt"&gt;full log of the shell
session&lt;/a&gt; was
archived. However, now that the repository is ready, it should be
possible to automatically install XiVO using the scripts from following
repositories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git://git.proformatique.com/official/debian-installer.git&lt;/li&gt;
&lt;li&gt;git://git.proformatique.com/official/debian-pxelinux.git&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;packaging-farm release&lt;/h4&gt;
&lt;p&gt;While fixing the XiVO skaro repository, a few problems were found and
fixed in &lt;a href="http://packaging-farm.dachary.org/"&gt;packaging-farm&lt;/a&gt; and
released as version 1.2.32. The ChangeLog reads : add architecture to
KVERS variables. load fakeroot in each dist-upgrade. input for apt-get
is /dev/null to avoid input problems. fix dpkg-scan bug when building
for multiple archictures.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Working ISDN prototype board</title><link href="http://blog.xivo.io/working-isdn-prototype-board.html" rel="alternate"></link><updated>2011-02-25T13:26:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-02-25:working-isdn-prototype-board.html</id><summary type="html">&lt;p&gt;This is great to show the working PCB or the ISDN prototype board
connected to our IPBX prototype through the LEB and TDM bus of our SoC
(INTEL Tolapai). This PCB shows the 4 T0 ports routed to the CologneChip
XHFC-4SU. We have been cabling this PCB in a factory facility close to
Paris with good results on the quality of the cabling for 230+ parts on
our PCB with 4 layers.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Creating an independant XiVO Debian GNU/Linux repository from scratch (part 4/4)</title><link href="http://blog.xivo.io/creating-an-independant-xivo-debian-gnulinux-repository-from-scratch-part-44.html" rel="alternate"></link><updated>2011-02-22T18:19:00-05:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-02-22:creating-an-independant-xivo-debian-gnulinux-repository-from-scratch-part-44.html</id><summary type="html">&lt;h4&gt;Kernel modules support&lt;/h4&gt;
&lt;p&gt;In Debian GNU/Linux kernel modules are packaged as a &lt;code&gt;modulename-source&lt;/code&gt;
package which contains the source of the kernel module. When someone
needs a given kernel module, it is customary to invoque the
&lt;a href="http://wiki.debian.org/ModuleAssistant"&gt;module-assistant&lt;/a&gt; utility to
compile the module from sources so that it matches the currently running
kernel and install it on the fly. However, this operation requires the
installation of a full fledged development environment and this is
resource consuming. For this reason, XiVO chose to distribute binary
packages for the most common kernel flavors :
&lt;code&gt;2.6.26-2-486, 2.6.26-2-686-bigmem&lt;/code&gt; and &lt;code&gt;2.6.26-2-686&lt;/code&gt;.This logic does
not match the existing package types (named ROLES) already implemented
in packaging-farm (packages and meta-packages) and a new one was
introduced : kernel-module. Here is a sample Makefile snippet used for
&lt;code&gt;dahdi-linux&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ROLE=kernel-module
PACKAGE=dahdi-linux-modules
MODULE=dahdi-linux-source
DISTRIBUTIONS=lenny
ARCHITECTURES=i386
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The default &lt;code&gt;ROLE&lt;/code&gt; is overriden to specify that module-assistant should
be used against the designated &lt;code&gt;MODULE&lt;/code&gt; (i.e. &lt;code&gt;dahdi-linux-source&lt;/code&gt; which
is a package created from the &lt;code&gt;dahdi-linux&lt;/code&gt; source package). It will
create a binary kernel module packages for the i386/lenny combination:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;KVERS_i386_lenny=2.6.26-2-486 2.6.26-2-686-bigmem 2.6.26-2-686
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The list is hardcoded in packaging-farm. The resulting packages can be
found in their respective repositories for
&lt;a href="http://xivo.dachary.org/packaging-farm/misdn-kernel-modules/gnulinux/debian/i386/lenny/src/"&gt;misdn-kernel&lt;/a&gt;,
&lt;a href="http://xivo.dachary.org/packaging-farm/dahdi-linux-modules/gnulinux/debian/i386/lenny/src/"&gt;dahdi-linux&lt;/a&gt;
and
&lt;a href="http://xivo.dachary.org/packaging-farm/sangoma-wanpipe-modules/gnulinux/debian/i386/lenny/src/"&gt;sangoma-wanpipe&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;reprepro support&lt;/h4&gt;
&lt;p&gt;Each package created with packaging-farm has its own standalone
repository with indices created by
&lt;a href="http://www.debian.org/doc/manuals/repository-howto/repository-howto#id443712"&gt;dpkg-scanpackage&lt;/a&gt;.
They are conveniently used when packages depend on each other (see the
implementation of package dependencies in a previous post) to ensure
that the latest version is used. However, they fail to provide the
automatic architecture multiplexing provided by
&lt;a href="http://wiki.debian.org/DakHowTo"&gt;dak&lt;/a&gt; repositories. On i386 the
following line is valid&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://xivo.dachary.org/packaging-farm/dahdi-linux-modules/gnulinux/debian/i386/lenny/src&lt;/span&gt; &lt;span class="kp"&gt;./&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;but it needs to be changed to (note the x86_64)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://xivo.dachary.org/packaging-farm/dahdi-linux-modules/gnulinux/debian/x86_64/lenny/src&lt;/span&gt; &lt;span class="kp"&gt;./&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;if the architecture is different. The
&lt;a href="http://mirrorer.alioth.debian.org/"&gt;reprepro&lt;/a&gt; utility has been
&lt;a href="http://packaging-farm.dachary.org/packaging-farm/packaging-farm/lib/meta-package/reprepro.sh"&gt;added&lt;/a&gt;
as a new way to index the packages when building a &lt;code&gt;meta-package&lt;/code&gt;. It
creates a repository that is located higher in the packaging-farm
directory hierachy (immediatly above the architecture/distribut/src
part) and that could be used as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://xivo.dachary.org/packaging-farm/dahdi-linux-modules/gnulinux/debian&lt;/span&gt; &lt;span class="kp"&gt;gallifrey-lenny&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;This repository should now be a viable replacement for the official
&lt;a href="http://dak.proformatique.com/debian/dists/lenny-xivo-gallifrey-dev/"&gt;lenny-xivo-gallifrey-dev&lt;/a&gt;.
This concludes the series on building an independant repository for
XiVO. The resulting tools and the repository itself certainly need to be
polished but the serious issues (requiring more than a few hours to
overcome) have been addressed.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Back from FOSDEM2011</title><link href="http://blog.xivo.io/back-from-fosdem2011.html" rel="alternate"></link><updated>2011-02-22T15:12:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-02-22:back-from-fosdem2011.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;My impressions from this devroom :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;60+ people room always packed (with some people constraint to wait
    for the next talk outside :) )&lt;/li&gt;
&lt;li&gt;3 people from Digium able to interact with the community about the
    Asterisk project&lt;/li&gt;
&lt;li&gt;No video-streaming available as the smal devrooms were not equiped&lt;/li&gt;
&lt;li&gt;Great presentations of the Kamalilio project that seems to be used
    in the GSM and VoIP core-network&lt;/li&gt;
&lt;li&gt;People from UK, Spain, US, Germany ...&lt;/li&gt;
&lt;li&gt;Some XiVO community users coming over to exchange about their user
    experiences&lt;/li&gt;
&lt;li&gt;A link to my &lt;a href="http://carcelle.fu8.com/XiVO_IOH_Presentation_FOSDEM2011_06022011.pdf" title="XiVO IOH FOSDEM2011 Presentation"&gt;XiVO IOH FOSDEM2011
    Presentation&lt;/a&gt;
    (40mns, Latex Beamer style)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;The main feebacks from the room :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Availabiliy of more interfaces on the XiVO IPBX OpenHardware&lt;/li&gt;
&lt;li&gt;Possible interaction with the development team of XiVO IPBX&lt;/li&gt;
&lt;li&gt;Made-in-europe welcomed by the hardware geeks&lt;/li&gt;
&lt;li&gt;Possible usage of the XiVO IPBX OpenHardware for larger VoIP
    deployments&lt;/li&gt;
&lt;li&gt;Any future concurrent of CIRPACK in OpenHardware ? :)&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>Creating an independant XiVO Debian GNU/Linux repository from scratch (part 3/4)</title><link href="http://blog.xivo.io/creating-an-independant-xivo-debian-gnulinux-repository-from-scratch-part-34.html" rel="alternate"></link><updated>2011-02-21T16:48:00-05:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-02-21:creating-an-independant-xivo-debian-gnulinux-repository-from-scratch-part-34.html</id><summary type="html">&lt;h4&gt;Lenny backports&lt;/h4&gt;
&lt;p&gt;Nicolas Hicher published newer versions of the gallifrey packages
&lt;a href="https://projects.proformatique.com/issues/1942"&gt;addressing the dependency
problems&lt;/a&gt; reported last
week. They can be retrieved from the development repository&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;http://dak.proformatique.com/debian/&lt;/span&gt; &lt;span class="kp"&gt;lenny-xivo-gallifrey-dev&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All source packages were downloaded using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;awk &amp;#39;/^Package/&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;print &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;2}&amp;#39; /var/lib/apt/lists/dak.proformatique.com_debian_dists_lenny-xivo-gallifrey-dev_main_source_Sources | while read package ; do ( rm -fr &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; mkdir &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; cd &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; apt-get source &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ) ; done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the dependencies removed with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm /var/cache/packaging-farm/depends/*
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the build of all packages relaunched with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;for i in asterisk asterisk-addons asterisk-app-conference asterisk-chan-capi asterisk-chan-sccp asterisk-sounds-gsm-de-de asterisk-sounds-wav-en-us asterisk-sounds-wav-es-es asterisk-sounds-wav-fr-ca bntools dahdi-linux dahdi-tools libasterisk-perl libpri misdn-kernel misdn-user pf-asterisk-ami-aoriginate pf-asterisk-app-fax pf-asterisk-app-nv-faxdetect pf-asterisk-module-xivo pf-asterisk-prompt-fr pf-asterisk-prompt-fr-xivo pf-asterisk-prompts-xivo pf-asterisk-res-sqlite2 pf-asterisk-res-watchdog pf-asternic-stats pf-sources.list-ldlc pf-xivo pf-xivo-agid pf-xivo-backup pf-xivo-base-config pf-xivo-cti-server pf-xivo-cti-webclient pf-xivo-extra pf-xivo-fetchfw pf-xivo-lib-python pf-xivo-provisioning pf-xivo-queues-logger pf-xivo-sysconfd pf-xivo-utils pf-xivo-web-interface sangoma-wanpipe spandsp gallifrey ; do packaging-farm &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="x"&gt; ; done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Thanks to the dependency graph added to packaging-farm each package is
compiled exactly once. It would be more convenient to be able run
something like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm all
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;but such refinements are better addressed when the larger problems are
resolved.&lt;/p&gt;
&lt;h4&gt;Proformatique Debian GNU/Linux lenny packages&lt;/h4&gt;
&lt;p&gt;It is worth mentionning the existence of a lenny repository containing
packages used by the company for various purposes and not specificaly
for XiVO. It is not needed to properly create the XiVO packages and it
should never be. It can be used by including the following in the source
list:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://dak.proformatique.com/debian&lt;/span&gt; &lt;span class="kp"&gt;lenny&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;XiVO Kernel modules&lt;/h4&gt;
&lt;p&gt;A few XiVO packages provide kernel modules :
&lt;code&gt;misdn-kernel, sangoma-wanpipe, divas4linux-melware&lt;/code&gt; and &lt;code&gt;dahdi-linux&lt;/code&gt;.
The general idea is that each of the create a package designed to be
used by &lt;a href="http://wiki.debian.org/ModuleAssistant"&gt;module-assistant&lt;/a&gt;. A
kernel module is designed to be loaded in the kernel running on a
specific machine and module-assistant will help build the matching
binary from the kernel module sources. The lenny XiVO repository not
only provides sources for the module, but also supports a few kernel
flavors : &lt;code&gt;2.6.26-2-486, 2.6.26-2-686-bigmem&lt;/code&gt; and
&lt;code&gt;2.6.26-2-686&lt;/code&gt;.Unfortunately packaging-farm does not support building
binary kernel packages. It needs to be modified to add a new type to
package and meta-package : kernel-module. Instead of building a source
package, it would run module-assistant as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;module-assistant&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt; --&lt;span class="n"&gt;non-inter&lt;/span&gt; --&lt;span class="n"&gt;text-mode&lt;/span&gt; --&lt;span class="n"&gt;kvers-list&lt;/span&gt; &lt;span class="mf"&gt;2.6.26&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;486&lt;/span&gt;,&lt;span class="mf"&gt;2.6.26&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;686&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bigmem&lt;/span&gt;,&lt;span class="mf"&gt;2.6.26&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;686&lt;/span&gt; &lt;span class="n"&gt;sangoma-wanpipe-source&lt;/span&gt;
&lt;span class="n"&gt;module-assistant&lt;/span&gt; &lt;span class="n"&gt;prepare&lt;/span&gt; --&lt;span class="n"&gt;non-inter&lt;/span&gt; --&lt;span class="n"&gt;text-mode&lt;/span&gt; --&lt;span class="n"&gt;kvers-list&lt;/span&gt; &lt;span class="mf"&gt;2.6.26&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;486&lt;/span&gt;,&lt;span class="mf"&gt;2.6.26&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;686&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bigmem&lt;/span&gt;,&lt;span class="mf"&gt;2.6.26&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;686&lt;/span&gt; &lt;span class="n"&gt;sangoma-wanpipe-source&lt;/span&gt;
&lt;span class="n"&gt;KPKG_DEST_DIR&lt;/span&gt;=&lt;span class="sr"&gt;/tmp/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;SIGNCHANGES&lt;/span&gt;=&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;module-assistant&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt; --&lt;span class="n"&gt;non-inter&lt;/span&gt; --&lt;span class="n"&gt;text-mode&lt;/span&gt; --&lt;span class="n"&gt;kvers-list&lt;/span&gt; &lt;span class="mf"&gt;2.6.26&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;486&lt;/span&gt;,&lt;span class="mf"&gt;2.6.26&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;686&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bigmem&lt;/span&gt;,&lt;span class="mf"&gt;2.6.26&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;686&lt;/span&gt; &lt;span class="n"&gt;sangoma-wanpipe-source&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The sangoma-wanpipe package adds another problem : when creating the
packages, it also tries to build a binary kernel module for the kernel
on which the packaging process is run. As a consequence, when in a i386
chroot running on a amd64 host, it cannot find the corresponding kernel
headers and fails. As it is the sangoma-wanpipe package has no way to
override the kernel version chosen. A &lt;a href="https://projects.proformatique.com/issues/1977#note-1"&gt;patch was
submitted&lt;/a&gt; to
allows this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- /tmp/rules.orig     2011-02-21 15:59:23.000000000 +0100&lt;/span&gt;
&lt;span class="gi"&gt;+++ rules       2011-02-21 16:18:47.000000000 +0100&lt;/span&gt;
&lt;span class="gu"&gt;@@ -13,7 +13,12 @@&lt;/span&gt;
 KPKG_DESTDIR := $(DEB_DESTDIR)

 # fallback for XEN
&lt;span class="gd"&gt;-MA_OPTIONS=&lt;/span&gt;
&lt;span class="gi"&gt;+#MA_OPTIONS=&lt;/span&gt;
&lt;span class="gi"&gt;+DEB_KVERS=$(shell echo &amp;quot;${DEB_BUILD_OPTIONS}&amp;quot; | perl -ne &amp;#39;print $$1 if(/.*KVERS=(\S*)/)&amp;#39;)&lt;/span&gt;
&lt;span class="gi"&gt;+ifneq ($(DEB_KVERS),)&lt;/span&gt;
&lt;span class="gi"&gt;+KVERS=${DEB_KVERS}&lt;/span&gt;
&lt;span class="gi"&gt;+MA_OPTIONS=--kvers-list ${KVERS}&lt;/span&gt;
&lt;span class="gi"&gt;+endif&lt;/span&gt;
 ifeq ($(KVERS),unknown)
 KVERS=$(shell uname -r)
 MA_OPTIONS=--kvers-list $(KVERS)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;so that packaging can be done with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DEB_BUILD_OPTIONS=KVERS=2.6.26-2-486 dpkg-buildpackage
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A better solution would be to propose a patch to the author of the
package to completly disablethe build of a binary kernel module. It is
unclear where the original package comes from an amail was sent to Nenad
Corbic &amp;lt;ncorbic@sangoma.com&amp;gt; reporting the patch and asking for
information.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Creating an independant XiVO Debian GNU/Linux repository from scratch (part 2/4)</title><link href="http://blog.xivo.io/creating-an-independant-xivo-debian-gnulinux-repository-from-scratch-part-24.html" rel="alternate"></link><updated>2011-02-14T17:20:00-05:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-02-14:creating-an-independant-xivo-debian-gnulinux-repository-from-scratch-part-24.html</id><summary type="html">&lt;h4&gt;Source package dependencies&lt;/h4&gt;
&lt;p&gt;The&lt;a href="http://xivo.dachary.org/packaging-farm/misdn-user/gnulinux/debian/i386/lenny/src/"&gt;misdn-user&lt;/a&gt;package
depends on
the&lt;a href="http://xivo.dachary.org/packaging-farm/misdn-kernel/gnulinux/debian/i386/lenny/src/"&gt;misdn-kernel&lt;/a&gt;package.
Therefore, when misdn-kernel is updated, it may be necessaryto rebuild
the misdn-user package. There are no standard DebianGNU/Linux tools to
compute the dependency graph between two source packages. And it's not
astrivial as it seems, mainly because a source package creates one or
more binary packages.For instance misdn-user depends on misdn-headers
which is created by the misdn-kernel package.A
&lt;a href="http://packaging-farm.dachary.org/packaging-farm/packaging-farm/lib/debian/depends.sh"&gt;script&lt;/a&gt;
wascreated to compute the source package dependencies. Its input is a
set of debian/control filesand its output is a set of Makefile rules
such as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;misdn-kernel ::
misdn-user ::  misdn-kernel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note the &lt;em&gt;::&lt;/em&gt; which allows for additional dependencies to appear later
in the Makefile. Thisgraph is abstract and would not be of any use
unless it is associated to actions such as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;misdn-kernel :: /var/cache/packaging-farm/depends/misdn-kernel
/var/cache/packaging-farm/depends/misdn-kernel :: /var/cache/packaging-farm/sources/misdn-kernel/*/debian/control
        packaging-farm --cd misdn-kernel all
        touch $@
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The
&lt;a href="http://packaging-farm.dachary.org/packaging-farm/packaging-farm/lib/debian/depends.sh"&gt;depend.sh&lt;/a&gt;
script createsthe above snippet for each package. The
&lt;code&gt;packaging-farm --cd misdn-kernel all&lt;/code&gt; command creates all the
packagesfor misdn-kernel. If it succeeds, the
&lt;code&gt;/var/cache/packaging-farm/depends/misdn-kernel&lt;/code&gt; timestamp is updatedand
the package is considered up to date. When a newer version of the
package is uploaded to the
&lt;code&gt;/var/cache/packaging-farm/sources/misdn-kernel&lt;/code&gt;directory, the
&lt;code&gt;/var/cache/packaging-farm/sources/misdn-kernel/*/debian/control&lt;/code&gt; file
will have a modificationtime more recent than the timestamp, thus
triggering the rebuild of all depending packages in the graph.&lt;/p&gt;
&lt;p&gt;The last set of lines created by depend.sh are source lists that allow
each package to gain access to themost recently built version of the
other packages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;define debian_SOURCE_LIST_APPEND
echo &amp;quot;deb http://localhost/packaging-farm/misdn-kernel/gnulinux/debian/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;ARCHITECTURE&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;DISTRIBUTION&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/src ./&amp;quot; &amp;gt;&amp;gt; $$source_list ; \\
echo &amp;quot;deb http://localhost/packaging-farm/misdn-user/gnulinux/debian/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;ARCHITECTURE&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;DISTRIBUTION&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/src ./&amp;quot; &amp;gt;&amp;gt; $$source_list ; \\
: finished
endef
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It would be tempting to ensure that each package is given the source
list it needs and nothing more. However, unlessthe number of packages
handled on a single packaging farm grows over 100, it is probably
overkill. There are lessthan 50 package currently in XiVO.&lt;/p&gt;
&lt;p&gt;A &lt;a href="http://packaging-farm.dachary.org/download/packaging-farm_1.2.30.dsc"&gt;new version of
packaging-farm&lt;/a&gt;
was published today, including support fordependencies, so that it can
be used to continue building a standalone XiVO repository.&lt;/p&gt;
&lt;h4&gt;XiVO repository for i386 and x86_64&lt;/h4&gt;
&lt;p&gt;With the newer installation of the packaging-farm including dependency
handling, another attempt to createa i386 based gallifrey repository for
lenny was made. For each package a command similar to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;packaging-farm misdn-kernel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;was run. It is using the dependency graph to build the package and all
the packages it depends on before it.In the end a few packages could not
be built. Some of them because of trivial dependency problems thatwere
&lt;a href="https://projects.proformatique.com/issues/1942"&gt;reported to Nicolas
Hicher&lt;/a&gt; who agreed to
fix them momentarily.Another, more serious, is found in the
sangoma-wanpipe package. It relates to the fact that it pulls
dependenciesbased on the kernel flavor. The native host is amd64 /
x86_64 based and it fails when attempting to build in a i386chroot.
There probably are workarounds already implemented and looking into
pbuilder is probably the best lead.The &lt;a href="http://xivo.dachary.org/packaging-farm/gallifrey/gnulinux/debian/i386/lenny/src/"&gt;i386 gallifrey
repository&lt;/a&gt;
nowcontains more packages and there should be no major obstacle to
complete it once the dependency and architecture problemsare
resolved.Nicolas Hicher is almost done with porting the &lt;a href="http://dak.proformatique.com/debian/dists/squeeze-xivo-skaro-dev/"&gt;skaro XiVO
packages to
squeeze&lt;/a&gt;.
An attempt was made to buildthem for x86_64. The &lt;a href="http://xivo.dachary.org/packaging-farm/skaro/gnulinux/debian/x86_64/squeeze/src/"&gt;result is still
incomplete&lt;/a&gt;
but it should run when the last dependency problems are resolved.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO is everywhere part 3 !</title><link href="http://blog.xivo.io/xivo-is-everywhere-part-3.html" rel="alternate"></link><updated>2011-02-11T13:59:00-05:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2011-02-11:xivo-is-everywhere-part-3.html</id><summary type="html">&lt;p&gt;Hello, it's cold (-15), it's winter but XiVO is always here !&lt;/p&gt;
&lt;p&gt;&lt;img alt="sylvain_xivo.png" src="/public/.sylvain_xivo_m.jpg" title="sylvain_xivo.png, fév. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;Special for you Bertrand ;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_20110211_144454.jpg" src="/public/.IMG_20110211_144454_m.jpg" title="IMG_20110211_144454.jpg, fév. 2011" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>New statistic XiVO modules</title><link href="http://blog.xivo.io/new-statistic-xivo-modules.html" rel="alternate"></link><updated>2011-02-11T01:49:00-05:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2011-02-11:new-statistic-xivo-modules.html</id><summary type="html">&lt;p&gt;I'm very proud to announce our &lt;strong&gt;new statistics module for XiVO&lt;/strong&gt;.
Please see a first screenshot of this module below :&lt;/p&gt;
&lt;p&gt;&lt;img alt="stats.png" src="/public/.stats_m.jpg" title="stats.png, fév. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;As you can see, we have integrated a full statistic module for our next
major version, Skaro. All existing statistics queues in Asterisk (GPLv3)
are not really usable and not suitable for a call center. Our previous
version is using Asternic with a lack of performances in the free
software version and namely in terms if counters from our customers
point of view.&lt;/p&gt;
&lt;p&gt;We are implementing a cache system to have real-time results and stats.
The Asterisk queue CSV files can be importable within this module. In
order to produce graphics, we are using the jqplot library that gives us
very decent results.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Creating an independant XiVO Debian GNU/Linux repository from scratch (part 1/4)</title><link href="http://blog.xivo.io/creating-an-independant-xivo-debian-gnulinux-repository-from-scratch-part-14.html" rel="alternate"></link><updated>2011-02-07T21:40:00-05:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-02-07:creating-an-independant-xivo-debian-gnulinux-repository-from-scratch-part-14.html</id><summary type="html">&lt;h4&gt;Extracting XiVO Gallifrey for Debian lenny&lt;/h4&gt;
&lt;p&gt;After creating a virtual machine based on the recently published
DebianGNU/Linux squeeze, packaging-farm is installed from the
repository. Anothersource is added to extract the XiVO packages in
source form. Here we focuson &lt;em&gt;main&lt;/em&gt; but the same principle can be done
for others.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://dak.proformatique.com/debian/&lt;/span&gt; &lt;span class="kp"&gt;lenny-xivo-gallifrey&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;http://dak.proformatique.com/debian/&lt;/span&gt; &lt;span class="kp"&gt;lenny-xivo-gallifrey&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;packaging-farm expects to find package sources in
/var/cache/packaging-farm/sourceswithin a directory that is named after
the package. This hierarchy was build withthe following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;awk &amp;#39;/^Package/&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;print &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;2}&amp;#39; /var/lib/apt/lists/dak.proformatique.com_debian_dists_lenny-xivo-gallifrey_main_source_Sources | &lt;/span&gt;
&lt;span class="x"&gt;while read package &lt;/span&gt;
&lt;span class="x"&gt;do &lt;/span&gt;
&lt;span class="x"&gt;  ( rm -fr &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; mkdir &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; cd &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; ; apt-get source &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="x"&gt; )&lt;/span&gt;
&lt;span class="x"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In addition, a list of all known packages must be added to
/etc/packaging-farm/packaging-farm.conf and a variable containing the
directory where the chroot must be stored. The chroot is preserved if
the build fail, for debuging purpose. To keep the structure consistent,
a directory named after the package is created in /usr/src
(/usr/src/asterisk, /usr/src/dahdi-linux etc.). Each directory must
contain a Makefile that may contain exceptions or additional build
instructions for the farm. Since there is no need for such tweaking at
the moment, the Makefiles are generated:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for package in asterisk asterisk-addons asterisk-app-conference asterisk-chan-capi asterisk-chan-sccp asterisk-sounds-gsm-de-de asterisk-sounds-wav-en-us asterisk-sounds-wav-es-es asterisk-sounds-wav-fr-ca bntools dahdi-linux dahdi-tools libasterisk-perl libpri misdn-kernel misdn-user pf-asterisk-ami-aoriginate pf-asterisk-app-fax pf-asterisk-app-nv-faxdetect pf-asterisk-module-xivo pf-asterisk-prompt-fr pf-asterisk-prompt-fr-xivo pf-asterisk-prompts-xivo pf-asterisk-res-sqlite2 pf-asterisk-res-watchdog pf-asternic-stats pf-sources.list-ldlc pf-xivo pf-xivo-agid pf-xivo-backup pf-xivo-base-config pf-xivo-cti-server pf-xivo-cti-webclient pf-xivo-extra pf-xivo-fetchfw pf-xivo-lib-python pf-xivo-provisioning pf-xivo-queues-logger pf-xivo-sysconfd pf-xivo-utils pf-xivo-web-interface sangoma-wanpipe spandsp ; do
cat &amp;gt; /usr/src/&lt;span class="nv"&gt;$package&lt;/span&gt;/Makefile &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="na"&gt;PACKAGE=&lt;/span&gt;&lt;span class="s"&gt;$package&lt;/span&gt;
&lt;span class="na"&gt;DISTRIBUTIONS=&lt;/span&gt;&lt;span class="s"&gt;lenny&lt;/span&gt;
&lt;span class="na"&gt;ARCHITECTURES=&lt;/span&gt;&lt;span class="s"&gt;i386&lt;/span&gt;
&lt;span class="err"&gt;LIBDIR&lt;/span&gt; &lt;span class="err"&gt;?=&lt;/span&gt; &lt;span class="err"&gt;/usr/lib/packaging-farm&lt;/span&gt;
&lt;span class="err"&gt;include&lt;/span&gt; &lt;span class="err"&gt;\${LIBDIR}/Makefile&lt;/span&gt;
&lt;span class="err"&gt;EOF&lt;/span&gt;
&lt;span class="err"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Source package dependencies&lt;/h4&gt;
&lt;p&gt;The packaging-farm does not know anything about source package
dependencies. For instance a number of XiVO packages depend on asterisk,
therefore they need to be rebuilt if a new asterisk package is
published. In preparation for a patch submission to add support for
source package dependencies, a set of shell commands have been performed
to generate a set of dependencies written as Makefile entries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;these&lt;/span&gt; &lt;span class="nt"&gt;lines&lt;/span&gt; &lt;span class="nt"&gt;are&lt;/span&gt; &lt;span class="nt"&gt;approximations&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;won&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t work out of the box&lt;/span&gt;
&lt;span class="s1"&gt;# list all packages for each source package&lt;/span&gt;
&lt;span class="s1"&gt;cat  */*/debian/control | perl -ne &amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1|&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;/^&lt;/span&gt;&lt;span class="nt"&gt;Package&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;*(.*)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;*//)&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;# map package to corresponding source package&lt;/span&gt;
&lt;span class="s1"&gt;cat /tmp/list_of_source_packages | while read package ; do cat $package/*/debian/control | perl -ne &amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;.&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;_&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;g&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1=&amp;#39;$package&amp;#39;\&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;/^&lt;/span&gt;&lt;span class="nt"&gt;Package&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;*(.*)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;*//)&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; ; done&lt;/span&gt;
&lt;span class="s1"&gt;# create the makefile entries&lt;/span&gt;
&lt;span class="s1"&gt;for package in asterisk asterisk-addons asterisk-app-conference asterisk-chan-capi asterisk-chan-sccp asterisk-sounds-gsm-de-de asterisk-sounds-wav-en-us asterisk-sounds-wav-es-es asterisk-sounds-wav-fr-ca bntools dahdi-linux dahdi-tools libasterisk-perl libpri misdn-kernel misdn-user pf-asterisk-ami-aoriginate pf-asterisk-app-fax pf-asterisk-app-nv-faxdetect pf-asterisk-module-xivo pf-asterisk-prompt-fr pf-asterisk-prompt-fr-xivo pf-asterisk-prompts-xivo pf-asterisk-res-sqlite2 pf-asterisk-res-watchdog pf-asternic-stats pf-sources.list-ldlc pf-xivo pf-xivo-agid pf-xivo-backup pf-xivo-base-config pf-xivo-cti-server pf-xivo-cti-webclient pf-xivo-extra pf-xivo-fetchfw pf-xivo-lib-python pf-xivo-provisioning pf-xivo-queues-logger pf-xivo-sysconfd pf-xivo-utils pf-xivo-web-interface sangoma-wanpipe spandsp ; do echo -n &amp;quot;$package :: &amp;quot; ; perl -ne &amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(/^&lt;/span&gt;&lt;span class="nt"&gt;Build-Depends&lt;/span&gt;&lt;span class="o"&gt;/)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mp3&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ooh323c&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;conference&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;conference&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dbg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sounds&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vmail&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;classic&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;classic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dbg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;capi&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;capi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dbg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sccp&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sccp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dbg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sounds&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gsm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sounds&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wav&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;us&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sounds&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wav&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;es&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;es&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sounds&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wav&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;bntools&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bnfos&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;dahdi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;dahdi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;dahdi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;dahdi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libtonezone1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libtonezone&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libasterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;perl&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libpri&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libpri1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;misdn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;misdn&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;misdn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;misdn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;misdn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dbg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libmisdn0&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libmisdn&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libisdnnet0&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libisdnnet&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ami&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aoriginate&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fax&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fax&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dbg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nv&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;faxdetect&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;prompt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;prompt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;prompt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;prompt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sqlite2&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sqlite2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dbg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;watchdog&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;asternic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sources&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ldlc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gallifrey&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;agid&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;backup&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cti&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cti&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webclient&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fetchfw&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;provisioning&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;queues&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sysconfd&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xivo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;sangoma&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wanpipe&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;sangoma&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dbg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;sangoma&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wanpipe&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libspandsp3&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libspandsp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libspandsp3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dbg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;libspandsp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1\&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;lt; /var/cache/packaging-farm/sources/$package/*/debian/control | sort -u | while read source ; do echo -n &amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; ; eval echo -n \$$(echo $source | sed -e &amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;.&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;_&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;g&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;done&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;created:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# level 4
pf-asterisk-ami-aoriginate ::  asterisk
pf-asterisk-app-fax ::  asterisk spandsp
pf-asterisk-app-nv-faxdetect ::  asterisk
pf-asterisk-module-xivo ::  asterisk
pf-asterisk-res-sqlite2 ::  asterisk
pf-asterisk-res-watchdog ::  asterisk
asterisk-addons ::  asterisk
asterisk-app-conference ::  asterisk
asterisk-chan-capi ::  asterisk
asterisk-chan-sccp ::  asterisk
bntools ::  asterisk
# level 3
asterisk ::  dahdi-linux misdn-user libpri dahdi-tools misdn-kernel
# level 2
dahdi-tools ::  dahdi-linux
sangoma-wanpipe ::  dahdi-linux
misdn-user ::  misdn-kernel
# level 1
asterisk-sounds-gsm-de-de asterisk-sounds-wav-en-us asterisk-sounds-wav-es-es asterisk-sounds-wav-fr-ca dahdi-linux libasterisk-perl libpri misdn-kernel pf-asterisk-prompt-fr pf-asterisk-prompt-fr-xivo pf-asterisk-prompts-xivo pf-asternic-stats pf-sources.list-ldlc pf-xivo pf-xivo-agid pf-xivo-backup pf-xivo-base-config pf-xivo-cti-server pf-xivo-cti-webclient pf-xivo-extra pf-xivo-fetchfw pf-xivo-lib-python pf-xivo-provisioning pf-xivo-queues-logger pf-xivo-sysconfd pf-xivo-utils pf-xivo-web-interface spandsp  ::
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The dependencies were used to figure out the manual order in which the
packages must be built. After checking that all packages without
dependencies could be successfully built
(&lt;a href="http://xivo.dachary.org/packaging-farm/misdn-kernel/gnulinux/debian/i386/lenny/src/"&gt;misdn-kernel&lt;/a&gt;,
&lt;a href="http://xivo.dachary.org/packaging-farm/dahdi-linux/gnulinux/debian/i386/lenny/src/"&gt;dahdi-linux&lt;/a&gt;
and &lt;a href="http://xivo.dachary.org/packaging-farm/"&gt;more&lt;/a&gt;), the idea was to
encode the dependencies in the Makefile for each package.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;for i in asterisk-sounds-gsm-de-de asterisk-sounds-wav-en-us asterisk-sounds-wav-es-es asterisk-sounds-wav-fr-ca dahdi-linux libasterisk-perl libpri misdn-kernel pf-asterisk-prompt-fr pf-asterisk-prompt-fr-xivo pf-asterisk-prompts-xivo pf-asternic-stats pf-sources.list-ldlc pf-xivo pf-xivo-agid pf-xivo-backup pf-xivo-base-config pf-xivo-cti-server pf-xivo-cti-webclient pf-xivo-extra pf-xivo-fetchfw pf-xivo-lib-python pf-xivo-provisioning pf-xivo-queues-logger pf-xivo-sysconfd pf-xivo-utils pf-xivo-web-interface spandsp  ; do ( echo --------------------------- ; echo &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="x"&gt; ; cd &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="x"&gt; ; make all ) ; done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In packaging-farm, when a package is built, a new debian repository is
created just for this package and only contains its package. In the case
of misdn-user the repository of misdn-kernel (see above : it depends on
it) would need to be added to the description of the misdn-user package.
Although this may be fine for a few packages, four level of dependencies
makes it tedious and error prone. It would be unwise to try it manually.&lt;/p&gt;
&lt;h4&gt;Aggregation of the results&lt;/h4&gt;
&lt;p&gt;XiVO is made of dozens of packages and it would be most inconvenient to
add so many lines to a source list. Instead, a &lt;a href="http://xivo.dachary.org/packaging-farm/gallifrey/Makefile"&gt;galifrey meta
package&lt;/a&gt; is
created in the packaging-farm with the sole purpose of copying all
packages in a &lt;a href="http://xivo.dachary.org/packaging-farm/gallifrey/gnulinux/debian/i386/lenny/src/"&gt;single
repository&lt;/a&gt;.
The following line could be added to a virgin Debian GNU/linux lenny
source list and should now be equivalent to its counterpart on
http://dak.proformatique.com/debian/&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://xivo.dachary.org/packaging-farm/gallifrey/gnulinux/debian/i386/lenny/src/&lt;/span&gt; &lt;span class="kp"&gt;./&lt;/span&gt;
&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;http://xivo.dachary.org/packaging-farm/gallifrey/gnulinux/debian/i386/lenny/src/&lt;/span&gt; &lt;span class="kp"&gt;./&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Implementing dependency handling in packaging-farm&lt;/h4&gt;
&lt;p&gt;Although an i386 repository is now available for the XiVO packages which
solely depend on Debian GNU/Linux lenny, it would be tedious to manually
arrange the packaging-farm to accomodate for the four level of
dependencies. Instead packaging-farm should be modified to handle
interdepencies of packages. Although it would be possible to arrange for
the other operations to be supported by a specific tool (for instance
importing all the packages from a known repository), such an operation
is not frequent and the time to properly write such a tool and make sure
it works as expected probably outweights the benefit.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO client packaging, server source policy and packaging-farm updates</title><link href="http://blog.xivo.io/xivo-client-packaging-server-source-policy-and-packaging-farm-updates.html" rel="alternate"></link><updated>2011-01-31T17:39:00-05:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-01-31:xivo-client-packaging-server-source-policy-and-packaging-farm-updates.html</id><summary type="html">&lt;h4&gt;XiVO Qt client packaging&lt;/h4&gt;
&lt;p&gt;The resulting packages are then uploaded to a directory that depends on
the operating system :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://downloads.xivo.fr/xivo_cti_client/linux/debian/"&gt;Debian GNU/Linux i386 and
    amd64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://downloads.xivo.fr/xivo_cti_client/win32/"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://downloads.xivo.fr/xivo_cti_client/macos/"&gt;MacOsX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Debian GNU/Linux packages are created by a &lt;a href="http://git.proformatique.com/?p=official/xivo-client-qt.git;a=blob;f=cross/installer.sh"&gt;custom
script&lt;/a&gt;
that builds the binary .deb file using the binary produced by the
compilation. There is no corresponding source package. The MacOsX .dmg
are created by a &lt;a href="http://git.proformatique.com/?p=official/xivo-client-qt.git;a=blob;f=cross/build_config/on-MacOsX-SnowLeopard"&gt;custom
script&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Windows .exe are created by a
&lt;a href="http://en.wikipedia.org/wiki/Nullsoft_Scriptable_Install_System"&gt;NSIS&lt;/a&gt;
&lt;a href="http://git.proformatique.com/?p=official/xivo-client-qt.git;a=blob;f=cross/installer_config/win32-shared"&gt;script&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Other XiVO clients&lt;/h4&gt;
&lt;p&gt;The XiVO web interface is made of a JQuery based
&lt;a href="http://git.proformatique.com/?p=official/xivo-client-web.git"&gt;webapp&lt;/a&gt;
relying on web services provided by the XiVO server. It is not packaged
on its own : when the user connects to the PHP based web interface (as
found in the web-interface directory of the &lt;a href="http://git.xivo.fr/xivo-skaro.git/"&gt;git
repository&lt;/a&gt;) the browser loads it as
a side effect.&lt;/p&gt;
&lt;p&gt;The XiVO android client is packaged using the Eclipse based toolkit.&lt;/p&gt;
&lt;h4&gt;XiVO server packaging source policy&lt;/h4&gt;
&lt;p&gt;The &lt;a href="http://git.xivo.fr/"&gt;XiVO server sources&lt;/a&gt; and the corresponding
Debian GNU/Linux packaging instructions follow an undocumented policy.
The SVN respository containing the packaging instructions is not
published but it can be re-constructed from the Debian GNU/Linux
directories found in the source packages of the &lt;a href="http://dak.proformatique.com/debian/"&gt;XiVO Debian GNU/Linux
repository&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All packages authored by Avencall start with the pf- prefix (for
    instance pf-xivo-fetchfw)&lt;/li&gt;
&lt;li&gt;The Debian GNU/Linux package of third party packages (asterisk
    for instance) is a fork of the official package that may or may not
    be synchronized with it. In particular patches applied to the
    upstream in Debian GNU/Linux may or may not be applied in the
    XiVO distribution.&lt;/li&gt;
&lt;li&gt;A third party package source tree is made of (take a look at the
    freeswitch directory of the &lt;a href="http://git.xivo.fr/xivo-skaro.git/"&gt;git
    repository&lt;/a&gt; for an example):&lt;ul&gt;
&lt;li&gt;tarballs that contains all past and current source archives&lt;/li&gt;
&lt;li&gt;fetch_tarball.sh that will get the latest source archive from
    the official source and place it in the tarballs directory&lt;/li&gt;
&lt;li&gt;Makefile.pkg that contains the name of the directory in
    the (unpublished) SVN repository containing the debian package
    (for freeswitch it is : DEB_PKG = "freeswitch")&lt;/li&gt;
&lt;li&gt;prepare_test_sources.sh is a script that:&lt;ul&gt;
&lt;li&gt;unpacks the source archive&lt;/li&gt;
&lt;li&gt;apply the patches (which may be in the debian directory or
    in the source directory) (freeswitch has no patch although
    it contains a call to quilt)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An unpublished tool has been used consistently over the years and rely
on this policy. The purpose of this tool is essentially the same as the
Debian GNU/Linux
&lt;a href="http://wiki.debian.org/DebianWannaBuildInfrastructure"&gt;WannaBuild&lt;/a&gt; or
&lt;a href="https://launchpad.net/"&gt;launchpad&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;packaging-farm multi architecture support&lt;/h4&gt;
&lt;p&gt;A new release of &lt;a href="http://packaging-farm.dachary.org"&gt;packaging-farm&lt;/a&gt; was
published Sunday 30 January, including the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic multi-architecture support : i386 and x86_64 are supported
    when running the packaging-farm on an x86_64 platform. It should
    ultimately rely on a slave virtual machine, either running localy or
    on a remote machine.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Support for the currently active
    &lt;a href="https://wiki.ubuntu.com/Releases"&gt;ubuntu&lt;/a&gt; releases.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is still unclear how packaging-farm could be used to create
multi-distribution and multi-architecture packages for XiVO and that
will be my focus for the following weeks.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO server packaging in a nutshell</title><link href="http://blog.xivo.io/xivo-server-packaging-in-a-nutshell.html" rel="alternate"></link><updated>2011-01-24T18:41:00-05:00</updated><author><name>dachary</name></author><id>tag:blog.xivo.io,2011-01-24:xivo-server-packaging-in-a-nutshell.html</id><summary type="html">&lt;p&gt;Nicolas Hicher is the XiVO release manager that make it happen. His
input comes from a number of sources which are gradually migrated toward
a set of git repositories which will become a central place:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git://git.xivo.fr/xivo-dalek.git for old stable&lt;/li&gt;
&lt;li&gt;git://git.xivo.fr/xivo-gallifrey.git for stable&lt;/li&gt;
&lt;li&gt;git://git.xivo.fr/xivo-skaro.git for unstable&lt;/li&gt;
&lt;li&gt;http://git.proformatique.com/ debian fai and XiVO Qt, Web, Android
    clients and more&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;About ten developers have write access to commit their work on these
repositories. In addition to their daily workload, they integrate
patches andbug fixes contributed to the &lt;a href="https://projects.proformatique.com/projects/xivo/issues"&gt;XiVO
redmine&lt;/a&gt;.Nicolas
maintains packaging tools deployed on a few virtual machines which
purpose are to produce a &lt;a href="http://dak.proformatique.com/debian/"&gt;useable Debian
repository&lt;/a&gt;. Although it is
currently updated with &lt;a href="http://wiki.debian.org/DakHowTo"&gt;dak&lt;/a&gt; it is
complicated to maintain and will be migrated to
&lt;a href="http://mirrorer.alioth.debian.org/"&gt;reprepro&lt;/a&gt; which is easier to deploy
and maintain.&lt;/p&gt;
&lt;p&gt;The general idea is to follow the Debian philosophy with regard to
maintaining stable distributions :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the unstable (skaro) distribution roughly matches the Debian testing
    distribution: it has been tried to be installable and roughly
    functional, but it contains newly implemented features that may
    require bug fixing when facing real world usage.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;the stable (Gallifrey) distribution is only updated for security
    purposes, with the exception of newer asterisk versions.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;the old stable (dalek) distribution is kept for historical purposes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Debian unstable equivalent is the playground of the ten developers
and there is no public URL for it. When one of them wants to update a
package that is being actively developed, he logs in one of the virtual
machines maintained by Nicolas, types a few command to create "dev"
packages. All the developers use deb packaged based operating systems
(Debian GNU/Linux or Ubuntu) and their source list points to the
repositories located on the virtual machines where the "dev" packages
are created. When one of the developers breaks a package, the others are
quick to pick on it. This is both a curse (when it disrupts their work)
and a blessing (because there is a continuous check of the distribution
consistency). In order to help maintain the consistency of the
distribution, strict version dependency is enforced between packages :
if version 1.4.6 is required, version 1.4.7 will be rejected although it
is presumably backward compatible. This policy may be relaxed in the
future at the cost of extra care to ensure backward compatibility.&lt;/p&gt;
&lt;p&gt;When the developers are satisfied with the state of the XiVO
distribution, they declare it a release and set a corresponding git
branch (formerly a SVN tag). Nicolas notifies the production (i.e. the
people ensuring that all deployed XiVO installation can rely on the
stability of the existing repositories) that the skaro distribution
(i.e. http://dak.proformatique.com/debian/dists/lenny-xivo-skaro-dev/)
will be broken while the development packages are migrated to skaro. He
then proceeds with the update and tests the resulting repository by
performing an &lt;a href="https://wiki.xivo.fr/index.php/XiVO_1.1-Gallifrey/Install_XiVO_From_Scratch"&gt;installation from
scratch&lt;/a&gt;
on a virtual machine via PXE. If the virtual machine indeed contains the
expected packages and that the web interface displays, the production
team is notified and does additional tests before launching upgrades
where relevant.&lt;/p&gt;
&lt;p&gt;When a packaging problem is found, either by the production team or by
the developers, Nicolas is responsible for fixing it. If a new software
is being deployed, Nicolas is also responsible for creating the
corresponding package from scratch. More often than not, a problem
requires an emergency fix by the developers shortly after a new release
is put in production. In which case the whole process outlined above
needs to be done again.&lt;/p&gt;
&lt;p&gt;The packaging process is evolving continuously and the following
improvements are being considered:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adding RPM based packages&lt;/li&gt;
&lt;li&gt;adding support for x86_64 and leave room for more architectures&lt;/li&gt;
&lt;li&gt;deploy a reprepro repository to replace
    http://dak.proformatique.com/debian&lt;/li&gt;
&lt;li&gt;publish and document XiVO packaging tools&lt;/li&gt;
&lt;li&gt;Debian GNU/Linux squeeze support&lt;/li&gt;
&lt;li&gt;move as much as possible from the package to the source tree : some
    packages contain so much knowledge that installing from sources is
    difficult and is a serious obstacle for people running distributions
    which are not explicitly supported&lt;/li&gt;
&lt;li&gt;improve and document the creation of CD based distributions and
    ready to use virtual machines&lt;/li&gt;
&lt;li&gt;if a single machine is used to build packages, allow to build
    multiple packages in parallel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With these in mind, the following use case should be available to XiVO
developers and packagers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;developer side: I'm working alone on my code, it is perfect, ready
    for production. I build the package (or the whole
    corresponding suite) and I publish the package in the corresponding
    development repository, so that it is available for
    other developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;developer side: I'm not the only one working on the code (or I know
    my work is not satisfactory) but I want to test a killer feature. I
    build the package and publish it on my private repository and I can
    test it without impacting other developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;packager side: the developers did a lot of work and there are many
    bug fixes, asterisk version 3 has been published and chan_sccp
    is stable. I build a full release ( tag + build + publish on a
    release candidate repository ). The production team runs tests
    suites and find bugs that are patched by the developers and propose
    new packages. When the loop stabilizes, the release candidate
    replaces the production.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;packager side: a new package is to be built, it must be added on
    all repositories. The developer responsible for the code provides
    all the information to:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;** build the package (dependencies, location of all files etc).&lt;/p&gt;
&lt;p&gt;** a HOWTO explaining how to test that the resulting software is
working. It needs not be 100% tests but should cover the basics. A
command --version returning the version number is better than nothing.&lt;/p&gt;
&lt;p&gt;The analysis of the existing XiVO release management practices and
prospects reveal patterns that are common to a number of software
publishers. At least those who are best served by deploying a dedicated
distribution (repository, ISO or VM) rather than a single software
package. They are in many ways identical to wide spread distributions
such as Ubuntu or Debian GNU/Linux with a fundamental difference: it is
cross distributions (Fedora, Gentoo, Debian GNU/Linux, Suse ...).&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://packaging-farm.dachary.org/"&gt;packaging-farm&lt;/a&gt; tool has been
developed to address this specific issue and will be used as a base to
help implement the above features. It is based on the following ideas:&lt;/p&gt;
&lt;h4&gt;The input of the farm is a package and its output are repositories for the target distributions.&lt;/h4&gt;
&lt;p&gt;A Debian GNU/Linux package is a well defined format to transport
software and packaging instructions. Using it to feed the farm saves the
need to define custom conventions. The same goes for the output of the
farm : all distributions define a format to store collections of
packages, in source and binary forms.&lt;/p&gt;
&lt;h4&gt;The environment of a failed package attempt is preserved for debugging.&lt;/h4&gt;
&lt;p&gt;Each package is built in an pristine environment to minimize side
effects due to previous executions. This environment (chroot or virtual
machine) is destroyed if the packaging operation is a success. It is
preserved if the package fail and the maintainer can chroot or ssh into
it to figure out and fix the problem.&lt;/p&gt;
&lt;h4&gt;A farm can be stacked on top of others.&lt;/h4&gt;
&lt;p&gt;This really is a property of the fact that each farm creates a well
formed repository for each distribution. A given farm can either build a
package that has been submitted to it and put the result in its output
repository. Or it can copy the content of the repository of a child farm
into its own. For instance, a production farm/repository can be made a
parent of a release candidate farm/repository. When the release
candidate repository is declared final, the production farm/repository
copies the content of the release candidate farm/repository into its
own.&lt;/p&gt;
&lt;h4&gt;A farm delegates the work to a slave machine.&lt;/h4&gt;
&lt;p&gt;The farm creates environments (aufs based chroots and possibly lxc or
kvm based virtual machines) and submits a source package for building.
It does not assume the native operating system is able to build any kind
of package itself. If a farm runs on a given operating system, it may be
easier to delegate the actual building of the package to a virtual
machine running the native operating system for the targeted
distribution.&lt;/p&gt;
&lt;h4&gt;All package specifications must be maintained manually.&lt;/h4&gt;
&lt;p&gt;It is difficult to create a package from a given distribution
automatically based on the package specification from another
distribution. The farm does not support this kind of tool.&lt;/p&gt;
&lt;p&gt;The implementation is heavily based on Makefiles because it mostly
handles a chain of dependencies for which they are best suited. The
supporting scripts are shell based because it is the language of choice
for Makefiles.&lt;/p&gt;
&lt;p&gt;The XiVO client is being packaged by kaou (nick on irc.freenode.net) and
is not covered here. Nor is the process to create virtual machines or
ISO based distributions.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Presenting the XiVO IPBX OpenHardware at FOSDEM2011 - OpenSourceTelephony devroom</title><link href="http://blog.xivo.io/presenting-the-xivo-ipbx-openhardware-at-fosdem2011-opensourcetelephony-devroom.html" rel="alternate"></link><updated>2011-01-14T14:47:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-01-14:presenting-the-xivo-ipbx-openhardware-at-fosdem2011-opensourcetelephony-devroom.html</id><summary type="html">&lt;p&gt;&lt;img alt="FOSDEM2011
logo" src="/public/.logofosdem2_m.jpg" title="FOSDEM2011 logo, janv. 2011" /&gt;  &lt;/p&gt;
&lt;p&gt;This is a great pleasure to announce that we will presenting the XiVO
IPBX OpenHardware project at &lt;a href="http://fosdem.org/2011/"&gt;FOSDEM 2011&lt;/a&gt;
during the OpenSourceTelephony devroom on Sunday February 6th 2011 in
Brussels.&lt;strong&gt;FOSDEM is definitely the largest OpenSource developers
conference in Europe&lt;/strong&gt; nowadays and a perfect place to present the
different OpenHardware projects pushing more and more open-ness in the
telecommunications and hardware field.We will be presenting the talk
among other topics related to the telephony system during the devroom.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="FOSDEM 2011
brain" src="/public/.FOSDEM-2011_reduced_medium_m.jpg" title="FOSDEM 2011 brain, janv. 2011" /&gt;  &lt;/p&gt;
&lt;p&gt;The OpenSource telephony devroom is organized by Russel Bryant from
Digium. The program is available from &lt;a href="http://www.russellbryant.net/blog/2010/12/22/open-source-telephony-fosdem-2011/"&gt;Russel's
blog&lt;/a&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduction to Asterisk Developement”, Russell Bryant&lt;/li&gt;
&lt;li&gt;Digital PSTN Connectivity with Asterisk”, Jakub Klausa&lt;/li&gt;
&lt;li&gt;Mobicents 2.0, The Open Source Java Communication Platform”, Jean
    Deruelle&lt;/li&gt;
&lt;li&gt;Scaling location services in large SIP networks with Kamailio”,
    Henning Westerholt, Marius Zbihlei&lt;/li&gt;
&lt;li&gt;Unifying SIP and Web worlds with Lua (Kamailio)”, Daniel-Constantin
    Mierla&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XiVO IPBX OpenHardware”, Xavier Carcelle&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Unified Communications - Future (Yate and YateClient)”, Diana
    Cionoiu&lt;/li&gt;
&lt;li&gt;Asterisk SCF (Scalable Communications Framework)”, Kevin P. Fleming&lt;/li&gt;
&lt;li&gt;Developing rich VoIP applications with SIPSIMPLE SDK”, Saúl Ibarra
    Corretgé&lt;/li&gt;
&lt;li&gt;SIP Communicator: Building a Multi-Protocol Multi-OS Communications
    Client”, Emil Ivov&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk will be the occassion to present the current status of our
project (hardware and software files, organization of an OpenHardware
project, protoyping, ...) and create a community of VoIP geeks that are
eager to &lt;strong&gt;develop and hack their own IPBX solutions around our XiVO
IPBX OpenHardware&lt;/strong&gt; (interfaces, BSP, SIP-trunk, asterisk hacks...).&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Cabling the FXO-FXS prototype board</title><link href="http://blog.xivo.io/cabling-the-fxo-fxs-prototype-board.html" rel="alternate"></link><updated>2011-01-11T15:49:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2011-01-11:cabling-the-fxo-fxs-prototype-board.html</id><summary type="html">&lt;p&gt;&lt;img alt="Cabling FXv5 prototype PCB
2" src="/public/.P1040816_m.jpg" title="Cabling FXv5 prototype PCB 2, janv. 2011" /&gt;&lt;img alt="Cabling
FXv5 prototype PCB
1" src="/public/.P1040817_m.jpg" title="Cabling FXv5 prototype PCB 1, janv. 2011" /&gt;&lt;/p&gt;
&lt;p&gt;As we are developing an OpenHardware projects/products, it's important
to give some feedbacks of our prototyping process.We are now cabling our
first FXO-FXS prototype boards and moving to test without our own board
connected to our SoC to validate our design on our prototype
motherboard. These pictures illustrates our soldering process with the
1:1 size PCB layout printed-out.&lt;/p&gt;
&lt;p&gt;While one is soldering components (mainly some TQFP package chips and
CMS) on the *blank* PCB, it's important to have the right tools to put
the components at the right position, solder them (potentially using
some flux to fix the pins of a chip before soldering a whole line of
pins) and verifying the connexion with a loop. Let me give some
references of tools we are using :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A set of high-precision tweezers (farnell#3972963) to pick and
    place the components&lt;/li&gt;
&lt;li&gt;A 10x maginifier (farnell#4681680) to verify the quality of the
    soldering&lt;/li&gt;
&lt;li&gt;A flux cleaner (farnell#3916613)&lt;/li&gt;
&lt;li&gt;A 15ml flux dispenser pen (farnell#876732)&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>Moving forward to the production of the prototypes - FXO/FXS boards</title><link href="http://blog.xivo.io/moving-forward-to-the-production-of-the-prototypes-fxofxs-boards.html" rel="alternate"></link><updated>2010-12-20T18:00:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-12-20:moving-forward-to-the-production-of-the-prototypes-fxofxs-boards.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;As the XiVO IPBX OpenHardware project moves forward to the production
of our first protoboards&lt;/strong&gt; for our internal tests, we are pleased to
give a first display of the PCB board file for the FXO/FXS interfaces on
the IPBX that are routed from the XHFC-4SU controller :  &lt;/p&gt;
&lt;p&gt;&lt;img alt="XiVO IOH FXOFXSv5
PCB" src="/public/.XiVO_IOH_PCB_FXOFXSv5_Interfaces_m.jpg" title="XiVO IOH FXOFXSv5 PCB, déc. 2010" /&gt;  &lt;/p&gt;
&lt;p&gt;When one designs a PCB, it's requires to create two files in order to
reach the final board ready for production (we will give more posts
about the production files needed for the electronic factories receiving
them once we reach this level of the project) : &lt;strong&gt;the .SCH (Schematics
file with all the electrical connexions between the components and the
chips on-board) and the .BRD (Board file with the actual real-sized PCB
and the components position with all the net connexions&lt;/strong&gt;). This image
displays the .BRD file designed for the FXO/FXS interfaces.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO is everywhere part 2 !</title><link href="http://blog.xivo.io/xivo-is-everywhere-part-2.html" rel="alternate"></link><updated>2010-12-13T19:04:00-05:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2010-12-13:xivo-is-everywhere-part-2.html</id><summary type="html">&lt;p&gt;Hello !&lt;/p&gt;
&lt;p&gt;This is the next session for XiVO is everywhere, thank for the pictures
;).&lt;/p&gt;
&lt;p&gt;&lt;img alt="DSCN1822.JPG" src="/public/.DSCN1822_m.jpg" title="DSCN1822.JPG, déc. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_1465.jpg" src="/public/.IMG_1465_m.jpg" title="IMG_1465.jpg, déc. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="PA020107.JPG" src="/public/.PA020107_m.jpg" title="PA020107.JPG, déc. 2010" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Moving forward to the production of the prototypes</title><link href="http://blog.xivo.io/moving-forward-to-the-production-of-the-prototypes.html" rel="alternate"></link><updated>2010-12-03T20:35:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-12-03:moving-forward-to-the-production-of-the-prototypes.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;As the XiVO IPBX OpenHardware project moves forward to the production
of our first protoboards&lt;/strong&gt; for our internal tests, we are pleased to
give a first display of the PCB board file for the ISDN interfaces on
the IPBX that are routed from the XHFC-4SU controller :  &lt;/p&gt;
&lt;p&gt;&lt;img alt="XiVO IOH PCB ISDN
interfaces" src="/public/.XiVO_IOH_PCB_ISDN_Interfaces_m.jpg" title="XiVO IOH PCB ISDN interfaces, déc. 2010" /&gt;  &lt;/p&gt;
&lt;p&gt;When one designs a PCB, it's requires to create two files in order to
reach the final board ready for production (we will give more posts
about the production files needed for the electronic factories receiving
them once we reach this level of the project) : &lt;strong&gt;the .SCH (Schematics
file with all the electrical connexions between the components and the
chips on-board) and the .BRD (Board file with the actual real-sized PCB
and the components position with all the net connexions&lt;/strong&gt;). This image
displays the .BRD file designed for the ISDN interfaces.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>mini-debconf Paris 2010</title><link href="http://blog.xivo.io/mini-debconf-paris-2010.html" rel="alternate"></link><updated>2010-11-03T16:38:00-04:00</updated><author><name>atarakt</name></author><id>tag:blog.xivo.io,2010-11-03:mini-debconf-paris-2010.html</id><summary type="html">&lt;p&gt;&lt;img alt="Mini-Deb-Conf-Paris-2010" src="/public/.mini-debconf-paris_m.jpg" title="Mini-Deb-Conf-Paris-2010, nov. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;We wanted to blog this post to report the first event of this kind
organized by &lt;a href="france.debian.net"&gt;debian france&lt;/a&gt; (french debian
association), The event was held at Université Paris Diderot - Paris 7,
on October 30 and 31.&lt;/p&gt;
&lt;p&gt;There was 3 rooms dedicated to the debconf, the first for the
conferences, the second one for the workshop and the lastest for the bug
squashing party (squeeze, the next debian stable, is frozen at the
moment). It was the first time, that I could meet some DD in the real
life, spoke with them about free software and some other stuffs. Very
pleasant.&lt;/p&gt;
&lt;p&gt;So I followed some conf during theses 2 days, some of them were very
interesting, some other less, but I learned a lot of things about debian
packaging tools in all of them (I am the only living member of the xivo
packaging team, so I was here for that !).&lt;/p&gt;
&lt;p&gt;You can find the schedule of the event on mini-debconf
&lt;a href="http://wiki.debconf.org/wiki/Miniconf-Paris/2010#Schedule_of_the_event"&gt;wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For myself, the most interesting talks/workshops were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Workshop Packaging and patch management with git by Thomas Kock,
    not for the tool presented, but there was an interesting discussion
    after the call about git-buildpackage and others packaging tools.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Newest features of dpkg-dev by Raphael Hertzog.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conquering the education by Louis-Maurice de Sousa.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Package Config::Model with GSoC by Domique Dumont, a tool to
    manage config files upgrade writting in perl.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, it was a very pleasant moment, It was really a good opportunity to
meet people who work/using debian. I recommend you get there next year
=)&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Visiting CologneChip AG : The ISDN Chip company !</title><link href="http://blog.xivo.io/visiting-colognechip-ag-the-isdn-chip-company.html" rel="alternate"></link><updated>2010-11-03T11:07:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-11-03:visiting-colognechip-ag-the-isdn-chip-company.html</id><summary type="html">&lt;p&gt;We had the pleasure to visit the CologneChip AG engineering team this
week in Koln, Germany and exchange on the ISDN markets and chips (and
the different market penetration of ISDN, FTTH, DOCSIS, xDSL in Europe
countries). ISDN is still strong in Germany w/ 29 Millions subscribers
(22M analog subscribers and 6M subscribers w/ DOSCIS and xDSL - sources:
Bundesnetzagentur) and still allow over the 144Kbits/s of net data rate,
2 bearer channels (B-channels) w/ 64Kbits/s each which is equivalent to
3.4Khz voice channel at 8 ksamples/second. The XiVO IPBX OpenHardware
will propose 4 BRI (also called S0 for point-to-multipoint BRI type)
interfaces to allow these data and voice applications.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Please find below the Koln cathedral that you can find on the
    XHFC-4SU chip:  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Koln Cathedral" src="/public/.P1040583_m.jpg" title="Koln Cathedral, nov. 2010" /&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The entrance of the CologneChip AG offices below:&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="cologneChip
offices" src="/public/.CologneChip_AG_Offices_m.jpg" title="cologneChip offices, nov. 2010" /&gt;  &lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Participation to IPConvergence 2010 - Feedbacks and pictures</title><link href="http://blog.xivo.io/participation-to-ipconvergence-2010-feedbacks-and-pictures.html" rel="alternate"></link><updated>2010-11-03T10:24:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-11-03:participation-to-ipconvergence-2010-feedbacks-and-pictures.html</id><summary type="html">&lt;p&gt;It was a great pleasure to be participating to the IPConvergence
telecommunications fair and present the XiVO IPBX OpenHardware project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Please find below our prototype cased in a 1U rack for
    demonstrations and presentations of the project:  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="XiVO OIH 0.1 cased in 1U
rack" src="/public/.XiVO_IOH_Casing_rack_1U_m.jpg" title="XiVO OIH 0.1 cased in 1U rack, nov. 2010" /&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Below is a picture of the booth at IPConvergence fair:  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="IPConvergence XiVO
booth" src="/public/.P1040544_m.jpg" title="IPConvergence XiVO booth, nov. 2010" /&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Finally, for vintage telephony geeks, the famous french Socotel S63
    in orange (XiVO color):  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="FT Socotel S63 orange
1983" src="/public/.P1040592_m.jpg" title="FT Socotel S63 orange 1983, nov. 2010" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Participation to the OpenHardwareSummit : OHANDA representation and feedbacks</title><link href="http://blog.xivo.io/participation-to-the-openhardwaresummit-ohanda-representation-and-feedbacks.html" rel="alternate"></link><updated>2010-10-04T09:03:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-10-04:participation-to-the-openhardwaresummit-ohanda-representation-and-feedbacks.html</id><summary type="html">&lt;p&gt;It was a great pleasure to participate to the &lt;strong&gt;OpenHardwareSummit2010
in the New York City Museum of Science&lt;/strong&gt; and representing the OHANDA
trademark during the LAW panel. Thanks to Alicia and Ayah to have
organized such an event that gives publicity to the OpenHardware
movement out-there. I have surely pushed the usage of the world
&lt;strong&gt;OpenHardware&lt;/strong&gt; (versus the OpenSource-Hardware term that seems to
close to OpenSource software) for the future as the common term for the
hardware projects opening their production and design files. The
audience was 200 people and mainly north-american and that was a great
pleasure to speak and recall the great previous OpenHardware projects
launched in Europe since years now (OpenMoko, OpenPCD, Milkymist,
OpenPattern...).&lt;/p&gt;
&lt;p&gt;The summit was a one-day long session of presentations and panel
discussions followed by an exchange about the OpenHardware definition.
During the LAW panel discussion, I had the opportunity to present the
OHANDA trademark and&lt;/p&gt;
&lt;p&gt;Some discussions panels attracted my attention :&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;* PRODUCTIZING: Scaling/ Manufacturing/ Moving beyond DIY :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="OHS2010 - Production
panel" src="/public/.P1040509_m.jpg" title="OHS2010 - Production panel, oct. 2010" /&gt;  &lt;/p&gt;
&lt;p&gt;This talk was a great opportunity to have the feedbacks of a production
facilities (Clint Cooley from Circuit Co) that supports OpenHardware
projects in the US and see a great ramp-up of the projects requesting
small, medium and large fab of the their PCBs. We can see that some
manufacturers will play a great role in this field and some OpenHardware
project will be able to mutualize some aspects of the production for
bigger PCBs (more layers, 200-500-1000 components-BOM...).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;* BUSINESS: Open hardware business models :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="OHS2010 - Marketing
panel" src="/public/.P1040507_m.jpg" title="OHS2010 - Marketing panel, oct. 2010" /&gt;  &lt;/p&gt;
&lt;p&gt;This talk gives the occasion to hear several business model of
OpenHardware companies ("yes" there is a business model for OpenHardware
projects up to several 100k units per product a year) w/ the
participation of prototyping and products companies such as Chumby
(represented by Bunny skype-ing from Singapore). Definitely the opening
of the design and production files is giving business opportunities for
partners (resellers, hardware-mods, software-hacks, global solutions)
rather than opening the pandora box of copies for cheaper was the global
conclusion of this panel discussion.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;* LAW: Open hardware licenses and norms :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="OHS LawPanel
1" src="/public/.OHS_LawPanel_1_m.jpg" title="OHS LawPanel 1, oct. 2010" /&gt;  &lt;/p&gt;
&lt;p&gt;This panel discussion was the occasion to have around the table several
legal opinions (with lawyers, Peter Brown from the FSF, a hardware
hacker) leading to the following topics :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* What is the interest of opening hardware ?
* How to protect a licence/trademark-ed OpenHardware project in case of legal violation from a files point of view ?
* What about the closed documentation of the chips used in an OpenHardware ?
* What about the firmware used in SoC -based OpenHardware projects ?
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Perter Brown from FSF was applausing the 4 freedoms of the OHANDA
trademark adapting the ones from the FSF licence.&lt;/p&gt;
&lt;p&gt;Below I have collected some documentations and informations about the
OHS2010 :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.flickr.com/photos/open_hardware_summit/page2/"&gt;Pictures of the OHS
2010&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Transcripts of the talks during the summit :&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://designmind.frogdesign.com/blog/welcome-from-the-open-hardware-summit.html"&gt;Transcripts of the
talks&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audio MP3 archives :&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.isoc-ny.org/p2/?p=1237"&gt;Audio MP3 archives of the OHS&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://punkcast.com/1795/1795-12/1795-12_ohs_law_panel.mp3"&gt;Audio MP3 archives of the LAW
panel&lt;/a&gt;  &lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO IPBX OpenHardware selected for the innovation trophy</title><link href="http://blog.xivo.io/xivo-ipbx-openhardware-selected-for-the-innovation-trophy.html" rel="alternate"></link><updated>2010-10-04T08:26:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-10-04:xivo-ipbx-openhardware-selected-for-the-innovation-trophy.html</id><summary type="html">&lt;p&gt;&lt;img alt="IPConvergence
2010" src="/public/.IPConvergence_2010_m.jpg" title="IPConvergence 2010, oct. 2010" /&gt;  &lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;We are very pleased to announce that the **XiVO IPBX OpenHardware&lt;/dt&gt;
&lt;dt&gt;product has been selected for the Innovation Trophy at the IPConvergence&lt;/dt&gt;
&lt;dt&gt;technology trade in Paris** (Oct. 19-20-21 2010) in the category "Best&lt;/dt&gt;
&lt;dt&gt;innovative technology for enterprise unified communications" (in French&lt;/dt&gt;
&lt;dd&gt;L’innovation technologique de l’année dans les communications
d’entreprise).  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;a href="http://www.ipconvergence.fr/Les+Troph%C3%A9es+de+la+Convergence+%3A+Jury+et+Nomin%C3%A9s_341_1078.html"&gt;IPConvergence Innovation Trophies
nomination&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will be presenting the XiVO IPBX OpenHardware during this trade-show
using our &lt;strong&gt;brand new logo for the project&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Logo XiVO IPBX
OpenHardware" src="/public/.XiVO_IPBX_OpenHardware_Logo_s.jpg" title="Logo XiVO IPBX OpenHardware, sept. 2010" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>KiCad walkthrough - Part 2</title><link href="http://blog.xivo.io/kicad-walkthrough-part-2.html" rel="alternate"></link><updated>2010-09-21T12:04:00-04:00</updated><author><name>xilun</name></author><id>tag:blog.xivo.io,2010-09-21:kicad-walkthrough-part-2.html</id><summary type="html">&lt;p&gt;The schematic represents a logical point of view of an electronic
circuit. Before we can design a
&lt;a href="http://en.wikipedia.org/wiki/Printed_circuit_board" title="Printed circuit board"&gt;PCB&lt;/a&gt;
layout matching this circuit, we must specify how each schematic
component will be physically implemented. For example, a 20 pin chip can
come in
&lt;a href="http://en.wikipedia.org/wiki/Shrink_Small-Outline_Package" title="Shrink small-outline package"&gt;SSOP&lt;/a&gt;
or
&lt;a href="http://en.wikipedia.org/wiki/Dual_in-line_package" title="Dual in-line package"&gt;DIP&lt;/a&gt;,
and the board won't look exactly the same in each case (the traces won't
end at the same places).&lt;/p&gt;
&lt;p&gt;&lt;img alt="DIL20 to 50 mils spaced
traces" src="/public/dil20.png" title="DIL20 to 50 mils spaced traces, sept. 2010" /&gt;
&lt;img alt="SSOP20 to 50 mils spaced
traces" src="/public/ssop20.png" title="SSOP20 to 50 mils spaced traces, sept. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;The two images above represent 20 traces (50 mils spaced) ending on a
DIL20 package (left) and on a SSOP20 package (right).&lt;/p&gt;
&lt;p&gt;&lt;img alt="CVpcb icon" src="/public/cvpcb.png" title="CVpcb icon, août 2010" /&gt; In
&lt;a href="http://www.kicad-eda.org/"&gt;KiCad&lt;/a&gt;, this assignment between schematic
components and module footprint is done with the program named CVpcb.&lt;/p&gt;
&lt;p&gt;Before CVpcb can be used, a
&lt;a href="http://en.wikipedia.org/wiki/Netlist"&gt;netlist&lt;/a&gt; must be generated. A
netlist is an abstract representation of the electronic circuit, which
focus on describing which pins of the various components are
interconnected (in a set that is called a net), disregarding the details
of how they are connected in the schematic drawing. The schematic
drawing is an abstract representation, and for example the length and
the shape of a connection it includes is irrelevant to how this
connection will eventually be physically implemented on the PCB. So the
netlist is simply the list of all the components plus a list of nets,
each one containing a list of interconnected pins of various components.&lt;/p&gt;
&lt;p&gt;The netlist and which footprint to use for each component will later be
the input of the PCB design done with PCBnew. To automatically generate
the netlist with EESchema, click on the generate netlist button
&lt;img alt="Generate netlist
button" src="/public/generate_netlist_button.png" title="Generate netlist button, sept. 2010" /&gt;
in the top toolbar: a "Netlist" window appears, in which you just have
to click on the button "Netlist" in the tab Pcbnew while the "Default
format" option is selected. You are then presented with a "Save Netlist
Files" dialog, in which you just have to confirm the filename -- it
should already be correctly selected as &amp;lt;project_name&amp;gt;.net in the
project directory.&lt;/p&gt;
&lt;p&gt;Now that the netlist is generated, we can use CVpcb. Launch it for
example by clicking on its icon &lt;img alt="Run CVpcb
button" src="/public/run_cvpcb_button.png" title="Run CVpcb button, sept. 2010" /&gt;
also in the top toolbar of EESchema.When no affectation has been done
before for the current project, CVpcb immediatly warns that a
&amp;lt;project_name&amp;gt;.cmp file does not exist -- this is not a problem,
it will be created by CVpcb when you save.&lt;/p&gt;
&lt;p&gt;Now for each schematic component you can assign a PCB footprint. Select
the component on the left then double click on the footprint you want to
use for it on the right. You can press the first letter of what you are
looking for when one of the two lists is activated.&lt;/p&gt;
&lt;p&gt;When you save in CVpcb, it shows a "Save Net and Component List" dialog
defaulting to the same &amp;lt;project_name&amp;gt;.net file that we created
during netlist generation. This is OK, just overwrite the former: CVpcb
will maintain the same netlist in the saved file, but the file will now
also include schematic components to module footprints affectations. A
&amp;lt;project_name&amp;gt;.cmp file is also created behind the scene, which
contains just the affectations using a different file format.&lt;/p&gt;
&lt;p&gt;For our clock buffer, the affectation in CVpcb looks like the following
screen-shoot.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Clock buffer CVpcb footprint assignment
screenshoot" src="/public/cvpcb_sshoot.png" title="Clock buffer CVpcb footprint assignment screenshoot, sept. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;The corresponding .net and .cmp files are attached to this post.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Arrondir les coins</title><link href="http://blog.xivo.io/arrondir-les-coins.html" rel="alternate"></link><updated>2010-09-16T17:23:00-04:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2010-09-16:arrondir-les-coins.html</id><summary type="html">&lt;p&gt;Après les vacances, retour au travail ! Afin de ne pas commencer trop
fort, on a décidé de vous présenter quelques œuvres faites par Xavier
avec son super appareil photo et son objectif Objectif Fish-eye 46mm
WA46. Comme vous pouvez le constater la xivomania continue par chez nous
et nous espérons bien que cela va contaminer (gpl) tout le monde.&lt;/p&gt;
&lt;p&gt;Le responsable de tous ça le voilà, en avant les images :&lt;/p&gt;
&lt;p&gt;&lt;img alt="img8.png" src="/public/.img8_m.jpg" title="img8.png, sept. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;Si vous avez des photos XiVO à nous faire partager, n'hésitez pas à nous
les envoyer.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img1.png" src="/public/.img1_m.jpg" title="img1.png, sept. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="img2.png" src="/public/.img2_m.jpg" title="img2.png, sept. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="img3.png" src="/public/.img3_m.jpg" title="img3.png, sept. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="img4.png" src="/public/.img4_m.jpg" title="img4.png, sept. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="img5.png" src="/public/.img5_m.jpg" title="img5.png, sept. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="img6.png" src="/public/.img6_m.jpg" title="img6.png, sept. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;Et puis si jamais vous rencontrez nos voitures sur la route, faites
leurs un coucou ;).&lt;/p&gt;
&lt;p&gt;&lt;img alt="img7.png" src="/public/.img7_m.jpg" title="img7.png, sept. 2010" /&gt;&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Bienvenue à l'association Asterisk France !</title><link href="http://blog.xivo.io/bienvenue-a-lassociation-asterisk-france.html" rel="alternate"></link><updated>2010-09-16T17:17:00-04:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2010-09-16:bienvenue-a-lassociation-asterisk-france.html</id><summary type="html">&lt;p&gt;Simplement pour vous informer que l'association Asterisk France qui
existe depuis quelques mois, vient de lancer officiellement son nouveau
site web avec son nouveau forum. Le tout est disponible sur le site
&lt;a href="http://www.asterisk-france.org"&gt;asterisk-france.org&lt;/a&gt;. Toute la
communauté francophone est invité à rejoindre l'association. Merci à
tous ceux qui ont participé à ce projet et à faire en sorte que cela
soit possible. Vous pourrez retrouver des membres sur le prochain salon
ip convergence en octobre ou nous serons également présent pour
présenter XiVO et nos avancements sur notre appliance open hardware.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Longue vie à l&amp;#39;association !
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary></entry><entry><title>IEEE MAC OUI Bloc registration for the XiVO IPBX OpenHardware - [08-D2-9A]</title><link href="http://blog.xivo.io/ieee-mac-oui-bloc-registration-for-the-xivo-ipbx-openhardware-08-d2-9a.html" rel="alternate"></link><updated>2010-09-08T08:04:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-09-08:ieee-mac-oui-bloc-registration-for-the-xivo-ipbx-openhardware-08-d2-9a.html</id><summary type="html">&lt;p&gt;We are very pleased to update our followers with the different steps of
the process of design of our &lt;strong&gt;XiVO IPBX OpenHarware&lt;/strong&gt;. Most of us work
since several years in the telecommunication field and have been using
extensively MAC Ethernet addresses on numerous networks appliances at
the Layer 2.&lt;/p&gt;
&lt;p&gt;Since a network appliance has one/several Ethernet interfaces based on a
MAC (IEEE 802.3 controller) and PHY (Signaling and physical interface to
the Ethernet connector) interfaces, the unique OUI MAC addresses are
stored in a non-volatile memory in the Ethernet chip or in a companion
memory on-board. These unique &lt;strong&gt;IEEE OUI MAC&lt;/strong&gt; addresses are usually
transparent for the hardware designer as they are registered by the
MAC/PHY chip manufacturers to IEEE registration office.&lt;/p&gt;
&lt;p&gt;In our case, we will have a SoC integrating the IEEE 802.3 MAC
controller and storing the 3 Ethernet MAC addresses in a flash memory.
Therefore we have been registrating our own IEEE MAC OUI bloc to be used
in our different network hardware projects. This IEEE OUI bloc will then
be available publicly with the update of Ethernet sniffer/dissectors
after August 31st 2010.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This bloc will be 08-D2-9A and the XiVO IPBX OpenHardware will appear
as 08-D2-9A-XX-XX-XX on the Ethernet networks.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A search on &lt;strong&gt;Proformatique&lt;/strong&gt; on &lt;a href="http://standards.ieee.org/regauth/oui/index.shtml"&gt;the IEEE OUI and Company_id search
interface&lt;/a&gt; help to
retrieve the associated informations.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Representing OHANDA at the OpenHardwareSummit (NYC, 23/9/10)</title><link href="http://blog.xivo.io/representing-ohanda-at-the-openhardwaresummit-nyc-23910.html" rel="alternate"></link><updated>2010-08-30T08:40:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-08-30:representing-ohanda-at-the-openhardwaresummit-nyc-23910.html</id><summary type="html">&lt;p&gt;&lt;img alt="OpenHardwareSummit" src="/public/.OHS_site_logo_m.jpg" title="OpenHardwareSummit, août 2010" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="OHANDA Logo" src="/public/.OHANDA_Logo_m.jpg" title="OHANDA Logo, août 2010" /&gt;&lt;/p&gt;
&lt;p&gt;We are very pleased to announce that we will be participating to the
&lt;strong&gt;OpenHardwareSummit&lt;/strong&gt; ^[&lt;span
id="rev-pnote-33-1"&gt;&lt;a href="#pnote-33-1"&gt;1&lt;/a&gt;&lt;/span&gt;]^ in New York (on Sept.
23rd) representing the OHANDA Trademark during a discussion panel called
&lt;strong&gt;"LAW: Open hardware licenses and norms"&lt;/strong&gt; .This is a great opportunity
for us (OHANDA TM, OpenHardwareInitiative, OpenTechSummit organizers) to
present the work done w/ the OHANDA trademark and exchange about the
best licenses/trademarks/standards to commonly use during our different
OpenHardware projects to reach the same credibility to this community as
for the OpenSource community.&lt;/p&gt;
&lt;p&gt;The panel will be as followed :&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LAW: Open hardware licenses and norms&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Moderator: Dave Mellis, Arduino &amp;amp; MIT Media Lab• Windell Oskay, Evil
Mad Scientist• Wendy Seltzer, Harvard University: Berkman Center for
Internet &amp;amp; Society• Matt Stack, Liquidware• Michael Weinberg, Public
Knowledge• Peter Brown, Freedom Software Foundation• Xavier Carcelle,
OHANDA&lt;/p&gt;
&lt;p&gt;We will post during the OpenHardwareSummit to blog the outcome of the
panel and others discussions there.&lt;/p&gt;
&lt;div class="footnotes"&gt;

#### Notes

\[&lt;span id="pnote-33-1"&gt;[1](#rev-pnote-33-1)&lt;/span&gt;\]
http://www.openhardwaresummit.org/schedule/

&lt;/div&gt;

&lt;/p&gt;</summary></entry><entry><title>KiCad walkthrough - Part 1</title><link href="http://blog.xivo.io/kicad-walkthrough-part-1.html" rel="alternate"></link><updated>2010-08-23T18:18:00-04:00</updated><author><name>xilun</name></author><id>tag:blog.xivo.io,2010-08-23:kicad-walkthrough-part-1.html</id><summary type="html">&lt;p&gt;For our prototyping/validation tests, we need a particular clock buffer.
Unfortunately, it only comes in
&lt;a href="http://en.wikipedia.org/wiki/Shrink_Small-Outline_Package" title="Shrink small-outline package"&gt;SSOP&lt;/a&gt;
or similar packages and we need to plug it to our
&lt;a href="http://en.wikipedia.org/wiki/Breadboard"&gt;breadboard&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While we could have used a generic off-the-shelf
&lt;a href="http://en.wikipedia.org/wiki/Shrink_Small-Outline_Package" title="Shrink small-outline package"&gt;SSOP&lt;/a&gt;
to
&lt;a href="http://en.wikipedia.org/wiki/Dual_in-line_package" title="Dual in-line package"&gt;DIP&lt;/a&gt;
&lt;a href="http://en.wikipedia.org/wiki/Printed_circuit_board" title="Printed circuit board"&gt;PCB&lt;/a&gt;,
we preferred, armed with KiCad, to design a specific one that will
perfectly fit on our breadboard between our existing connectors,
minimizing the amount of additional wiring on those sensitive clock
signals. Also, the small PCB will act as a module by integrating
terminations, power, and activation tracks without needing to reserve
horizontal breadboard line for that. As a result it will be easily
replaceable (or entirely skippable) in virtually no time.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://www.kicad-eda.org/"&gt;KiCad suite&lt;/a&gt; is splitted in several
programs. "kicad" the executable is a small project manager that permits
to easily launch other programs to edit the right files.&lt;/p&gt;
&lt;p&gt;&lt;img alt="KiCad project
manager" src="/public/kicad_project_manager.png" title="KiCad project manager, août 2010" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img alt="EESchema icon" src="/public/eeschema.png" title="EESchema icon, août 2010" /&gt;
    EESchema is the
    &lt;a href="http://en.wikipedia.org/wiki/Circuit_diagram"&gt;schematic&lt;/a&gt; editor.&lt;/li&gt;
&lt;li&gt;&lt;img alt="CVpcb icon" src="/public/cvpcb.png" title="CVpcb icon, août 2010" /&gt; CVpcb
    allows to assign module footprint (physical package) to
    schematic components.&lt;/li&gt;
&lt;li&gt;&lt;img alt="PCBnew icon" src="/public/pcbnew.png" title="PCBnew icon, août 2010" /&gt; PCBnew
    is the
    &lt;a href="http://en.wikipedia.org/wiki/Printed_circuit_board" title="Printed circuit board"&gt;PCB&lt;/a&gt; editor.&lt;/li&gt;
&lt;li&gt;&lt;img alt="GerbView icon" src="/public/gerbview.png" title="GerbView icon, août 2010" /&gt;
    GerbView is a
    &lt;a href="http://en.wikipedia.org/wiki/Gerber_File"&gt;Gerber&lt;/a&gt; viewer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A typical workflow is to use them right in this order. You can also go
back to previous steps to correct things; the changes can be correctly
propagated to the next programs.&lt;/p&gt;
&lt;p&gt;To start a project from scratch, launch kicad, press Ctrl-N and name
your project (and select the directory where it will live). Now launch
EESchema by clicking on its icon. The most important tools to draw a
schematic are in the bar on your right and in the Place menu. Among
them, you'll need most:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img alt="Place a component
    icon" src="/public/place_a_component.png" title="Place a component icon, août 2010" /&gt;
    Place a component&lt;/li&gt;
&lt;li&gt;&lt;img alt="Place a wire
    icon" src="/public/place_a_wire.png" title="Place a wire icon, août 2010" /&gt; Place
    a wire&lt;/li&gt;
&lt;li&gt;&lt;img alt="Place no connect flag
    icon" src="/public/place_no_connect_flag.png" title="Place no connect flag icon, août 2010" /&gt;
    Place no connect flag&lt;/li&gt;
&lt;li&gt;&lt;img alt="Place net name
    icon" src="/public/place_net_name.png" title="Place net name icon, août 2010" /&gt;
    Place net name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;EESchema takes very little time to get used to. Don't hesitate to
experiment and try a lot of features of this software. To speed you up,
here are a few hints:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Components are better selected, when you don't know their symbolic
    name, by using the library browser during insertion: click anywhere
    in the sheet while using the "Place a component" tool, then click on
    the "Select by browser" button, find the component that you want and
    finally click on the &lt;img alt="Insert component in schematic
    icon" src="/public/insert_component_in_schematic.png" title="Insert component in schematic icon, août 2010" /&gt;
    "Insert component in schematic" button at top-right.&lt;/li&gt;
&lt;li&gt;EESchema UI for edition is mostly based on a contextual menu
    accessible by right clicking;&lt;/li&gt;
&lt;li&gt;to end a wire "in the air" (for later connection); right click at
    the wanted position when drawing one and select "Wire end";&lt;/li&gt;
&lt;li&gt;to drag a wire, right click on it and select "Drag wire";&lt;/li&gt;
&lt;li&gt;to drag a zone, left click-and-drag to select the zone, then right
    click and select "Drag zone";&lt;/li&gt;
&lt;li&gt;dragging don't disconnect/change existing connections, while
    moving/orienting will disconnect/reconnect things (depending on
    where the module connectors end up);&lt;/li&gt;
&lt;li&gt;junctions are added automatically if you start/end a wire in the
    middle of another;&lt;/li&gt;
&lt;li&gt;you can edit the title block in the &lt;img alt="Page settings
    icon" src="/public/page_settings.png" title="Page settings icon, août 2010" /&gt;
    Page settings;&lt;/li&gt;
&lt;li&gt;learn shortcut keys and use them to be faster;&lt;/li&gt;
&lt;li&gt;note that KiCad file formats are plain text based, which is
    extremely cool because you can write external scripts to automatize
    certain tasks (moving a lot of references by a given vector comes
    to mind).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The schematic of our module looks like the following screenshoot.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Clock buffer EESchema schematic
screenshoot" src="/public/eeschema_sshoot.png" title="Clock buffer EESchema schematic screenshoot, août 2010" /&gt;&lt;/p&gt;
&lt;p&gt;Here is the corresponding KiCad schematic file:
&lt;a href="/public/pcb_h100_clk_fs_49fct3805a.sch"&gt;pcb_h100_clk_fs_49fct3805a.sch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href="index.php?post/2010/09/21/KiCad-walkthrough-Part-2"&gt;next article&lt;/a&gt;
will be about schematic component to module footprint assignment.
(CVpcb)&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO is everywhere part 1 !</title><link href="http://blog.xivo.io/xivo-is-everywhere-part-1.html" rel="alternate"></link><updated>2010-08-23T15:55:00-04:00</updated><author><name>quintana</name></author><id>tag:blog.xivo.io,2010-08-23:xivo-is-everywhere-part-1.html</id><summary type="html">&lt;p&gt;Hé ! Bienvenue, XiVO est un logiciel qui se veut communautaire, ouvert
et libre mais aussi nous aimons partager nos aventures et avec la
communauté. Pour cela nous avons décidé de généraliser le blog de XiVO
et de vous donner des nouvelles diverses et variées autour de XiVO pour
vous faire partager notre aventure qui est aussi avec vous. Comme pour
beaucoup cet été vous êtes partis en vacances et bien chez Avencall
aussi et nous avons eu quelques photos de voyages sympathique. Nous
sommes donc passés par la Grèce, le Mont Blanc en France puis le Lac
Saint Jean sur le Québec.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="xivo_grece.png" src="/public/xivo_grece.png" title="xivo_grece.png, août 2010" /&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="xivo_mntblanc.png" src="/public/xivo_mntblanc.png" title="xivo_mntblanc.png, août 2010" /&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="xivo_lacsaintjean.png" src="/public/xivo_lacsaintjean.png" title="xivo_lacsaintjean.png, août 2010" /&gt;&lt;/p&gt;
&lt;p&gt;A bientôt.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Extending this blog to all the XiVO projects</title><link href="http://blog.xivo.io/extending-this-blog-to-all-the-xivo-projects.html" rel="alternate"></link><updated>2010-08-12T16:57:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-08-12:extending-this-blog-to-all-the-xivo-projects.html</id><summary type="html">&lt;p&gt;Our current blog had been dedicated since the beginning to the XiVO IPBX
OpenHardware project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We have noticied than the number of followers had been growing&lt;/strong&gt; since
the first posts and we like the interest that you have been showing to
the OpenHardware projects. Therefore we have decided to extend this blog
to the XiVO project in general and to &lt;strong&gt;update you on a regular basis on
the XiVO Software solution also&lt;/strong&gt; and to merge the informations on both
the hardware and the software on one unique blog (sorted by category to
respect the followers and their wishes of topic), &lt;strong&gt;Thus you will be
able to follow the hardware project as well as the software project and
the VoIP in general&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XiVO&lt;/strong&gt; is not only a web front-end for Asterisk but a full
distribution on-top of an appliance with open specifications as much as
we can. In this spirit, we keep on in this direction and hope to push
more Open telecommunications projects out-there.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Giving more tools, hints and URLs to the community</title><link href="http://blog.xivo.io/giving-more-tools-hints-and-urls-to-the-community.html" rel="alternate"></link><updated>2010-08-04T08:57:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-08-04:giving-more-tools-hints-and-urls-to-the-community.html</id><summary type="html">&lt;p&gt;In the world of the OpenHardware projects, we do aim at giving to the
community more hints about prototyping hardware, understanding (also
reversing) existing hardware, hacking (in the sense of modifying and
adding more unexpected features) equipments, reusing "old" hardware and
sharing production and lab facilities. The last years had seen a number
of blogs and URLs in this field such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.bunniestudios.com/blog/"&gt;Name that ware&lt;/a&gt;&lt;/strong&gt;: The famous
    blog from BunnyStudios that post regularly a pictures of a PCB where
    you should discover the name of the original electronic
    products behind. Bunny is also the hardware developper behind
    the Chumby.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.adafruit.com/"&gt;AdaFruit&lt;/a&gt;&lt;/strong&gt;: A blog/portal dedicated to
    making some hardware devices (usually micro-controllers) and &lt;a href="http://www.adafruit.com/index.php?main_page=tutorials"&gt;a load
    of tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.sump.org/projects/"&gt;Sump&lt;/a&gt;&lt;/strong&gt; from Michael Poppitz who
    developed the hardware for the famous OpenBench LogicSniffer based
    on a FPGA that allows a very flexible LogicAnalyzer w/ up to
    32channels (16 on a H10-2.54mm header and 16 on-pcb) and 200MHz
    frequence sampling&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://dangerousprototypes.com/"&gt;DangerousPrototypes&lt;/a&gt;&lt;/strong&gt;: A portal
    that proposes a new OpenHardware project everymonth and distributes
    numerous prototyping hardware and tools including some hints to
    &lt;a href="http://thinkl33t.co.uk/?p=316"&gt;make your own laser-cut case&lt;/a&gt; for
    your OpenBench logic analyzer or PirateBus analyzer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://hackmii.com/"&gt;Hackmii&lt;/a&gt;&lt;/strong&gt;: A hardware hacking blog
    dedicated mostly to the Wii hacking but with a lots of tutorials and
    hardware exploits and a link with forum that somehow more difficult
    to find.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</summary></entry><entry><title>[Prototype] Description of the functionnal buses</title><link href="http://blog.xivo.io/prototype-description-of-the-functionnal-buses.html" rel="alternate"></link><updated>2010-08-03T09:50:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-08-03:prototype-description-of-the-functionnal-buses.html</id><summary type="html">&lt;p&gt;As this OpenHardware project moves forward, we are now approaching a
&lt;strong&gt;complete prototyping&lt;/strong&gt; of our functionnal blocks and
telecommunications interfaces control from the Linux kernel. The main
functionnal blocks to be tested and validated are in our architecture
based on the following buses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SPI (Serial Peripheral Interface)&lt;/strong&gt; bus between the CPU and the
    FXO/FXS chip&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LEB (Local Expansion Bus)&lt;/strong&gt; between the CPU and the ISDN chip&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TDM (Time Division Multiplexing)&lt;/strong&gt; connecting the CPU, ISDN and
    FXO/FXS chip together to transmit the digial streams of voice
    channels&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GPIO (General Purpose Input Output)&lt;/strong&gt; for the RST (Reset) signals
    and IRQ (Interrupts) signals&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CLK (Clock)&lt;/strong&gt; signals architecture to be sent to the different
    chips&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Below is a picture of our prototype boards&lt;/strong&gt; connected together to
demonstrate the functionnalities of each blocks for our software
development on the Linux kernel modules:&lt;/p&gt;
&lt;p&gt;&lt;img alt="XiVO IPBX Prototype
WishBoard-108" src="/public/.20100802_002_m.jpg" title="XiVO IPBX Prototype WishBoard-108, août 2010" /&gt;&lt;/p&gt;
&lt;p&gt;We have been using the large prototyping breaboard from Wisher (at
farnell.com on:
&lt;a href="http://fr.farnell.com/jsp/search/productdetail.jsp?SKU=1472854"&gt;http://fr.farnell.com/jsp/search/productdetail.jsp?SKU=1472854&lt;/a&gt;) that
is great to split different wires connectivity on the breadboard.&lt;/p&gt;
&lt;p&gt;In the next posts, we will describe the results and work done on each
buses to achieve the first global tests for voice channel routing with
our XiVO IPBX OpenHardware.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>The first OpenHardwareSummit and more OpenHardware movements</title><link href="http://blog.xivo.io/the-first-openhardwaresummit-and-more-openhardware-movements.html" rel="alternate"></link><updated>2010-07-20T13:52:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-07-20:the-first-openhardwaresummit-and-more-openhardware-movements.html</id><summary type="html">&lt;p&gt;We see currently a great energy and interest for the &lt;strong&gt;OpenHardware
movement&lt;/strong&gt; with different groups or consortiums aiming at creating a
common energy in this. The OHANDA Trademark is definitely a great
baseline for the upcoming OpenHardware project to have a legal umbrella
and present their project files in a central repository where the
users/customers of the OHANDA trademark-ed products will be able to find
the documents/files need to understand/modify/improve within the respect
of this trademark.&lt;/p&gt;
&lt;p&gt;This week, 2 more news came out in the OpenHardware movement with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A common definition of the OpenHardware 0.3. ^[&lt;span
    id="rev-pnote-26-1"&gt;&lt;a href="#pnote-26-1"&gt;1&lt;/a&gt;&lt;/span&gt;]^. The definition is
    derived from the Open Source Definition, which was created by Bruce
    Perens and the Debian developers as the Debian Free Software
    Guidelines&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;The announcement of the OpenHardwareSummit ^[&lt;span
    id="rev-pnote-26-2"&gt;&lt;a href="#pnote-26-2"&gt;2&lt;/a&gt;&lt;/span&gt;]^ to be held the
    September23rd in NYC, US. This event will be supported by Chris
    Anderson (Wired), Mako Hill (OLPC, Wikipedia), Becky Stern (Make),
    Jon Philips (Qi), Shigeru Kobayashi (Gainer), Thinh Nguyen and John
    Wilbanks (CC) and the sponsor of the event (littleBits, Eyebeam).
    Also the people from Creative Commons will be there and that is a
    great news as different people in the OpenHardware community had
    decided to use the CC licence to release the schematics and gerber
    files of their PCBs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During this event, we will do a presentation of the OHANDA Trademark and
the projects currently under this trademark as we will talk during the
event.&lt;/p&gt;
&lt;div class="footnotes"&gt;

#### Notes

\[&lt;span id="pnote-26-1"&gt;[1](#rev-pnote-26-1)&lt;/span&gt;\]
http://freedomdefined.org/OSHW

\[&lt;span id="pnote-26-2"&gt;[2](#rev-pnote-26-2)&lt;/span&gt;\]
http://www.openhardwaresummit.org

&lt;/div&gt;

&lt;/p&gt;</summary></entry><entry><title>Using a LogicAnalyzer to prototype/monitor the data buses: example of the Local Expansion Bus between the CPU and the ISDN interface</title><link href="http://blog.xivo.io/using-a-logicanalyzer-to-prototypemonitor-the-data-buses-example-of-the-local-expansion-bus-between-the-cpu-and-the-isdn-interface.html" rel="alternate"></link><updated>2010-06-22T14:19:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-06-22:using-a-logicanalyzer-to-prototypemonitor-the-data-buses-example-of-the-local-expansion-bus-between-the-cpu-and-the-isdn-interface.html</id><summary type="html">&lt;p&gt;In the process of developing an OpenHardware project, the prototyping
process is quite important and namely the validation of the data buses
exchanging telecommunications data (synchronization, reset, interrupts,
tx/rx data, signaling...) between the different interfaces and chips on
the hardware product.&lt;/p&gt;
&lt;p&gt;At this step of, once the analog SP (Signal Processing) is validated,
one can test the data-buses using the so-called "LogicAnalyzer" that
will put the signal on the bus into readable binary data (from the TTL
levels triggered on edges or any other events on the trigger line
chosen).LogicAnalyzer can be quite expensive appliance (such as digital
scope or frequency analyzer) but nowadays affordable device exist also
allowing the hardware designer / tester to monitor the data on one bus.
Such kind of LogicAnalyzer are usually based on 3 parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EZ-Hook type of connectors to probe the pins/headers on the
    prototype card or PCB (i.e. TP - TestPoint)&lt;/li&gt;
&lt;li&gt;TTL-to-USB chip to transform the analog signal probed into binary
    signals&lt;/li&gt;
&lt;li&gt;USB interface to connect the host-PC with the right analyzer
    software (usually unfortunately running for MS)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please find a list of USB Logic Analyzer available (some supported with
sigrok ^[&lt;span id="rev-pnote-24-1"&gt;&lt;a href="#pnote-24-1"&gt;1&lt;/a&gt;&lt;/span&gt;]^&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;USBee SX Test Pod Logic Analyzer ^[&lt;span
    id="rev-pnote-24-2"&gt;&lt;a href="#pnote-24-2"&gt;2&lt;/a&gt;&lt;/span&gt;]^ (a HUGE sample buffer
    PC and USB based multifunction logic analyzer)&lt;/li&gt;
&lt;li&gt;EE Electronics XLA ESLA100 (a cheap 8-channel logic analyzer)&lt;/li&gt;
&lt;li&gt;ASIX Sigma (a 6 channel logic analyzer with sample rate support up
    to 200 MHz and with 256 Mbit on-board memory)&lt;/li&gt;
&lt;li&gt;Openbench Logic Sniffer (a FPGA-based logic analyzer, supporting 32
    probes for probing up to 100MHz signals)&lt;/li&gt;
&lt;li&gt;Braintechnology USB-LPS (a Cypress FX2 based logic analyzer and
    signal generator with up to 16 channels)&lt;/li&gt;
&lt;li&gt;Buspirate ^[&lt;span id="rev-pnote-24-3"&gt;&lt;a href="#pnote-24-3"&gt;3&lt;/a&gt;&lt;/span&gt;]^&lt;/li&gt;
&lt;li&gt;Intronix Logicport LA1034 (a FPGA-based logic analyzer, capable of
    sampling data on 34 channels at up to 500MHz) ^[&lt;span
    id="rev-pnote-24-4"&gt;&lt;a href="#pnote-24-4"&gt;4&lt;/a&gt;&lt;/span&gt;]^&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The one we are using for the prototyping of the XiVO OpenHardware IPBX
is a Saleae Logic Analyzer with the 1.0.21 software ^[&lt;span
id="rev-pnote-24-5"&gt;&lt;a href="#pnote-24-5"&gt;5&lt;/a&gt;&lt;/span&gt;]^&lt;/p&gt;
&lt;p&gt;Below are 2 snapshots of signals probed on the Local Expansion Bus
connecting the CPU with the ISDN chip:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/CS: Chip Select signal (to indicate which chip on the LEB should
    be driven)&lt;/li&gt;
&lt;li&gt;/RD: ReaD signal (from the CPU indicating that the data will be read
    from the ISDN chip registers)&lt;/li&gt;
&lt;li&gt;/WR: WRite signal (from the CPU indicating that the data will be
    written into the ISDN chip registers)&lt;/li&gt;
&lt;li&gt;ALE: Address LatchE to indicate which Address of Data to retrieve&lt;/li&gt;
&lt;li&gt;D0: Bit 0 from the LEB data bus&lt;/li&gt;
&lt;li&gt;D1: Bit 1 from the LEB data bus&lt;/li&gt;
&lt;li&gt;D2: Bit 2 from the LEB data bus&lt;/li&gt;
&lt;li&gt;A8: Address 8 (EX_ADDR&lt;a href="8" title="8"&gt;8&lt;/a&gt;) line on the CPU used to trigger
    the scope or the logic analyzer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As one can see in the screenshot below, the A8 line is set on "0" + "1"
which means the triggering is done on upper edge from this signal.&lt;/p&gt;
&lt;p&gt;&lt;img alt="LEB CPU ISDN LogicAnalyzer
traces" src="/public/.XiVO_IPBX_LEB_BUS_CPU_ISDN_Snapshot1_m.jpg" title="LEB CPU ISDN LogicAnalyzer traces, juin 2010" /&gt;&lt;/p&gt;
&lt;p&gt;The view below is a zoomed view of the above screenshot with a focus on
the triggering on A8 line&lt;/p&gt;
&lt;p&gt;&lt;img alt="LEB CPU ISDN LogicAnalyzer traces
zoom" src="/public/.XiVO_IPBX_LEB_BUS_CPU_ISDN_Snapshot2_m.jpg" title="LEB CPU ISDN LogicAnalyzer traces zoom, juin 2010" /&gt;&lt;/p&gt;
&lt;div class="footnotes"&gt;

#### Notes

\[&lt;span id="pnote-24-1"&gt;[1](#rev-pnote-24-1)&lt;/span&gt;\]
http://sigrok.org/wiki/Main\_Page

\[&lt;span id="pnote-24-2"&gt;[2](#rev-pnote-24-2)&lt;/span&gt;\] http://usbee.com

\[&lt;span id="pnote-24-3"&gt;[3](#rev-pnote-24-3)&lt;/span&gt;\]
http://dangerousprototypes.com/2009/11/03/bus-pirate-logic-analyzer-mode/

\[&lt;span id="pnote-24-4"&gt;[4](#rev-pnote-24-4)&lt;/span&gt;\]
http://www.pctestinstruments.com/

\[&lt;span id="pnote-24-5"&gt;[5](#rev-pnote-24-5)&lt;/span&gt;\]
http://www.saleae.com

&lt;/div&gt;

&lt;/p&gt;</summary></entry><entry><title>The XiVO IPBX OpenHardware eco-system</title><link href="http://blog.xivo.io/the-xivo-ipbx-openhardware-eco-system.html" rel="alternate"></link><updated>2010-06-17T13:41:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-06-17:the-xivo-ipbx-openhardware-eco-system.html</id><summary type="html">&lt;p&gt;As we move forward on the validation of the different functionnal block
of the XiVO IPBX OpenHardware project, we can now describe more
precisely the different blocks and the eco-system of the project.&lt;/p&gt;
&lt;p&gt;The functionnal blocks are numbered now as followed for the validation
and PCB Schematics :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;1-CPU
2-ISDN
3-FXO-FXS
4-UART
5-EEPROM
6-ETH
7-SD-USB
8-SATA
9-LEDS
10-DDR2
11-SPI-FLASH
12-CPU-JTAG
13-PWR
14-CLK
15-RST
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We will then follow-up on the documentation of the project for the
validation and PCB Schematics with this numbering allowing
sub-documentation and discussion for each functionnal block.&lt;/p&gt;
&lt;p&gt;Concerning the eco-system of the project, the figure below describes the
different steps to go to the production of the XiVO IPBX OpenHardware
product.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XiVO IPBX OpenHardware
EcoSystem" src="/public/.XiVO_IPBX_OpenHardware_EcoSystem_m.jpg" title="XiVO IPBX OpenHardware EcoSystem, juin 2010" /&gt;&lt;/p&gt;
&lt;p&gt;The next posts will describe the validation of the communication between
the CPU&lt;a href="1" title="1"&gt;1&lt;/a&gt; and the ISDN&lt;a href="2" title="2"&gt;2&lt;/a&gt; and the FXO-FXS&lt;a href="3" title="3"&gt;3&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Official OHANDA annoucement</title><link href="http://blog.xivo.io/official-ohanda-annoucement.html" rel="alternate"></link><updated>2010-05-24T21:57:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-05-24:official-ohanda-annoucement.html</id><summary type="html">&lt;p&gt;OHANDA stands for Open Source Hardware and Design Alliance&lt;/p&gt;
&lt;p&gt;OHANDA is an initiative to foster sustainable sharing of open hardware
and design. It was first drafted at the GOSH!-Grounding Open Source
Hardware summit at the Banff Centre in July 2009.&lt;/p&gt;
&lt;p&gt;One of the first goals of the project is to build a service for sharing
open hardware designs which includes a certification model and a
registration. Recently we are working on getting an
OpenHardware&lt;a href="TM" title="TM"&gt;TM&lt;/a&gt; off the ground.&lt;/p&gt;
&lt;p&gt;OHANDA is work in process. The process is open ...&lt;/p&gt;
&lt;p&gt;Please check http://www.ohanda.organd subscribe to our
mailinglist:https://piksel.no/mailman/listinfo/ohanda&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>KiCAD: The OpenSource EDA tool for designing PCBs</title><link href="http://blog.xivo.io/kicad-the-opensource-eda-tool-for-designing-pcbs.html" rel="alternate"></link><updated>2010-05-20T14:49:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-05-20:kicad-the-opensource-eda-tool-for-designing-pcbs.html</id><summary type="html">&lt;p&gt;This post aims at presenting KiCAD ^[&lt;span
id="rev-pnote-21-1"&gt;&lt;a href="#pnote-21-1"&gt;1&lt;/a&gt;&lt;/span&gt;]^, THE OpenSource EDA tool
for CAD file used to design PCB (Printed Circuit Boards) originally
designed and written by Jean-Pierre Charras, a researcher at LIS
(Laboratoire des Images et des Signaux) and a teacher at IUT de Saint
Martin d'Hères (France), in the field of electrical engineering and
image processing.KiCAD aims at being a tool equivalent to the
"closed-non-free" CAD software like Atium Protel, Eagle, Cadence with
the benefit of a free and open-source with a community of developer and
early-user implementing KiCAD for industrial hardware design of PCB up
to 10layers and a growing collection of component footprints and
reference in the library (the standard footprints like SOTs, QFPs, BGAs
are crucial to have the maximum support of the ICs, chips of the silicon
manufacturers)&lt;/p&gt;
&lt;p&gt;Kicad is a set of four softwares and a project manager:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eeschema: Schematic entry.&lt;/li&gt;
&lt;li&gt;Pcbnew:Board editor.&lt;/li&gt;
&lt;li&gt;Gerbview: GERBER viewer (photoplotter documents).&lt;/li&gt;
&lt;li&gt;Cvpcb: footprint selector for components used in the circuit design.&lt;/li&gt;
&lt;li&gt;Kicad: project manager.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KiCAD early-users and developers can participate to the project on the
subversion ^[&lt;span id="rev-pnote-21-2"&gt;&lt;a href="#pnote-21-2"&gt;2&lt;/a&gt;&lt;/span&gt;]^&lt;/p&gt;
&lt;p&gt;A bug tracker ^[&lt;span id="rev-pnote-21-3"&gt;&lt;a href="#pnote-21-3"&gt;3&lt;/a&gt;&lt;/span&gt;]^ is
up and running for feedbacks from the users (GUI optimization for GNU
users and Windows users mainly).&lt;/p&gt;
&lt;p&gt;From our XiVO IPBX OpenHardware project point of view, we are also using
KiCAD mainly for small PCB and Schematics of your interfaces between
each functionnal block. The screen-shot below presents the KiCAD
Eeschema to implement the TDM connexion between the CPU and the ISDN
chip:&lt;/p&gt;
&lt;p&gt;&lt;img alt="XiVO ISDN TDM Connexions
Prototyping" src="/public/.KiCAD_XiVO_PCB_Prototyping_XHFC_4SU_TDM_Bus_m.jpg" title="XiVO ISDN TDM Connexions Prototyping, mai 2010" /&gt;&lt;/p&gt;
&lt;p&gt;The right-side toolbar is for selecting the object to include in the
schematic (component, power, ground, wires ...), the top part toolbar is
there for the sheet preferences and settings and for the interaction
with the PCB editor and gerber exporter and viewer.&lt;/p&gt;
&lt;div class="footnotes"&gt;

#### Notes

\[&lt;span id="pnote-21-1"&gt;[1](#rev-pnote-21-1)&lt;/span&gt;\]
http://www.lis.inpg.fr/realise\_au\_lis/kicad/

\[&lt;span id="pnote-21-2"&gt;[2](#rev-pnote-21-2)&lt;/span&gt;\]
http://kicad.svn.sourceforge.net/viewvc/kicad/

\[&lt;span id="pnote-21-3"&gt;[3](#rev-pnote-21-3)&lt;/span&gt;\]
https://bugs.launchpad.net/kicad

&lt;/div&gt;

&lt;/p&gt;</summary></entry><entry><title>The perfect OpenHardware Lab</title><link href="http://blog.xivo.io/the-perfect-openhardware-lab.html" rel="alternate"></link><updated>2010-05-11T12:04:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-05-11:the-perfect-openhardware-lab.html</id><summary type="html">&lt;p&gt;In an OpenHardware project, making up a perfect lab is crucial in order
to prototype, test and solder parts before going to PCB pre-production
and production.&lt;/p&gt;
&lt;p&gt;This post aims at presenting the set-up of the XiVO IPBX OpenHardware
lab at Proformatique.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The main list of hardware equipment we have in our lab is:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Working-table from Langlois - Gradignan, France (typically used for
    electronic practical session in the secondary schools and
    engineering schools) with wooden table and neon to have a close-up
    working light&lt;/li&gt;
&lt;li&gt;Oscilloscope Tektronix DP2012 with Ethernet interface (web server
    running on the digital Oscilloscope that can control the settings on
    the 2 ways)&lt;/li&gt;
&lt;li&gt;Multimeter ChauvinArnoux - CA703 (CAT IV - 600V with the diode
    function used to validate continuity of PCB trace when looking for
    connectivity on a PCB)&lt;/li&gt;
&lt;li&gt;Weller solder station WD1 with 2.5mm, 1mm and 0.5mm ends&lt;/li&gt;
&lt;li&gt;2 x PowerSupply PS3003 (24V in order to be able to do 48V with 2
    power-supplies back-to-back)&lt;/li&gt;
&lt;li&gt;Zooming lens for close-ups soldering and debugging&lt;/li&gt;
&lt;li&gt;ATX PowerSupply to power motherboard and ATX-based EvaluationBoards&lt;/li&gt;
&lt;li&gt;Saleae LogicAnalyzer (USB-based and supported with &lt;strong&gt;sigrok&lt;/strong&gt; with
    Linux / http://www.sigrok.org/wiki/Main_Page for the list of
    supported logic analyzers) for data-bus debugging&lt;/li&gt;
&lt;li&gt;Solderless breadboard SD-24 for wires connexion through the
    breadboard&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Please find below a picture of our hardware lab with the equipment
descrived above:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Proformatique - XiVO - Hardware
Lab" src="/public/.P1030609_m.jpg" title="Proformatique - XiVO - Hardware Lab, mai 2010" /&gt;&lt;/p&gt;
&lt;p&gt;This is important to get also small tools like cutting tools, small
wires (like the precious HIRSCHMANN MKL0,64/25-0,25 - reference
#1011430 at farnell.com
&lt;a href="http://fr.farnell.com/hirschmann/mkl0-64-25-0-25-red/cordon-de-test-rouge-0-64m/dp/1011430?Ntt=1011430" title="http://fr.farnell.com/hirschmann/mkl0-64-25-0-25-red/cordon-de-test-rouge-0-64m/dp/1011430?Ntt=1011430"&gt;http://fr.farnell.com/hirschmann/mk...&lt;/a&gt;),
soldering wires (RoHS with 1mm and 0.5mm diameter), screw-drivers, SMT
and non SMT resistors, capacitors and selfs, labels for different wire
description.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Prototype PCB for the ISDN and FXO/FXS interfaces</title><link href="http://blog.xivo.io/prototype-pcb-for-the-isdn-and-fxofxs-interfaces.html" rel="alternate"></link><updated>2010-05-04T13:42:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-05-04:prototype-pcb-for-the-isdn-and-fxofxs-interfaces.html</id><summary type="html">&lt;p&gt;As the XiVO IPBX OpenHardware project moves forward, we are now doing
the prototyping of the different fonctionnal bloc of the PCB and namely
the interaction between the CPU and the Telco interfaces (ISDN and
FXO/FXS).In order to do a clean prototyping, it is usually adviced to
use the different EVB (EValuationBoards) and SDK (Software Development
Kits) supplied by the chip manufacturer (CPU, ISDN, FXO/FXS) and try to
do the "proof-of-concept" of the hardware design connecting the
different EVBs and use the SDKs provided to run the SPI and TDM buses
(Master and Slaves) from the CPU.&lt;/p&gt;
&lt;p&gt;In our case, we made some intermediate PCBs that can make a clean
connection between the CPU EVB and the ISDN and FXO/FXS interfaces. With
the great help of Mehdi Khairy (that used to work with me on the
OpenPattern project) using KiCAD to route the different PCBs (some
bugfixes sent to the KiCAD bugtracker during the routing at
https://bugs.launchpad.net/kicad).&lt;/p&gt;
&lt;p&gt;The ISDN connection from the CPU EVB to the ISDN EVB chip (XHFC-4SU - a
4 T1 lines ISDN frame buffers on-chip from CologneChip) is done using
the following PCB (XHFC-4SU-Protoboard) ;&lt;/p&gt;
&lt;p&gt;&lt;img alt="XHFC-4SU-Protoboard" src="/public/.XHFC-4SU_Protoboard_m.jpg" title="XHFC-4SU-Protoboard, mai 2010" /&gt;&lt;/p&gt;
&lt;p&gt;The FXO/FXS connection from the CPU EVB to the FXO/FXS EVB chip (VE890
EVB from Zarlink implementing 2 FXS and 1 FXO) is done using the
following PCB (Zarlink-VE890-Protoboard) ;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Zarlink-VE890-Protoboard" src="/public/.Zarlink_VE890_Protoboard_m.jpg" title="Zarlink-VE890-Protoboard, mai 2010" /&gt;&lt;/p&gt;
&lt;p&gt;Next posts will be presenting the results and the signal obtained on the
SPI and TDM buses from a Digital Oscilloscope and from a Logic Analyzer
(like the saleae one),&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Connecting a telephony chip</title><link href="http://blog.xivo.io/connecting-a-telephony-chip.html" rel="alternate"></link><updated>2010-04-27T18:20:00-04:00</updated><author><name>xilun</name></author><id>tag:blog.xivo.io,2010-04-27:connecting-a-telephony-chip.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;a href="English%20version" title="English version"&gt;English version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Several interfaces and connections exist in order to connect an
end-device to a PSTN. Mostly used in Europe: analog, digital
(&lt;a href="http://en.wikipedia.org/wiki/Integrated_Services_Digital_Network" title="Integrated Services Digital Network (Wikipedia entry)"&gt;ISDN&lt;/a&gt;)
for 2 communications
(&lt;a href="http://en.wikipedia.org/wiki/Basic_rate_interface" title="Basic Rate Interface (Wikipedia entry)"&gt;T0&lt;/a&gt;),
digital for 30 communications
(&lt;a href="http://en.wikipedia.org/wiki/Primary_Rate_Interface" title="Primary Rate Interface (Wikipedia entry)"&gt;E1&lt;/a&gt;).
The XiVO IPBX OpenHardware will provide 4 ISDN T0 interfaces (for a
total of 8 simultaneous communications), 1 analog interface for a PSTN
phone or a fax and 1 analog PSTN interface to connect to PSTN carriers.&lt;/p&gt;
&lt;p&gt;Some chips are dedicated to such telephony interfaces^[&lt;span
id="rev-pnote-18-1"&gt;&lt;a href="#pnote-18-1"&gt;1&lt;/a&gt;&lt;/span&gt;]^, and connect to other
chips of the PCB through:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A processor interface bus,^[&lt;span
    id="rev-pnote-18-2"&gt;&lt;a href="#pnote-18-2"&gt;2&lt;/a&gt;&lt;/span&gt;]^ for instance an
    &lt;a href="http://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus" title="Serial Peripheral Interface (Wikipedia entry)"&gt;SPI&lt;/a&gt;
    bus, or a variant of a parallel local bus (LEB for Intel CPUs, HPI
    for TI DSPs, Local Bus for Freescale MPC8555);&lt;/li&gt;
&lt;li&gt;A
    &lt;a href="http://en.wikipedia.org/wiki/Time-division_multiplexing" title="Time-division multiplexing (Wikipedia entry)"&gt;TDM&lt;/a&gt;
    bus, also named
    &lt;a href="http://en.wikipedia.org/wiki/Pulse-code_modulation" title="Pulse-code modulation (Wikipedia entry)"&gt;PCM&lt;/a&gt;
    bus;&lt;/li&gt;
&lt;li&gt;And one trace for the
    &lt;a href="http://en.wikipedia.org/wiki/Interrupt" title="Interrupt (Wikipedia entry)"&gt;interrupt&lt;/a&gt; signal.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The SPI bus is used to configure the chips, request the state of the
line, handle the rings/hang-up/pick-up.^[&lt;span
id="rev-pnote-18-3"&gt;&lt;a href="#pnote-18-3"&gt;3&lt;/a&gt;&lt;/span&gt;]^ The SPI bus is used to
send a command to the chip, then wait for a reply. The command/reply
data are transmitted with a binary stream described in each's chip
manual. The SPI bus doesn't allow a spontaneous communication from the
chip handling the line: it can only transmit a reply to a request -
however the interrupt mechanism makes that this is not a problem. If a
variant of parallel local bus is used instead of the SPI bus, it ensures
the very same functions (only the way the messages are exchanged
changes, but the messages themselves do not).&lt;/p&gt;
&lt;p&gt;The TDM bus transmits a continuous stream of digital voice data on each
channel, in both direction.^[&lt;span
id="rev-pnote-18-4"&gt;&lt;a href="#pnote-18-4"&gt;4&lt;/a&gt;&lt;/span&gt;]^ There are also other
channels for technical data and sometimes signaling data. Independently
from the number of active calls, there is a bidirectionnal transmission
on a predefined number of channels.&lt;/p&gt;
&lt;p&gt;Example of a 32 time-slots TDM bus configuration for a 4xT0 interfaces
chip:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First T0: channel 0 and 1 carry the sound of the 2 communications,
    channel 2 for the call signaling, channel 3 for the technical data&lt;/li&gt;
&lt;li&gt;Second T0: channel 4 and 5 carry the sound of the 2 communications,
    channel 6 for the call signaling and channel 7 for the technical
    data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and so on the Third and Fourth T0.&lt;/p&gt;
&lt;p&gt;when there is no call on the first T0, the channels 0 and 1 remain
available but silent. The first call on the first T0 will reserve one of
the channel, the second call arriving will book the second channel.&lt;/p&gt;
&lt;p&gt;An interrupt signal is sent from the chip to the CPU when an event
occurs. Then, the CPU temporarily interrupts its current task in order
to execute, as soon as possible, a dedicated routine (an interrupt
handler). This routine requests the chip (via the SPI bus) for the
reason of the interrupt sent. As described, all communications on the
SPI bus start from the CPU to the telephony chip
(Master-to-Slave).^[&lt;span
id="rev-pnote-18-5"&gt;&lt;a href="#pnote-18-5"&gt;5&lt;/a&gt;&lt;/span&gt;]^ So the interrupt
mechanism is used when the slave chip requires some cares.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href="French%20version" title="French version"&gt;French version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Différentes liaisons permettent de se brancher au réseau téléphonique
classique. Les plus courantes en Europe sont : analogiques, numériques
(&lt;a href="http://fr.wikipedia.org/wiki/RNIS" title="Réseau numérique à intégration de services"&gt;RNIS&lt;/a&gt;)
pour deux communications
(&lt;a href="http://fr.wikipedia.org/wiki/Basic_Rate_Interface" title="Basic Rate Interface (page Wikipédia)"&gt;T0&lt;/a&gt;),
numériques pour 30 communications
(&lt;a href="http://fr.wikipedia.org/wiki/Primary_Rate_Interface" title="Primary Rate Interface (page Wikipédia)"&gt;E1&lt;/a&gt;).
L'IPBX XiVO OpenHardware disposera de 4 prises RNIS T0 (total : 8
communications simultanées), 1 prise analogique pour y brancher un
téléphone classique ou un fax, et 1 prise pour se brancher sur une ligne
téléphonique analogique.&lt;/p&gt;
&lt;p&gt;Les puces dédiées à la réalisation de telles interfaces téléphoniques
dans un équipement numérique peuvent typiquement être connectées aux
autres puces^[&lt;span id="rev-pnote-18-6"&gt;&lt;a href="#pnote-18-6"&gt;6&lt;/a&gt;&lt;/span&gt;]^ via
:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;un bus^[&lt;span id="rev-pnote-18-7"&gt;&lt;a href="#pnote-18-7"&gt;7&lt;/a&gt;&lt;/span&gt;]^
    d'interface processeur, par exemple un bus
    &lt;a href="http://fr.wikipedia.org/wiki/Serial_Peripheral_Interface" title="Serial Peripheral Interface (page Wikipédia)"&gt;SPI&lt;/a&gt;,
    ou une variante de bus local parallèle (LEB sur Intel EP80579, HPI
    sur DSP TI, Local Bus sur Freescale MPC8555) ;&lt;/li&gt;
&lt;li&gt;un bus
    &lt;a href="http://en.wikipedia.org/wiki/Time-division_multiplexing" title="Time-division multiplexing (page Wikipédia)"&gt;TDM&lt;/a&gt;,
    aussi nommé bus
    &lt;a href="http://fr.wikipedia.org/wiki/Modulation_d%27impulsion_cod%C3%A9e" title="Pulse-code modulation (page Wikipédia)"&gt;PCM&lt;/a&gt;
    ;&lt;/li&gt;
&lt;li&gt;et une piste pour un signal
    d'&lt;a href="http://fr.wikipedia.org/wiki/Interruption_%28informatique%29" title="Interruption (page Wikipédia)"&gt;interruption&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Le bus SPI est utilisé pour configurer la puce, l'interroger sur l'état
de la ligne, gérer les décrochages/raccrochages/sonneries.^[&lt;span
id="rev-pnote-18-8"&gt;&lt;a href="#pnote-18-8"&gt;8&lt;/a&gt;&lt;/span&gt;]^ Le bus SPI fonctionne par
l'envoi d'une commande vers la puce, à laquelle elle peut répondre. Les
commandes et leurs réponses sont transmises sous forme d'une suite de 0
et de 1, organisés selon une convention propre à chaque puce et décrite
dans son manuel. Le bus SPI ne permet pas une communication spontanée
depuis la puce gérant la ligne : elle ne communique dans cette direction
que suite à réception d'une commande - mais le signal d'interruption
fait que cela n'est pas problématique.Si une variante de bus local
parallèle est utilisée à la place du bus SPI, elle assurera exactement
les mêmes fonctions (seule la manière de transmettre les commandes et
réponses change, mais pas ces dernières).&lt;/p&gt;
&lt;p&gt;Le bus TDM transmet continuellement le son passant sur chaque canal,
dans les deux sens.^[&lt;span
id="rev-pnote-18-9"&gt;&lt;a href="#pnote-18-9"&gt;9&lt;/a&gt;&lt;/span&gt;]^ Il y a de plus
éventuellement des canaux pour des données techniques et dans certains
cas de la signalisation d'appel. Indépendamment du nombre d'appels en
cours, il y a une transmission bidirectionnelle sur un nombre fixé de
canaux transmis par ce bus. Exemple de mise en oeuvre d'une puce gérant
quatre ports T0 avec un bus TDM transportant 32 canaux :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pour la première T0 ; les canaux 0 et 1 font passer le son des deux
    communications, le canal 2 la signalisation d'appel, le canal 3 est
    un canal technique&lt;/li&gt;
&lt;li&gt;pour la deuxième T0 ; les canaux 4 et 5 font passer le son des deux
    communications, le canal 6 la signalisation d'appel, le canal 7 est
    un canal technique&lt;/li&gt;
&lt;li&gt;et ainsi de suite pour les troisième et quatrième T0.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lorsqu'il n'y a pas d'appel sur la première T0, les canaux 0 et 1
restent présents mais transmettent du silence. Le premier appel sur la
première T0 réservera un des deux canaux, et un second appel réservera
l'autre.&lt;/p&gt;
&lt;p&gt;Un signal d'interruption est envoyé de la puce au processeur quand un
événement s'est produit. Le processeur interrompt alors temporairement
sa tâche en cours pour exécuter au plus tôt une routine dédiée (un
gestionnaire d'interruption). Cette routine interroge la puce (via le
bus SPI) pour savoir ce qui s'est passé. Comme expliqué avant, tous les
dialogues sur le bus SPI débutent dans le sens processeur vers puce
téléphonique.^[&lt;span id="rev-pnote-18-10"&gt;&lt;a href="#pnote-18-10"&gt;10&lt;/a&gt;&lt;/span&gt;]^
Le mécanisme des interruptions est donc utilisé lorsque la puce a
quelque chose à dire "spontanément" au processeur.&lt;/p&gt;
&lt;hr /&gt;
&lt;div class="footnotes"&gt;

#### Notes

\[&lt;span id="pnote-18-1"&gt;[1](#rev-pnote-18-1)&lt;/span&gt;\] Even to connect a
*digital* appliance to a *digital* network, the chips implementing the
needed interface are specific, because digital signals can greatly vary
in form.

\[&lt;span id="pnote-18-2"&gt;[2](#rev-pnote-18-2)&lt;/span&gt;\] A bus is a group
of PCB traces connecting several chips in order for them to communicate,
the role of each trace and the characteristics of the signals should be
well defined.

\[&lt;span id="pnote-18-3"&gt;[3](#rev-pnote-18-3)&lt;/span&gt;\] The handling of
the rings/hang-up/pick-up is done through the SPI for analog line and in
some case also for digital line and numbering also in this case (the
analog numbering is done through DTMF with frequencies which are simple
sound transmitted like the voice frequencies).

\[&lt;span id="pnote-18-4"&gt;[4](#rev-pnote-18-4)&lt;/span&gt;\] Technically the
TDM bus is composed of: a clock signal orchestrates the uninterrupted
transmission, which is done through a dedicated signal sent on the
reception side (RX) and one serial signal dedicated to the transmission
side (TX). If ones observes the clock and data sent in each direction,
it will be a continous binary stream. The fourth line, called Frame
Synchronisation (FS), is pulsed at 8kHz (phase locked on the clock
signal). The data between a current Frame Synchronisation and the
following are a constant number of bits, for instance 256. This frame
splits into n-bits consecutive blocks per channel (n=8 for the telephony
system). The majority of chips for telephony applications hold a TDM
bus, and this bus can also be found on certain embedded CPU or DSP chip.
Apart from the telephony world, this kind of bus is also used for some
other types of digital audio transmissions.

\[&lt;span id="pnote-18-5"&gt;[5](#rev-pnote-18-5)&lt;/span&gt;\] The CPU is Master
on the SPI bus, the telephony chip is in Slave mode on the SPI bus.

\[&lt;span id="pnote-18-6"&gt;[6](#rev-pnote-18-6)&lt;/span&gt;\] Lorsqu'un
équipement *numérique* dispose, comme pour l'IPBX XiVO OpenHardware,
d'interfaces *numériques*, ces dernières restent pilotées par des puces
dédiées au type d'interface. En effet les signaux transportant
l'information numérique peuvent être de nature très variée et on ne peut
pas connecter n'importe quelle puce numérique à n'importe quel signal
numérique.

\[&lt;span id="pnote-18-7"&gt;[7](#rev-pnote-18-7)&lt;/span&gt;\] Un bus est un
ensemble de pistes reliant plusieurs puces pour leur permettre de
communiquer, les rôles de chaque piste et les caractéristiques des
signaux étant bien définis.

\[&lt;span id="pnote-18-8"&gt;[8](#rev-pnote-18-8)&lt;/span&gt;\] La gestion des
décrochages/raccrochages/sonneries se fait par le SPI pour l'analogique,
et dans certains cas aussi pour le numérique, avec la numérotation en
plus dans ce cas (la numérotation en analogique se fait avec des
tonalités, qui ne sont rien de plus qu'un son transmis exactement comme
la voix).

\[&lt;span id="pnote-18-9"&gt;[9](#rev-pnote-18-9)&lt;/span&gt;\] Techniquement pour
le bus TDM : un signal d'horloge cadence de manière ininterrompue la
transmission, qui se fait via un signal série dédié à la réception et un
signal série dédié à la transmission. Si l'on ne considère que l'horloge
et les données dans chaque sens, on ne voit qu'une suite ininterrompue
de bits. Une quatrième ligne, dite de synchronisation trame, pulse à
8kHZ (en phase avec l'horloge). Les données entre une synchro-trame et
la suivante contiennent un nombre constant de bits, par exemple 256. On
découpe cette trame en blocs de n bits consécutifs par canal (n=8 pour
de la téléphonie). La majorité des puces téléphoniques dispose d'un bus
TDM, bus qu'on retrouve sur certains processeurs embarqués et de
traitement du signal. Hors téléphonie, ce bus est aussi utilisé dans
d'autres contextes audio numérique.

\[&lt;span id="pnote-18-10"&gt;[10](#rev-pnote-18-10)&lt;/span&gt;\] Le processeur
est maître du bus SPI, la puce téléphonique esclave.

&lt;/div&gt;

&lt;/p&gt;</summary></entry><entry><title>XiVO OpenHardware presentation at SolutionsLinux 2010 and upcoming AstriEurope 2010</title><link href="http://blog.xivo.io/xivo-openhardware-presentation-at-solutionslinux-2010-and-upcoming-astrieurope-2010.html" rel="alternate"></link><updated>2010-04-07T09:53:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-04-07:xivo-openhardware-presentation-at-solutionslinux-2010-and-upcoming-astrieurope-2010.html</id><summary type="html">&lt;p&gt;&lt;img alt="AstriEurope" src="/public/.AstriEurope_Logo_s.jpg" title="AstriEurope, avr. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;Following the presentation we did at SolutionsLinux 2010 in Paris (&lt;strong&gt;the
presentation we made is now available at (1)&lt;/strong&gt; and had been made in
french as the crowd was mainly french-speakers).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We will be presenting the XiVO IPBX OpenHardware project at the
AstriEurope Conference in Paris&lt;/strong&gt; (2) next week on the first day and the
detailled program of the conferences is available here (3). The
conference will aim at giving the latest details on the hardware choices
and features.&lt;/p&gt;
&lt;p&gt;The AstriEurope will be the occasion to have different presentations on
the various asterisk-oriented projects (software and hardware oriented)
currently available out-there with the presence of several people from
Digium supporting the event.&lt;/p&gt;
&lt;p&gt;(1) :
http://carcelle.fu8.com/Presentation_Projet_Appliance_XiVO_SolutionsLinux_2010.pdf&lt;br /&gt;
(2) : http://www.astrieurop.com/&lt;br /&gt;
(3) : http://carcelle.fu8.com/AstriEuropConferencesProgram.pdf&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>The OHANDA Trademark/Licence for the XiVO IPBX [1] : Meeting in Helsinki</title><link href="http://blog.xivo.io/the-ohanda-trademarklicence-for-the-xivo-ipbx-1-meeting-in-helsinki.html" rel="alternate"></link><updated>2010-03-30T09:26:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-03-30:the-ohanda-trademarklicence-for-the-xivo-ipbx-1-meeting-in-helsinki.html</id><summary type="html">&lt;p&gt;&lt;img alt="Helsinki Harbour in
March" src="/public/.Helsinki_Harbour_28032010_m.jpg" title="Helsinki Harbour in March, mar. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I just got back from the Pixelache Festival in Helsinki&lt;/strong&gt; (1) where we
had a OHANDA (2) meeting with the founding members of the OHANDA
initiative (Juergen Neumann from Freifunk in Berlin and Tuomo Tammenpää
from Yatta in Helskinki) in order to discuss the next steps for the
usage of the &lt;strong&gt;OHANDA licence/trademark&lt;/strong&gt; with OpenHardware projects.&lt;/p&gt;
&lt;p&gt;The OHANDA licence/trademark is definitely the most advanced initiative
so far after the work we had done on the OpenHardwareInitiative and
presented at the OpenTechSummit 2008 (3) in Taiwan with different
hardware projects (OpenMoko, OpenPattern, ...) looking for an umbrella
for their licence adapting the GPL licences used for FOSS projects.&lt;/p&gt;
&lt;p&gt;A first presentation of the OHANDA licence/trademark had been done at
GOSH and PIKSEL (4) with the organization of the trademark and the
relations between hardware designer and users/clients as described below
:&lt;/p&gt;
&lt;p&gt;&lt;img alt="OHANDA Step
5" src="/public/.OHANDA_Trademark_Step5_m.jpg" title="OHANDA Step 5, mar. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;This is a great opportunity for the &lt;strong&gt;XiVO IPBX OpenHardware project to
apply this up-coming licence/trademark&lt;/strong&gt; to the future product (product
registered with a &lt;strong&gt;unique OHANDA #ID&lt;/strong&gt;) and garantee a common
umbrellas for multiple OpenHardware projects.&lt;/p&gt;
&lt;p&gt;We will documente the next steps in the OHANDA licence/trademark
setting-up for the XiVO IPBX OpenHardware project in order to make
available the different files of the project and the registration #ID
to follow the updates from the OHANDA trademark.&lt;/p&gt;
&lt;p&gt;(1) :
http://www.pixelache.ac/helsinki/festival-2010/programme/open-source-hardware/&lt;br /&gt;
(2) : http://www.ohanda.org&lt;br /&gt;
(3) : http://www.sebruiz.net/326&lt;br /&gt;
(4) : http://www.gosh2009.ca/wiki/images/Ohanda_piksel.pdf&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>XiVO OpenHardware IPBX presented at SolutionsLinux2010, Paris</title><link href="http://blog.xivo.io/xivo-openhardware-ipbx-presented-at-solutionslinux2010-paris.html" rel="alternate"></link><updated>2010-03-22T11:15:00-04:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-03-22:xivo-openhardware-ipbx-presented-at-solutionslinux2010-paris.html</id><summary type="html">&lt;p&gt;&lt;img alt="SolutionsLinux2010" src="/public/SolutionsLinux2010_logo.jpg" title="SolutionsLinux2010, mar. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;It was a great pleasure to present the XiVO IPBX OpenHardware project at
SolutionsLinux2010 (the largest Linux fair in France yearly) on last
week and we had several discussions about the architecture choosen for
the IPBX and the interfaces / functionnalities.&lt;/p&gt;
&lt;p&gt;We had some great feedbacks from different VoIP projects and deployment
feedbacks that will help us understand the needs from the market.&lt;/p&gt;
&lt;p&gt;The next steps are now for the OpenHardware community, to present our
prototyping feddbacks and the detailed architecture that we are
targeting.&lt;/p&gt;
&lt;p&gt;Finally, we will presenting soon the work done on the potential
OpenHardware licence that we want to use based on a mixed between
trademarks and CreativeCommons licences.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Opening the bootloader for OpenHardware projects [3] : Barebox (ex-U-boot v2)</title><link href="http://blog.xivo.io/opening-the-bootloader-for-openhardware-projects-3-barebox-ex-u-boot-v2.html" rel="alternate"></link><updated>2010-02-25T11:13:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-02-25:opening-the-bootloader-for-openhardware-projects-3-barebox-ex-u-boot-v2.html</id><summary type="html">&lt;p&gt;Following the previous posts about the "open" bootloaders available to
improve and implement advanced features at the boot of your SoC/CPU, we
are, in this post, considering Barebox (formely known as u-boot v2) as
another open bootloader. Barebox aims at giving the developer and
embedded users the best of u-boot (space, easy-to-flash, handy tools)
and the best of the Linux kernel (Kconfig, Kbuild, standards C API,
building methods identical to the kernel with ARCH/CROSS primitives...).&lt;/p&gt;
&lt;p&gt;The latest documentation for barebox can be found here &lt;a href="2" title="2"&gt;2&lt;/a&gt; and
lists the different key features of barebox that can listed as followed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A posix based file API&lt;/strong&gt;: inside barebox the usual
    open/close/read/write/lseek functions are used. This makes it
    familiar to everyone who has programmed under unix systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Usual shell commands&lt;/strong&gt; like ls/cd/mkdir/echo/cat,...&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The environment is a file store&lt;/strong&gt;. It has currently some
    limitations, of course. The environment is not a real read/write
    filesystem, it is more like a tar archive, or even more like an ar
    archive, because it cannot handle directories. The saveenv command
    saves the files under a certain directory (by default /env) in
    persistent storage (by default /dev/env0). There is a counterpart
    called loadenv, too.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Real filesystem support&lt;/strong&gt;: The loader starts up with mounting a
    ramdisk on /. Then a devfs is mounted on /dev allowing the user (or
    shell commands) to access devices. Apart from these two filesystems
    there is currently one filesystem ported: cramfs. One can mount it
    with the usual mount command.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Device/driver model&lt;/strong&gt;: Devices are no longer described by defines
    in the config file. Instead there are devices which can be
    registered in the board .c file or dynamically allocated. Drivers
    will match upon the devices automatically.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Clocksource support&lt;/strong&gt;: Timekeeping has been simplified by the use
    of the Linux clocksource API. Only one function is needed for a new
    board, no &lt;a href="gs" title="gs"&gt;gs&lt;/a&gt;et_timer&lt;a href="masked" title="masked"&gt;masked&lt;/a&gt;() or
    reset_timer&lt;a href="masked" title="masked"&gt;masked&lt;/a&gt;() functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Kconfig and Kernel build system&lt;/strong&gt;: Only targets which are really
    needed get recompiled. Parallel builds are no problem anymore. This
    also removes the need for many many ifdefs in the code.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Simulation target&lt;/strong&gt;: barebox can be compiled to run under Linux.
    While this is rather useless in real world this is a great debugging
    and development aid. New features can be easily developped and
    tested on long train journeys and started under gdb. There is a
    console driver for linux which emulates a serial device and a tap
    based ethernet driver. Linux files can be mapped to devices under
    barebox to emulate storage devices.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Device parameter support&lt;/strong&gt;: Each device can have a unlimited
    number of parameters. They can be accessed on the command line with
    &amp;lt;devid&amp;gt;.&amp;lt;param&amp;gt;="...", for example 'eth0.ip=192.168.0.7'
    or 'echo \$eth0.ip'&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Initcalls&lt;/strong&gt;: Hooks in the startup process can be archieved
    with *_initcall() directives in each file.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Getopt&lt;/strong&gt;: There is a small getopt implementation. Some commands
    got really complicated (both in code and in usage) due to the fact
    that U-Boot only allowed positional parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Editor: Scripts can be edited with a small editor.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Barebox is under GPLv2 licence.&lt;/p&gt;
&lt;p&gt;&lt;a href="1" title="1"&gt;1&lt;/a&gt; : http://barebox.org/&lt;a href="2" title="2"&gt;2&lt;/a&gt; :
http://barebox.org/documentation/barebox-2010.03.0/&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Opening the bootloader for OpenHardware projects [2] : U-boot - ''Das Unterseeboot\"</title><link href="http://blog.xivo.io/opening-the-bootloader-for-openhardware-projects-2-u-boot-das-unterseeboot.html" rel="alternate"></link><updated>2010-02-23T09:57:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-02-23:opening-the-bootloader-for-openhardware-projects-2-u-boot-das-unterseeboot.html</id><summary type="html">&lt;p&gt;This series of posts are dedicated to the different opensource
bootloaders available out-there that are or can be used for OpenHardware
project such as the XiVO IPBX we are currently developping.&lt;/p&gt;
&lt;p&gt;This second post on the bootloaders available will present U-boot, one
the widely used bootloader for embedded systems. &lt;strong&gt;U-boot stands for
''Das Unterseeboot"&lt;/strong&gt; meaning "the submarine" in German and it's also
known as "Das U-Boot -- the Universal Boot Loader".&lt;/p&gt;
&lt;p&gt;U-boot is currently supporting a vast range of architectures such as:
including PPC, ARM, AVR32, MIPS, x86, 68k, Nios, and MicroBlaze
(soft-core for Xilinx FPGAs).&lt;/p&gt;
&lt;p&gt;The main advantages of the different OpenSource bootloader solutions are
that they allow "userspace" features at the boot such as: interactive
commands (CLI type usually), environment variables(IP, PATH, R/W
permissions...), command scripting(typically shell scripts - namely used
in uboot-v2 a.k.a. barebox and that we will cover in the next post) and
booting from external media (or network fot TFTP rootfs and images
updates for example).&lt;/p&gt;
&lt;p&gt;Einfochips &lt;a href="1" title="1"&gt;1&lt;/a&gt; provides a great documentation guide on how to
port uboot to a new architecture / platform with a stress on the
different files provided by u-boot and the cross-compilation issue for
the targetted platform/board/cpu.&lt;/p&gt;
&lt;p&gt;Usually u-boot is stored (i.e. resides in the beginning memory area of
the flash - internal to the CPU or external-flash) in the beginning area
of the flash. This memory address (sector or block) is defined by by the
board for the very early stage of the boot (in board/xxx/init.S). The
start-up code of the processor is then defined (in cpu/arch/start.S -
like in cpu/bf533/start.S for the Blackfin processor). The boot sequence
symbols are usually noticeable as they are prefixed like "_start".&lt;/p&gt;
&lt;p&gt;First stage loader: U-boot initializes the CPU and the different
peripherals on the board to allows to jump the the memory (DRAM)
subsystems. The processor core is designed to fetch instructions
starting from _START_ADDRESS_ . The core then attempts to execute the
instructions found here. Because this is the top of the memory range,
the instruction found here must be an unconditional branch instruction.
This core has to be hard-coded to configure the upper memory region so
that it is accessible without programming the external bus controller,
to which Flash memory is usually attached. This forces the requirement
to branch to a location within this address space because the processor
is incapable of addressing memory anywhere else until our bootloader
code initializes additional memory regions.&lt;/p&gt;
&lt;p&gt;Second stage loader: U-boot loads itself in the RAM (SDRAM, NVRAM in the
CPU RAM or external RAM) and receives the command to boot the kernel
image. The kernel image is then uncompressed, u-boot loads it to the
memory and gives control to the kernel. The kernel will continue the
execution without u-boot.&lt;/p&gt;
&lt;p&gt;This post is just a first description of U-boot and we will get more
details for specific architectures with x86 platform that we are
targetting for the XiVO IPBX project.&lt;/p&gt;
&lt;p&gt;&lt;a href="1" title="1"&gt;1&lt;/a&gt; :
http://www.einfochips.com/designers-corner/U-boot%20Porting%20guide.pdf&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Opening the bootloader for OpenHardware projects [1] : Coreboot and the BIOS</title><link href="http://blog.xivo.io/opening-the-bootloader-for-openhardware-projects-1-coreboot-and-the-bios.html" rel="alternate"></link><updated>2010-02-15T14:44:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-02-15:opening-the-bootloader-for-openhardware-projects-1-coreboot-and-the-bios.html</id><summary type="html">&lt;p&gt;The OpenHardware community had been seeking for more and more openess
lately in the hardware side, as well as in the software side. We see
more and more steps forward of the software side into the configuration
of the hardware (i.e. HDL projects for reconfigurable hardware such as
FPGAs and CPLDs) to reduce the constraints coming from the hardware
configuration.&lt;/p&gt;
&lt;p&gt;The hardware part is composed of the schematics, pcb routing files,
gerber production files to enable the open description and output of the
features.&lt;/p&gt;
&lt;p&gt;The software part is roughly composed of the bootloader (allowing the
CPU/SoC/uController to boot the memory controller and enable the
peripherals) which will indicate the memory address of the kernel.&lt;/p&gt;
&lt;p&gt;In-between the hardware and the software part of the device, the
bootloader is definitely a important "glue" that should be also open to
allow users to implement their own peripherals initialization and boot
optimization of the kernel. For CPU architecture and namely x86
architecture, the booloader also known as the BIOS had been a closed
industry for quite a long time with companies such as American Trends
providing the boot sequence we all know on our PC-environment. The only
options we could have from this BIOS interface are mainly: boot
sequence, CPU frequency clocking, IRQs configuration and some memory
mappings. "Open BIOS" are then a dream of x86-based OpenHardware
projects and coreboot seems now mature enough to make this future true.&lt;/p&gt;
&lt;p&gt;Previously known as LinuxBIOS, coreboot &lt;a href="1" title="1"&gt;1&lt;/a&gt; is a GPL project
developing an OpenSource BIOS firmware for a various number of platforms
and architecture. As we post this message, coreboot is supporting 213
different mainboards.The different supported mainboards "table of
hardware" are available
here:http://www.coreboot.org/Supported_MotherboardsThe different
chipsets supported are listed in 5 categories: north bridge (fast data
bridge), south bridge(slow data bridge), super I/Os chipsets, CPUs (x86,
PowerPC and emulated QEMU CPUs) and SoCs (AMD Elan SC520 and Intel
Tolapai EP 80579). This list is available
here:http://www.coreboot.org/Supported_Chipsets_and_DevicesThe
different payloads (that we could name also as "second stage loader")
such as the bootloaders and the kernels mainly are listed
here:http://www.coreboot.org/Payloads&lt;/p&gt;
&lt;p&gt;Coreboot is now available in version 3 and provide features such as:
express boot sequence (3s to linux console, advanced network booting,
peripherals advanced support.&lt;/p&gt;
&lt;p&gt;We will test Coreboot v3 on the targetted x86-based CPU chosen for the
XiVO OpenHardware IPBX and give documentation and feedbacks on the usage
feasability for this appliance in upcoming posts as well as describing
with more details the battle to open the bootloaders (once you open the
bootloader you allow the hardware hackers to play with your device
definitely).&lt;/p&gt;
&lt;p&gt;&lt;a href="1" title="1"&gt;1&lt;/a&gt; : http://www.coreboot.org&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Understanding the S0/T0/T1/E1 ISDN protocols and lines</title><link href="http://blog.xivo.io/understanding-the-s0t0t1e1-isdn-protocols-and-lines.html" rel="alternate"></link><updated>2010-02-08T18:47:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-02-08:understanding-the-s0t0t1e1-isdn-protocols-and-lines.html</id><summary type="html">&lt;p&gt;As the XiVO OpenHardware IPBX will be using 4 T0 ISDN lines, it's
important to present and educate reader on how works ISDN lines for IPBX
usage. As the telecommunications world (POTS, PSTN, GSM, ISDN, ADSL) and
the TCP/IP world are now merged into the networks we daily use, we see a
great difference between the knowledge and education of people on the
TCP/IP standards (widely used, massively understood and fine-tuned) and
the telecommunications standards and namely the ISDN (Integrated
Services Digital Network) interfaces used in PBX, IPBX or GSM networks
(E1 lines usually as used in OpenBSC project).&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;ISDN line&lt;/strong&gt; is a circuit-switched telephone network system
implemented on ordinary telephony copper wires on the PSTN/POTS network
to carry digital data and digital voice. The line interface is a
four-wire interface and has separated transmitter and receiver with
configurable behaviour. Every line can be switched either into S/T (four
wires - double pair) or Up (two wires - single pair) mode separately. R,
S/T and U(or Up) mode are named like this by the ITU after their current
order on the ISDN hook-up.&lt;/p&gt;
&lt;p&gt;The standard ISDN line/hookup architecture looks like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="ISDN Hookup overview
architecture" src="/public/.ISDN_1_m.jpg" title="ISDN Hookup overview architecture, fév. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;TE: Terminal Equipment&lt;/p&gt;
&lt;p&gt;TA: Terminal Adapter&lt;/p&gt;
&lt;p&gt;NT: Network Terminator&lt;/p&gt;
&lt;p&gt;S/T: Usually using 4-wires (2 pairs)&lt;/p&gt;
&lt;p&gt;U: Usually using 2-wires (1 pair)&lt;/p&gt;
&lt;p&gt;This overview architecture represents the standardized view of and ISDN
architecture. Operators either provide U interfaces (2-wire long
distance; the variants for interconnection to a public network are
called U0 and Uk0) or S/T interfaces (this is typically a by-country
alternative). In the latter case, a Network Termination owned by the
operator is typically installed in the customer premises because the S/T
bus is limited to a few hundred meters. If the operator provides U
interfaces, the customer can still connect its own Network Termination
and use an S/T interface behind it, or alternatively directly connect an
equipment that supports U interfaces. For private direct ISDN
connections up to a few kilometers, the 2 wire Up (Up0/UpN) interface
also exists.&lt;/p&gt;
&lt;p&gt;The Universal &lt;strong&gt;ISDN port&lt;/strong&gt; is developed according to the ITU-T.430 and
ETSI TBR 003 standards. It consists of the receive and transmit data
pathes with a clock processing unit each, the clock distribution unit.
The block diagram for a standard ISDN port module looks like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="ISDN Universal ISDN Port
Module" src="/public/.ISDN_2_m.jpg" title="ISDN Universal ISDN Port Module, fév. 2010" /&gt;&lt;/p&gt;
&lt;p&gt;TE Mode: Terminal Equipment mode, the TE is always taken as
synchronisation source for ISDN applications (like the CLK is delivered
from the Central Office Switch).&lt;/p&gt;
&lt;p&gt;NT Mode: Network Terminator mode, the NT mode 192kHz bit clock and the
8kHz frame clock are derived from FSYNC.&lt;/p&gt;
&lt;p&gt;The ISDN line port is based on 3 layers following different standards:&lt;/p&gt;
&lt;p&gt;•Layer 1: ITU-T I.430&lt;/p&gt;
&lt;p&gt;•Layer 2: ITU-T Q.920, ITU-T Q.921&lt;/p&gt;
&lt;p&gt;•Layer 3: ITU-T Q.930 and ITU-T Q.931&lt;/p&gt;
&lt;p&gt;At the layer 1, the line is based on the &lt;strong&gt;BRI (Basic Rate Interface)&lt;/strong&gt;
which delivers 144kbits/s (for S/T mode) broken into two 64kbits/s B
(Bearer) channel for data and one 16kbits/s D (Delta) channel for
signaling. The overhead is then added to the 144kbits/s (for a total of
196kbits/s) due to Frame Synchronization, Echo Channel (echo of the
D-channel received in NT mode to detect collision on the TX for the
D-channel when the S/T bus is shared) and Electrical Balancing bits. BRI
are popular in Europe and Japan. The B-channel uses a standard 64 kbit/s
datarate voice channel of 8 bits sampled at 8 kHz with G.711 encoding.
B-Channels can also be used to carry data, since they are nothing more
than digital channels. T0 (or S0) refers then to a BRI ISDN line
provided by the carrier to connect the IPBX to the public network.&lt;/p&gt;
&lt;p&gt;The raw interface available with BRI is called T0 (in Europe). Some ISDN
carriers provide S0 interface (like the Duo/Itoo service in France for
several end-devices that can communicate between each other).In France,
the "Numeris" service provides a TNR (Terminaison Numerique de Reseau
with device such as the Sagem TNR IPS 4G) end-device that does the
conversion between the U interface and the T interface. The TNA
(Terminaison Numerique d'Abonne) does the conversion between the T
interface and the S interface. In most countries, except North-America,
the carrier provides the TNR end-device and the TNA device is provided
by the end-user customer (usually the PBX interface).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PRI (Primary Rate Interface)&lt;/strong&gt; are more popular in North American ISDN
carriers,&lt;/p&gt;
&lt;p&gt;In Europe we see PRI E1 lines carrying 30 B-channels and 1 D-channel
(2048 kbits/s)&lt;/p&gt;
&lt;p&gt;In North-America, we see PRI T1 lines carrying 23 B-channels and 1
D-channel (1544 kbits/s).&lt;/p&gt;
&lt;p&gt;Japan also has PRI J1 lines similar to T1 lines with 23-B+1-D.&lt;/p&gt;
&lt;p&gt;The ISDN controller chip on the hardware will be connected to the CPU
through two buses (SPI bus to control the chip and transmit D-channel
from the CPU and the PCM (also named TDM bus) bus to transmit D-channels
data with the ISDN lines). The number of simultaneous calls then had to
be calculated with the choice of the ISDN capability and the codec used
on those ones.&lt;/p&gt;
&lt;p&gt;This blog post aims at giving an overview of the ISDN interface used on
the IPBX and namely in the XiVO Hardware in order to understand the
hardware project as well as the protocols used into XiVo Hardware.&lt;/p&gt;
&lt;p&gt;Annexes to the article:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;More acronyms:&lt;/strong&gt;LAP-D: Link Access Procedure on the D-channel&lt;br /&gt;
HDLC: High-level Data-Link Control&lt;br /&gt;
TNR (France): Terminaison Numérique de Réseau&lt;br /&gt;
TNA (france):Terminaison Numérique d'Abonné&lt;br /&gt;
CSMA-CR: Carrier Sense Multiple Acess-Contention Resolution&lt;br /&gt;
TEI: Terminal Endpoint Identifier&lt;br /&gt;
SAPI: Service Access Point Identifier&lt;br /&gt;
CEPI: Connection EndPoint Identifier  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Multiplexing value of 64kbits/s-channels:&lt;/strong&gt;T0: 2B+1DEurope:
2048kbits/s (30), 8448kbits/s (120), 34 368kbits/s (480), 139 264kbits/s
(1960)North-America: 1544kbits/s (24), 6312kbits/s (96), 44 736kbits/s
(1584)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HDLC Frames Format:&lt;/strong&gt;&lt;br /&gt;
F (Flag) | Ad (Adresses) | C (Controle) | CALL REQUEST | FCS (Frame
Controle Sequence) | F(Flag) |&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Choosing the right CPU/SoC for an OpenHardware IPBX</title><link href="http://blog.xivo.io/choosing-the-right-cpusoc-for-an-openhardware-ipbx.html" rel="alternate"></link><updated>2010-02-01T10:56:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-02-01:choosing-the-right-cpusoc-for-an-openhardware-ipbx.html</id><summary type="html">&lt;p&gt;Once one starts an OpenHardware project, you should be thinking about
the core of the device to be designed and namely the CPU/SoC
(System-on-Chip integrating the CPU and the peripherals controllers
built-in the chip). The CPU/SoC is the core of the system and will be
holding the BSP (BoardSupportPackage) with the Linux kernel and the
different drivers/controllers (kernel modules and drivers) and the IPBX
software core system (XiVO and Asterisk in this case) communicating with
the ISDN/FXO/FXS interfaces.&lt;/p&gt;
&lt;p&gt;Ideally, to integrate the OpenHardware issue to the core of the device,
the CPU/SoC has to be as open (as in "open specifications", "open
datasheet" or "open HDL source code") as possible. Then several issues
has to be clarified such as:&lt;/p&gt;
&lt;p&gt;-The smooth technical gap for users and developers to integrate, use and
hack with the OpenHardware IPBX&lt;/p&gt;
&lt;p&gt;-How open can the CPU/SoC be opened ? The next step will be to use
"OpenCores" CPU based on FPGA platform (such as the ones used for
OpenPattern project, the Milkymist Softcore integrating lm32 or the USRP
platform used to integrate the GnuRadio framework)&lt;/p&gt;
&lt;p&gt;-What platform is "more" for existing CPU/SoC outhere between
x86/ARM/MIPS/others?&lt;/p&gt;
&lt;p&gt;Lots of the current IPBX projects are mainly using the Blackfin DSP
(i.e. the Astfin project) from AnalogDevices that allows advanced DSP
(Digital Signal Processing) functions but lacks openess in terms of
specifications/data-sheets as this point.&lt;/p&gt;
&lt;p&gt;Our current objectives is to target an x86 platform that smooths downs
the porting of the existing XiVO framework or the integration of a
ARM/MIPS CPU/SoC with open specifications.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Hardware specifications 1.0 of the XiVO appliance</title><link href="http://blog.xivo.io/hardware-specifications-10-of-the-xivo-appliance.html" rel="alternate"></link><updated>2010-01-25T11:21:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-01-25:hardware-specifications-10-of-the-xivo-appliance.html</id><summary type="html">&lt;p&gt;The goal of the XiVO OpenHardware project is to to develop a open-specs,
open-docs appliance from the design of the hardware project to the CAD
files and production files underneath the project. The target of this
appliance is a small IPBX appliance ideal for SOHO requirements in terms
of IP-phone lines as well as analog connectivity for fax/analog lines.&lt;/p&gt;
&lt;p&gt;The following bloc diagram expresses the different features targetted on
the XiVO OpenHardware project to allow the appliance to interact with 4
PSTN T0 lines, analog FXO and FXS interfaces as well as usual IP
networks connectivities, storage interfaces and configuration/debugging
interfaces.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XiVO Hardware
specificatons" src="/public/.XiVO_Appliance_Hardware_Specifications_m.jpg" title="XiVO Hardware specificatons, janv. 2010" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The CPU is purposely chosen with a x86 architecture to allow a
    smooth porting from the existing XiVO framework into the hardware.
    The BSP is a debian-based Linux and will be easily into this
    CPU architecture. The CPU will probably behaves as a SoC
    intregrating the different controllers for the peripherals. RAM will
    be connected&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;ISDN Lines: 4 T0 lines which allows 8 simultaneous communications.
    These interfaces will be controlled by a ISDN chip connected to the
    CPU (SPI/TDM interfaces)&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Analog phone lines: The appliance is supposed to interact with
    existing PABX and to act as a PABX for the local phones on the
    SOHO network. The FXS (Foreign eXchange Subscriber) interface will
    allow the IPBX to connect to PSTN lines as a subscriber for
    analog/fax needs. The FXO (Foreign eXchange Office) interface will
    allow the IPBX to act as an analog PBX to connect local analog
    phones to the IPBX and allows a SOHO phone environment mixed between
    IP-phones and analog phones.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;IP Network: The XiVO IPBX will have 2 100baseT Ethernet interfaces
    for WAN/LAN IP connectivity&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Storage: The XiVO IPBX will have external SD, internal HDD storage
    for the BSP config files as well as for the logs, firewall rules...&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;Debugging/Configuration: The XiVO IPBX will have a USB interface
    (USB host) allowing the connexion of external devices. Also for
    debugging and output console, the XiVO IPBX will have a RS232
    external serial interface as well as on-PCB console ports on
    the CPU.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next steps: prototyping of the different bloc diagram connected to the
EVB (EValuation Board) of the CPU based on the XiVO framework.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Blog of the OpenHardware XiVO IPBX Project</title><link href="http://blog.xivo.io/blog-of-the-openhardware-xivo-ipbx-project.html" rel="alternate"></link><updated>2010-01-14T15:04:00-05:00</updated><author><name>xcarcelle</name></author><id>tag:blog.xivo.io,2010-01-14:blog-of-the-openhardware-xivo-ipbx-project.html</id><summary type="html">&lt;p&gt;This blog is dedicated to the XiVO IPBX OpenHardware project and will be
displaying the different steps of the project as well as the results,
prototyping and feedbacks from each step.&lt;/p&gt;
&lt;p&gt;Xavier Carcelle.&lt;/p&gt;
&lt;/p&gt;</summary></entry></feed>